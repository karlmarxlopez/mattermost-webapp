<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="2677" failures="0" time="184.998">
  <testsuite name="handleEvent" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:47:21" time="8.581" tests="25">
    <testcase classname="handleEvent should dispatch channel updated event properly" name="handleEvent should dispatch channel updated event properly" time="0.003">
    </testcase>
    <testcase classname="handlePostEditEvent post edited" name="handlePostEditEvent post edited" time="0.002">
    </testcase>
    <testcase classname="handleUserRemovedEvent should close RHS" name="handleUserRemovedEvent should close RHS" time="0.002">
    </testcase>
    <testcase classname="handleUserRemovedEvent shouldn&apos;t remove the team user if the user have view members permissions" name="handleUserRemovedEvent shouldn&apos;t remove the team user if the user have view members permissions" time="0.001">
    </testcase>
    <testcase classname="handleUserRemovedEvent should remove the team user if the user doesn&apos;t have view members permissions" name="handleUserRemovedEvent should remove the team user if the user doesn&apos;t have view members permissions" time="0.001">
    </testcase>
    <testcase classname="handleUserRemovedEvent should load the remover_id user if is not available in the store" name="handleUserRemovedEvent should load the remover_id user if is not available in the store" time="0.001">
    </testcase>
    <testcase classname="handleUserRemovedEvent should not load the remover_id user if is available in the store" name="handleUserRemovedEvent should not load the remover_id user if is available in the store" time="0.001">
    </testcase>
    <testcase classname="handleUserRemovedEvent should redirect if the user removed is the current user from the current channel" name="handleUserRemovedEvent should redirect if the user removed is the current user from the current channel" time="0">
    </testcase>
    <testcase classname="handleUserRemovedEvent should not redirect if the user removed is not the current user or the channel is not the current channel, or the remover and the user is equal" name="handleUserRemovedEvent should not redirect if the user removed is not the current user or the channel is not the current channel, or the remover and the user is equal" time="0.004">
    </testcase>
    <testcase classname="handleNewPostEvent should receive post correctly" name="handleNewPostEvent should receive post correctly" time="0.001">
    </testcase>
    <testcase classname="handleNewPostEvent should set other user to online" name="handleNewPostEvent should set other user to online" time="0.002">
    </testcase>
    <testcase classname="handleNewPostEvent should not set other user to online if post was from autoresponder" name="handleNewPostEvent should not set other user to online if post was from autoresponder" time="0">
    </testcase>
    <testcase classname="handleNewPostEvents should receive multiple posts correctly" name="handleNewPostEvents should receive multiple posts correctly" time="0.001">
    </testcase>
    <testcase classname="reconnect should call syncPostsInChannel when socket reconnects" name="reconnect should call syncPostsInChannel when socket reconnects" time="0.001">
    </testcase>
    <testcase classname="handleUserTypingEvent should dispatch a TYPING event" name="handleUserTypingEvent should dispatch a TYPING event" time="0.001">
    </testcase>
    <testcase classname="handleUserTypingEvent should possibly load missing users" name="handleUserTypingEvent should possibly load missing users" time="0">
    </testcase>
    <testcase classname="handleUserTypingEvent should load statuses for users that are not online" name="handleUserTypingEvent should load statuses for users that are not online" time="0">
    </testcase>
    <testcase classname="handleUserTypingEvent should not load statuses for users that are online" name="handleUserTypingEvent should not load statuses for users that are online" time="0.001">
    </testcase>
    <testcase classname="handleChannelUpdatedEvent when a channel is updated" name="handleChannelUpdatedEvent when a channel is updated" time="0">
    </testcase>
    <testcase classname="handleChannelUpdatedEvent should not change URL when current channel is updated" name="handleChannelUpdatedEvent should not change URL when current channel is updated" time="0.001">
    </testcase>
    <testcase classname="handleChannelUpdatedEvent should not change URL when another channel is updated" name="handleChannelUpdatedEvent should not change URL when another channel is updated" time="0">
    </testcase>
    <testcase classname="handlePluginEnabled/handlePluginDisabled handlePluginEnabled when a plugin is enabled" name="handlePluginEnabled/handlePluginDisabled handlePluginEnabled when a plugin is enabled" time="0.003">
    </testcase>
    <testcase classname="handlePluginEnabled/handlePluginDisabled handlePluginEnabled when a plugin is upgraded" name="handlePluginEnabled/handlePluginDisabled handlePluginEnabled when a plugin is upgraded" time="0.002">
    </testcase>
    <testcase classname="handlePluginEnabled/handlePluginDisabled handlePluginDisabled when a plugin is disabled" name="handlePluginEnabled/handlePluginDisabled handlePluginDisabled when a plugin is disabled" time="0.002">
    </testcase>
    <testcase classname="handleLeaveTeam when a user leave a team" name="handleLeaveTeam when a user leave a team" time="0">
    </testcase>
  </testsuite>
  <testsuite name="PostUtils.containsAtChannel" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:47:30" time="1.492" tests="69">
    <testcase classname="PostUtils.containsAtChannel should return correct @all (same for @channel)" name="PostUtils.containsAtChannel should return correct @all (same for @channel)" time="0.006">
    </testcase>
    <testcase classname="PostUtils.shouldFocusMainTextbox basic cases" name="PostUtils.shouldFocusMainTextbox basic cases" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress null/empty: Test for null event" name="PostUtils.postMessageOnKeyPress null/empty: Test for null event" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress null/empty: Test for empty message" name="PostUtils.postMessageOnKeyPress null/empty: Test for empty message" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress null/empty: Test for shiftKey event" name="PostUtils.postMessageOnKeyPress null/empty: Test for shiftKey event" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress null/empty: Test for altKey event" name="PostUtils.postMessageOnKeyPress null/empty: Test for altKey event" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress no override: Test no override setting" name="PostUtils.postMessageOnKeyPress no override: Test no override setting" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress no override: empty message" name="PostUtils.postMessageOnKeyPress no override: empty message" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress no override: empty message on ctrl + enter" name="PostUtils.postMessageOnKeyPress no override: empty message on ctrl + enter" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey, with opening and closing backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey, with opening and closing backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with metaKey" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with metaKey" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks" time="0.005">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks, with language set" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks, with language set" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks, with line break on last line" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks, with line break on last line" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks, with multiple line breaks on last lines" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks, with multiple line breaks on last lines" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening and closing backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening and closing backticks" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening and closing backticks, with language set" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening and closing backticks, with language set" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with inline opening backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with inline opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, without opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, without opening backticks" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, without opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, without opening backticks" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with metaKey, without opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with metaKey, without opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with line break" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with line break" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with multiple line breaks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with multiple line breaks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with language set" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with language set" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening and closing backticks, with language set" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening and closing backticks, with language set" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening and closing backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening and closing backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with last line of empty spaces" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with last line of empty spaces" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with empty line break on last line" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with empty line break on last line" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with multiple empty line breaks on last lines" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with multiple empty line breaks on last lines" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with multiple empty line breaks and spaces on last lines" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with multiple empty line breaks and spaces on last lines" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, without line break on last line" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, without line break on last line" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with inline opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with inline opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress now unspecified, last channel switch unspecified" name="PostUtils.postMessageOnKeyPress now unspecified, last channel switch unspecified" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress now specified, last channel switch unspecified" name="PostUtils.postMessageOnKeyPress now specified, last channel switch unspecified" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress now specified, last channel switch unspecified" name="PostUtils.postMessageOnKeyPress now specified, last channel switch unspecified" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress last channel switch within threshold" name="PostUtils.postMessageOnKeyPress last channel switch within threshold" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress last channel switch at threshold" name="PostUtils.postMessageOnKeyPress last channel switch at threshold" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress last channel switch outside threshold" name="PostUtils.postMessageOnKeyPress last channel switch outside threshold" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress last channel switch well outside threshold" name="PostUtils.postMessageOnKeyPress last channel switch well outside threshold" time="0">
    </testcase>
    <testcase classname="PostUtils.getOldestPostId Should not return LOAD_OLDER_MESSAGES_TRIGGER" name="PostUtils.getOldestPostId Should not return LOAD_OLDER_MESSAGES_TRIGGER" time="0.001">
    </testcase>
    <testcase classname="PostUtils.getOldestPostId Should not return OLDER_MESSAGES_LOADER" name="PostUtils.getOldestPostId Should not return OLDER_MESSAGES_LOADER" time="0">
    </testcase>
    <testcase classname="PostUtils.getOldestPostId Should not return CHANNEL_INTRO_MESSAGE" name="PostUtils.getOldestPostId Should not return CHANNEL_INTRO_MESSAGE" time="0.001">
    </testcase>
    <testcase classname="PostUtils.getOldestPostId Should not return dateline" name="PostUtils.getOldestPostId Should not return dateline" time="0">
    </testcase>
    <testcase classname="PostUtils.getOldestPostId Should not return START_OF_NEW_MESSAGES" name="PostUtils.getOldestPostId Should not return START_OF_NEW_MESSAGES" time="0.003">
    </testcase>
    <testcase classname="PostUtils.getPreviousPostId Should skip dateline" name="PostUtils.getPreviousPostId Should skip dateline" time="0.001">
    </testcase>
    <testcase classname="PostUtils.getPreviousPostId Should skip START_OF_NEW_MESSAGES" name="PostUtils.getPreviousPostId Should skip START_OF_NEW_MESSAGES" time="0">
    </testcase>
    <testcase classname="PostUtils.getPreviousPostId Should return first postId from combined system messages" name="PostUtils.getPreviousPostId Should return first postId from combined system messages" time="0">
    </testcase>
    <testcase classname="PostUtils.getLatestPostId Should not return LOAD_OLDER_MESSAGES_TRIGGER" name="PostUtils.getLatestPostId Should not return LOAD_OLDER_MESSAGES_TRIGGER" time="0.001">
    </testcase>
    <testcase classname="PostUtils.getLatestPostId Should not return OLDER_MESSAGES_LOADER" name="PostUtils.getLatestPostId Should not return OLDER_MESSAGES_LOADER" time="0">
    </testcase>
    <testcase classname="PostUtils.getLatestPostId Should not return CHANNEL_INTRO_MESSAGE" name="PostUtils.getLatestPostId Should not return CHANNEL_INTRO_MESSAGE" time="0.001">
    </testcase>
    <testcase classname="PostUtils.getLatestPostId Should not return dateline" name="PostUtils.getLatestPostId Should not return dateline" time="0">
    </testcase>
    <testcase classname="PostUtils.getLatestPostId Should not return START_OF_NEW_MESSAGES" name="PostUtils.getLatestPostId Should not return START_OF_NEW_MESSAGES" time="0">
    </testcase>
    <testcase classname="PostUtils.getLatestPostId Should return first postId from combined system messages" name="PostUtils.getLatestPostId Should return first postId from combined system messages" time="0.001">
    </testcase>
    <testcase classname="PostUtils.createAriaLabelForPost Should show username, timestamp, message, attachments, reactions, flagged and pinned" name="PostUtils.createAriaLabelForPost Should show username, timestamp, message, attachments, reactions, flagged and pinned" time="0.028">
    </testcase>
    <testcase classname="PostUtils.createAriaLabelForPost Should show that message is a reply" name="PostUtils.createAriaLabelForPost Should show that message is a reply" time="0.001">
    </testcase>
    <testcase classname="PostUtils.createAriaLabelForPost Should translate emoji into {emoji-name} emoji" name="PostUtils.createAriaLabelForPost Should translate emoji into {emoji-name} emoji" time="0.002">
    </testcase>
    <testcase classname="PostUtils.splitMessageBasedOnCaretPosition should return an object with two strings when given context and message" name="PostUtils.splitMessageBasedOnCaretPosition should return an object with two strings when given context and message" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/IntlProvider" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:47:31" time="0.508" tests="7">
    <testcase classname="components/IntlProvider should render children when passed translation strings" name="components/IntlProvider should render children when passed translation strings" time="0.015">
    </testcase>
    <testcase classname="components/IntlProvider should render children when passed translation strings for a non-default locale" name="components/IntlProvider should render children when passed translation strings for a non-default locale" time="0.002">
    </testcase>
    <testcase classname="components/IntlProvider should render null when missing translation strings" name="components/IntlProvider should render null when missing translation strings" time="0.001">
    </testcase>
    <testcase classname="components/IntlProvider on mount, should attempt to load missing translations" name="components/IntlProvider on mount, should attempt to load missing translations" time="0.09">
    </testcase>
    <testcase classname="components/IntlProvider on mount, should not attempt to load when given translations" name="components/IntlProvider on mount, should not attempt to load when given translations" time="0.001">
    </testcase>
    <testcase classname="components/IntlProvider on locale change, should attempt to load missing translations" name="components/IntlProvider on locale change, should attempt to load missing translations" time="0.002">
    </testcase>
    <testcase classname="components/IntlProvider on locale change, should not attempt to load when given translations" name="components/IntlProvider on locale change, should not attempt to load when given translations" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/Root" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:47:32" time="18.76" tests="5">
    <testcase classname="components/Root should load config and license on mount and redirect to sign-up page" name="components/Root should load config and license on mount and redirect to sign-up page" time="0.006">
    </testcase>
    <testcase classname="components/Root should load user, config, and license on mount and redirect to defaultTeam on success" name="components/Root should load user, config, and license on mount and redirect to defaultTeam on success" time="0.001">
    </testcase>
    <testcase classname="components/Root should load user, config, and license on mount and should not redirect to defaultTeam id pathname is not root" name="components/Root should load user, config, and license on mount and should not redirect to defaultTeam id pathname is not root" time="0.001">
    </testcase>
    <testcase classname="components/Root should load config and enable dev mode features" name="components/Root should load config and enable dev mode features" time="0.002">
    </testcase>
    <testcase classname="components/Root should load config and not enable dev mode features" name="components/Root should load config and not enable dev mode features" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/needs_team" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:47:51" time="0.501" tests="4">
    <testcase classname="components/needs_team should match snapshots for init with existing team" name="components/needs_team should match snapshots for init with existing team" time="0.008">
    </testcase>
    <testcase classname="components/needs_team check for addUserToTeam call if team does not exist" name="components/needs_team check for addUserToTeam call if team does not exist" time="0.002">
    </testcase>
    <testcase classname="components/needs_team test for redirection if addUserToTeam api fails" name="components/needs_team test for redirection if addUserToTeam api fails" time="0.001">
    </testcase>
    <testcase classname="components/needs_team test for team join flow with new switch" name="components/needs_team test for team join flow with new switch" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/channel_layout/ChannelController" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:47:51" time="0.442" tests="6">
    <testcase classname="components/channel_layout/ChannelController Should have app__body and channel-view classes on body after mount" name="components/channel_layout/ChannelController Should have app__body and channel-view classes on body after mount" time="0.003">
    </testcase>
    <testcase classname="components/channel_layout/ChannelController Should have os--windows class on body for windows 32" name="components/channel_layout/ChannelController Should have os--windows class on body for windows 32" time="0.001">
    </testcase>
    <testcase classname="components/channel_layout/ChannelController Should have os--windows class on body for windows 64" name="components/channel_layout/ChannelController Should have os--windows class on body for windows 64" time="0.001">
    </testcase>
    <testcase classname="components/channel_layout/ChannelController Should have os--mac class on body for MacIntel" name="components/channel_layout/ChannelController Should have os--mac class on body for MacIntel" time="0.001">
    </testcase>
    <testcase classname="components/channel_layout/ChannelController Should have os--mac class on body for MacPPC" name="components/channel_layout/ChannelController Should have os--mac class on body for MacPPC" time="0">
    </testcase>
    <testcase classname="components/channel_layout/ChannelController Should remove app__body and channel-view classes on body on unmount" name="components/channel_layout/ChannelController Should remove app__body and channel-view classes on body on unmount" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="PostBodyAdditionalContent" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:47:52" time="0.53" tests="16">
    <testcase classname="PostBodyAdditionalContent with an image preview should render correctly" name="PostBodyAdditionalContent with an image preview should render correctly" time="0.017">
    </testcase>
    <testcase classname="PostBodyAdditionalContent with an image preview should render the toggle after a message containing more than just a link" name="PostBodyAdditionalContent with an image preview should render the toggle after a message containing more than just a link" time="0.001">
    </testcase>
    <testcase classname="PostBodyAdditionalContent with an image preview should not render content when isEmbedVisible is false" name="PostBodyAdditionalContent with an image preview should not render content when isEmbedVisible is false" time="0.003">
    </testcase>
    <testcase classname="PostBodyAdditionalContent with a message attachment should render correctly" name="PostBodyAdditionalContent with a message attachment should render correctly" time="0.005">
    </testcase>
    <testcase classname="PostBodyAdditionalContent with a message attachment should render content when isEmbedVisible is false" name="PostBodyAdditionalContent with a message attachment should render content when isEmbedVisible is false" time="0.002">
    </testcase>
    <testcase classname="PostBodyAdditionalContent with an opengraph preview should render correctly" name="PostBodyAdditionalContent with an opengraph preview should render correctly" time="0.003">
    </testcase>
    <testcase classname="PostBodyAdditionalContent with an opengraph preview should render the toggle after a message containing more than just a link" name="PostBodyAdditionalContent with an opengraph preview should render the toggle after a message containing more than just a link" time="0.001">
    </testcase>
    <testcase classname="PostBodyAdditionalContent with an opengraph preview should render content when isEmbedVisible is false" name="PostBodyAdditionalContent with an opengraph preview should render content when isEmbedVisible is false" time="0.002">
    </testcase>
    <testcase classname="PostBodyAdditionalContent with a YouTube video should render correctly" name="PostBodyAdditionalContent with a YouTube video should render correctly" time="0.003">
    </testcase>
    <testcase classname="PostBodyAdditionalContent with a YouTube video should render the toggle after a message containing more than just a link" name="PostBodyAdditionalContent with a YouTube video should render the toggle after a message containing more than just a link" time="0.001">
    </testcase>
    <testcase classname="PostBodyAdditionalContent with a YouTube video should not render content when isEmbedVisible is false" name="PostBodyAdditionalContent with a YouTube video should not render content when isEmbedVisible is false" time="0.002">
    </testcase>
    <testcase classname="PostBodyAdditionalContent with a normal link Should render nothing if the registered plugins don&apos;t match" name="PostBodyAdditionalContent with a normal link Should render nothing if the registered plugins don&apos;t match" time="0.003">
    </testcase>
    <testcase classname="PostBodyAdditionalContent with a normal link Should render the plugin component if it matches and is toggeable" name="PostBodyAdditionalContent with a normal link Should render the plugin component if it matches and is toggeable" time="0.008">
    </testcase>
    <testcase classname="PostBodyAdditionalContent with a normal link Should render the plugin component if it matches and is not toggeable" name="PostBodyAdditionalContent with a normal link Should render the plugin component if it matches and is not toggeable" time="0.004">
    </testcase>
    <testcase classname="PostBodyAdditionalContent with a normal link Should render nothing if the plugin matches but isEmbedVisible is false" name="PostBodyAdditionalContent with a normal link Should render nothing if the plugin matches but isEmbedVisible is false" time="0.002">
    </testcase>
    <testcase classname="PostBodyAdditionalContent should call toggleEmbedVisibility with post id" name="PostBodyAdditionalContent should call toggleEmbedVisibility with post id" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/admin_definition" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:47:52" time="7.739" tests="1">
    <testcase classname="components/admin_console/admin_definition should pass all validations checks" name="components/admin_console/admin_definition should pass all validations checks" time="0.113">
    </testcase>
  </testsuite>
  <testsuite name="components/Menu" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:00" time="0.411" tests="6">
    <testcase classname="components/Menu should match snapshot" name="components/Menu should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/Menu should match snapshot with id" name="components/Menu should match snapshot with id" time="0.002">
    </testcase>
    <testcase classname="components/Menu should match snapshot with openLeft and openUp when is mobile" name="components/Menu should match snapshot with openLeft and openUp when is mobile" time="0.001">
    </testcase>
    <testcase classname="components/Menu should match snapshot with openLeft and openUp" name="components/Menu should match snapshot with openLeft and openUp" time="0.002">
    </testcase>
    <testcase classname="components/Menu should hide the correct dividers" name="components/Menu should hide the correct dividers" time="0.006">
    </testcase>
    <testcase classname="components/Menu should hide the correct dividers on mobile" name="components/Menu should hide the correct dividers on mobile" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/post_list" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:00" time="0.547" tests="18">
    <testcase classname="components/post_view/post_list snapshot for loading when there are no posts" name="components/post_view/post_list snapshot for loading when there are no posts" time="0.003">
    </testcase>
    <testcase classname="components/post_view/post_list snapshot with couple of posts" name="components/post_view/post_list snapshot with couple of posts" time="0.002">
    </testcase>
    <testcase classname="components/post_view/post_list Should call postsOnLoad" name="components/post_view/post_list Should call postsOnLoad" time="0.001">
    </testcase>
    <testcase classname="components/post_view/post_list Should call for before and afterPosts" name="components/post_view/post_list Should call for before and afterPosts" time="0.008">
    </testcase>
    <testcase classname="components/post_view/post_list VirtPostList Should have formattedPostIds as prop" name="components/post_view/post_list VirtPostList Should have formattedPostIds as prop" time="0.002">
    </testcase>
    <testcase classname="components/post_view/post_list getOldestVisiblePostId and getLatestVisiblePostId should return based on postListIds" name="components/post_view/post_list getOldestVisiblePostId and getLatestVisiblePostId should return based on postListIds" time="0.001">
    </testcase>
    <testcase classname="components/post_view/post_list Should call for permalink posts" name="components/post_view/post_list Should call for permalink posts" time="0.001">
    </testcase>
    <testcase classname="components/post_view/post_list Should call for loadLatestPosts" name="components/post_view/post_list Should call for loadLatestPosts" time="0.001">
    </testcase>
    <testcase classname="components/post_view/post_list getPostsSince should call getPostsSince on channel switch" name="components/post_view/post_list getPostsSince should call getPostsSince on channel switch" time="0.002">
    </testcase>
    <testcase classname="components/post_view/post_list canLoadMorePosts Should not call loadLatestPosts if postListIds is empty" name="components/post_view/post_list canLoadMorePosts Should not call loadLatestPosts if postListIds is empty" time="0.001">
    </testcase>
    <testcase classname="components/post_view/post_list canLoadMorePosts Should not call loadPosts if olderPosts or newerPosts are loading" name="components/post_view/post_list canLoadMorePosts Should not call loadPosts if olderPosts or newerPosts are loading" time="0.003">
    </testcase>
    <testcase classname="components/post_view/post_list canLoadMorePosts Should not call loadPosts if there were more than MAX_EXTRA_PAGES_LOADED" name="components/post_view/post_list canLoadMorePosts Should not call loadPosts if there were more than MAX_EXTRA_PAGES_LOADED" time="0.002">
    </testcase>
    <testcase classname="components/post_view/post_list canLoadMorePosts Should call getPostsBefore if not all older posts are loaded" name="components/post_view/post_list canLoadMorePosts Should call getPostsBefore if not all older posts are loaded" time="0.002">
    </testcase>
    <testcase classname="components/post_view/post_list canLoadMorePosts Should call getPostsAfter if all older posts are loaded and not newerPosts" name="components/post_view/post_list canLoadMorePosts Should call getPostsAfter if all older posts are loaded and not newerPosts" time="0.003">
    </testcase>
    <testcase classname="components/post_view/post_list canLoadMorePosts Should call getPostsAfter canLoadMorePosts is requested with AFTER_ID" name="components/post_view/post_list canLoadMorePosts Should call getPostsAfter canLoadMorePosts is requested with AFTER_ID" time="0.005">
    </testcase>
    <testcase classname="components/post_view/post_list Auto retry of load more posts Should retry loadPosts on failure of loadPosts" name="components/post_view/post_list Auto retry of load more posts Should retry loadPosts on failure of loadPosts" time="0.002">
    </testcase>
    <testcase classname="components/post_view/post_list markChannelAsReadAndViewed Should call markChannelAsReadAndViewed on postsOnLoad" name="components/post_view/post_list markChannelAsReadAndViewed Should call markChannelAsReadAndViewed on postsOnLoad" time="0.001">
    </testcase>
    <testcase classname="components/post_view/post_list markChannelAsReadAndViewed Should not call markChannelAsReadAndViewed as it is a permalink" name="components/post_view/post_list markChannelAsReadAndViewed Should not call markChannelAsReadAndViewed as it is a permalink" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AdminConsolePluginsIndex.getPluginEntries" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:01" time="0.429" tests="9">
    <testcase classname="AdminConsolePluginsIndex.getPluginEntries should return an empty map in case of plugins is undefined" name="AdminConsolePluginsIndex.getPluginEntries should return an empty map in case of plugins is undefined" time="0.002">
    </testcase>
    <testcase classname="AdminConsolePluginsIndex.getPluginEntries should return an empty map in case of plugins is null" name="AdminConsolePluginsIndex.getPluginEntries should return an empty map in case of plugins is null" time="0">
    </testcase>
    <testcase classname="AdminConsolePluginsIndex.getPluginEntries should return an empty map in case of plugins is empty" name="AdminConsolePluginsIndex.getPluginEntries should return an empty map in case of plugins is empty" time="0.001">
    </testcase>
    <testcase classname="AdminConsolePluginsIndex.getPluginEntries should return map with the text extracted from plugins" name="AdminConsolePluginsIndex.getPluginEntries should return map with the text extracted from plugins" time="0.003">
    </testcase>
    <testcase classname="AdminConsolePluginsIndex.getPluginEntries should return map with the text extracted from plugins" name="AdminConsolePluginsIndex.getPluginEntries should return map with the text extracted from plugins" time="0.001">
    </testcase>
    <testcase classname="AdminConsolePluginsIndex.getPluginEntries should not return the markdown link texts" name="AdminConsolePluginsIndex.getPluginEntries should not return the markdown link texts" time="0.001">
    </testcase>
    <testcase classname="AdminConsolePluginsIndex.getPluginEntries should extract the text from label field" name="AdminConsolePluginsIndex.getPluginEntries should extract the text from label field" time="0.001">
    </testcase>
    <testcase classname="AdminConsolePluginsIndex.getPluginEntries should index the enable plugin setting" name="AdminConsolePluginsIndex.getPluginEntries should index the enable plugin setting" time="0.001">
    </testcase>
    <testcase classname="AdminConsolePluginsIndex.getPluginEntries should index the enable plugin setting even if other settings are not present" name="AdminConsolePluginsIndex.getPluginEntries should index the enable plugin setting even if other settings are not present" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/menu/menu_items/submenu_item" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:01" time="0.399" tests="3">
    <testcase classname="components/widgets/menu/menu_items/submenu_item empty subMenu should match snapshot" name="components/widgets/menu/menu_items/submenu_item empty subMenu should match snapshot" time="0.025">
    </testcase>
    <testcase classname="components/widgets/menu/menu_items/submenu_item present subMenu should match snapshot with submenu" name="components/widgets/menu/menu_items/submenu_item present subMenu should match snapshot with submenu" time="0.004">
    </testcase>
    <testcase classname="components/widgets/menu/menu_items/submenu_item test subMenu click triggers action" name="components/widgets/menu/menu_items/submenu_item test subMenu click triggers action" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="components/submenu_modal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:02" time="0.442" tests="4">
    <testcase classname="components/submenu_modal should match snapshot" name="components/submenu_modal should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/submenu_modal should match state when onHide is called" name="components/submenu_modal should match state when onHide is called" time="0.001">
    </testcase>
    <testcase classname="components/submenu_modal should have called click function when button is clicked" name="components/submenu_modal should have called click function when button is clicked" time="0.056">
    </testcase>
    <testcase classname="components/submenu_modal should have called props.onHide when Modal.onExited is called" name="components/submenu_modal should have called props.onHide when Modal.onExited is called" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="ManageTeamsDropdown" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:02" time="0.447" tests="4">
    <testcase classname="ManageTeamsDropdown should match snapshot for team member" name="ManageTeamsDropdown should match snapshot for team member" time="0.003">
    </testcase>
    <testcase classname="ManageTeamsDropdown should match snapshot for system admin" name="ManageTeamsDropdown should match snapshot for system admin" time="0.002">
    </testcase>
    <testcase classname="ManageTeamsDropdown should match snapshot for team admin" name="ManageTeamsDropdown should match snapshot for team admin" time="0.001">
    </testcase>
    <testcase classname="ManageTeamsDropdown should match snapshot for guest" name="ManageTeamsDropdown should match snapshot for guest" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/post_list_row" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:03" time="0.439" tests="7">
    <testcase classname="components/post_view/post_list_row should render more messages loading indicator" name="components/post_view/post_list_row should render more messages loading indicator" time="0.003">
    </testcase>
    <testcase classname="components/post_view/post_list_row should render manual load messages trigger" name="components/post_view/post_list_row should render manual load messages trigger" time="0.001">
    </testcase>
    <testcase classname="components/post_view/post_list_row should render channel intro message" name="components/post_view/post_list_row should render channel intro message" time="0.006">
    </testcase>
    <testcase classname="components/post_view/post_list_row should render new messages line" name="components/post_view/post_list_row should render new messages line" time="0.002">
    </testcase>
    <testcase classname="components/post_view/post_list_row should render date line" name="components/post_view/post_list_row should render date line" time="0.002">
    </testcase>
    <testcase classname="components/post_view/post_list_row should render combined post" name="components/post_view/post_list_row should render combined post" time="0.002">
    </testcase>
    <testcase classname="components/post_view/post_list_row should render post" name="components/post_view/post_list_row should render post" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/group_settings/GroupsList" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:03" time="0.514" tests="22">
    <testcase classname="components/admin_console/group_settings/GroupsList should match snapshot, while loading" name="components/admin_console/group_settings/GroupsList should match snapshot, while loading" time="0.005">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList should match snapshot, with only linked selected" name="components/admin_console/group_settings/GroupsList should match snapshot, with only linked selected" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList should match snapshot, with only not-linked selected" name="components/admin_console/group_settings/GroupsList should match snapshot, with only not-linked selected" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList should match snapshot, with mixed types selected" name="components/admin_console/group_settings/GroupsList should match snapshot, with mixed types selected" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList should match snapshot, without selection" name="components/admin_console/group_settings/GroupsList should match snapshot, without selection" time="0.01">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList onCheckToggle must toggle the checked data" name="components/admin_console/group_settings/GroupsList onCheckToggle must toggle the checked data" time="0.006">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList linkSelectedGroups must call link for unlinked selected groups" name="components/admin_console/group_settings/GroupsList linkSelectedGroups must call link for unlinked selected groups" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList unlinkSelectedGroups must call unlink for linked selected groups" name="components/admin_console/group_settings/GroupsList unlinkSelectedGroups must call unlink for linked selected groups" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList should match snapshot, without results" name="components/admin_console/group_settings/GroupsList should match snapshot, without results" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList should match snapshot, with results" name="components/admin_console/group_settings/GroupsList should match snapshot, with results" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList should match snapshot, with results and next and previous" name="components/admin_console/group_settings/GroupsList should match snapshot, with results and next and previous" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList should match snapshot, with results and next" name="components/admin_console/group_settings/GroupsList should match snapshot, with results and next" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList should match snapshot, with results and previous" name="components/admin_console/group_settings/GroupsList should match snapshot, with results and previous" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList should change properly the state and call the getLdapGroups, on previousPage when page &gt; 0" name="components/admin_console/group_settings/GroupsList should change properly the state and call the getLdapGroups, on previousPage when page &gt; 0" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList should change properly the state and call the getLdapGroups, on previousPage when page == 0" name="components/admin_console/group_settings/GroupsList should change properly the state and call the getLdapGroups, on previousPage when page == 0" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList should change properly the state and call the getLdapGroups, on nextPage clicked" name="components/admin_console/group_settings/GroupsList should change properly the state and call the getLdapGroups, on nextPage clicked" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList should match snapshot, with filters open" name="components/admin_console/group_settings/GroupsList should match snapshot, with filters open" time="0.005">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList clicking the clear icon clears searchString" name="components/admin_console/group_settings/GroupsList clicking the clear icon clears searchString" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList clicking the down arrow opens the filters" name="components/admin_console/group_settings/GroupsList clicking the down arrow opens the filters" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList clicking search invokes getLdapGroups" name="components/admin_console/group_settings/GroupsList clicking search invokes getLdapGroups" time="0.007">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList checking a filter checkbox add the filter to the searchString" name="components/admin_console/group_settings/GroupsList checking a filter checkbox add the filter to the searchString" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupsList unchecking a filter checkbox removes the filter from the searchString" name="components/admin_console/group_settings/GroupsList unchecking a filter checkbox removes the filter from the searchString" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/channel/ChannelProfile" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:04" time="0.11" tests="1">
    <testcase classname="admin_console/team_channel_settings/channel/ChannelProfile should match snapshot" name="admin_console/team_channel_settings/channel/ChannelProfile should match snapshot" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/admin_console/FormattedAdminHeader" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:04" time="0.118" tests="2">
    <testcase classname="components/widgets/admin_console/FormattedAdminHeader render component with required props" name="components/widgets/admin_console/FormattedAdminHeader render component with required props" time="0.002">
    </testcase>
    <testcase classname="components/widgets/admin_console/FormattedAdminHeader render component with all props" name="components/widgets/admin_console/FormattedAdminHeader render component with all props" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/invitation_modal/InvitationModalInitialStep" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:04" time="0.111" tests="1">
    <testcase classname="components/invitation_modal/InvitationModalInitialStep should match the snapshot" name="components/invitation_modal/InvitationModalInitialStep should match the snapshot" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/loading/LoadingWrapper" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:04" time="0.112" tests="4">
    <testcase classname="components/widgets/loading/LoadingWrapper showing spinner with text" name="components/widgets/loading/LoadingWrapper showing spinner with text" time="0.001">
    </testcase>
    <testcase classname="components/widgets/loading/LoadingWrapper showing spinner without text" name="components/widgets/loading/LoadingWrapper showing spinner without text" time="0.001">
    </testcase>
    <testcase classname="components/widgets/loading/LoadingWrapper showing content with children" name="components/widgets/loading/LoadingWrapper showing content with children" time="0.001">
    </testcase>
    <testcase classname="components/widgets/loading/LoadingWrapper showing content without children" name="components/widgets/loading/LoadingWrapper showing content without children" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/SearchHint" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:04" time="0.116" tests="2">
    <testcase classname="components/SearchHint should match snapshot, with title" name="components/SearchHint should match snapshot, with title" time="0.002">
    </testcase>
    <testcase classname="components/SearchHint should match snapshot, without title" name="components/SearchHint should match snapshot, without title" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/LoadingImagePreview" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:04" time="0.108" tests="1">
    <testcase classname="components/LoadingImagePreview should match snapshot" name="components/LoadingImagePreview should match snapshot" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="components/CopyUrlContextMenu" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:04" time="0.115" tests="2">
    <testcase classname="components/CopyUrlContextMenu should copy relative url on click" name="components/CopyUrlContextMenu should copy relative url on click" time="0.004">
    </testcase>
    <testcase classname="components/CopyUrlContextMenu should copy absolute url on click" name="components/CopyUrlContextMenu should copy absolute url on click" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/AdminConsole" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:04" time="0.939" tests="2">
    <testcase classname="components/AdminConsole should redirect to / when not system admin" name="components/AdminConsole should redirect to / when not system admin" time="0.002">
    </testcase>
    <testcase classname="components/AdminConsole should generate the routes" name="components/AdminConsole should generate the routes" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="components/AutosizeTextarea" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:05" time="0.111" tests="1">
    <testcase classname="components/AutosizeTextarea should match snapshot, init" name="components/AutosizeTextarea should match snapshot, init" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Emoticons" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:06" time="0.18" tests="54">
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:)&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:)&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:-)&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:-)&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;;)&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;;)&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;;-)&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;;-)&apos; should be recognized as an emoticon" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:o&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:o&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:-o&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:-o&apos; should be recognized as an emoticon" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:]&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:]&apos; should be recognized as an emoticon" time="0.007">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:-]&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:-]&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:D&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:D&apos; should be recognized as an emoticon" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:-D&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:-D&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;x-d&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;x-d&apos; should be recognized as an emoticon" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:p&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:p&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:-p&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:-p&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:@&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:@&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:-@&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:-@&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:(&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:(&apos; should be recognized as an emoticon" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:-(&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:-(&apos; should be recognized as an emoticon" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:`(&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:`(&apos; should be recognized as an emoticon" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:&apos;(&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:&apos;(&apos; should be recognized as an emoticon" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:’(&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:’(&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:/&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:/&apos; should be recognized as an emoticon" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:-/&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:-/&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:s&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:s&apos; should be recognized as an emoticon" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:-s&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:-s&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:|&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:|&apos; should be recognized as an emoticon" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:-|&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:-|&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;: should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;: should be recognized as an emoticon" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:- should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:- should be recognized as an emoticon" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:-x&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:-x&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;&lt;3&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;&lt;3&apos; should be recognized as an emoticon" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;&amp;lt;3&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;&amp;lt;3&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;&lt;/3&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;&lt;/3&apos; should be recognized as an emoticon" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;&amp;lt;/3&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;&amp;lt;/3&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:+1:&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:+1:&apos; should be recognized as an emoticon" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons text sequence &apos;:-1:&apos; should be recognized as an emoticon" name="Emoticons handleEmoticons text sequence &apos;:-1:&apos; should be recognized as an emoticon" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons should replace emoticons with tokens" name="Emoticons handleEmoticons should replace emoticons with tokens" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons should replace emoticons not separated by whitespace" name="Emoticons handleEmoticons should replace emoticons not separated by whitespace" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons should replace emoticons separated by punctuation" name="Emoticons handleEmoticons should replace emoticons separated by punctuation" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons should replace emoticons separated by text" name="Emoticons handleEmoticons should replace emoticons separated by text" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons shouldn&apos;t replace invalid emoticons" name="Emoticons handleEmoticons shouldn&apos;t replace invalid emoticons" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons should allow comma immediately following emoticon :)" name="Emoticons handleEmoticons should allow comma immediately following emoticon :)" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons should allow comma immediately following emoticon :P" name="Emoticons handleEmoticons should allow comma immediately following emoticon :P" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons should allow punctuation immediately following emoticon :)" name="Emoticons handleEmoticons should allow punctuation immediately following emoticon :)" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons should allow punctuation immediately following emoticon :P" name="Emoticons handleEmoticons should allow punctuation immediately following emoticon :P" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons should allow punctuation immediately before and following emoticon :)" name="Emoticons handleEmoticons should allow punctuation immediately before and following emoticon :)" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons should allow punctuation immediately before and following emoticon :P" name="Emoticons handleEmoticons should allow punctuation immediately before and following emoticon :P" time="0.001">
    </testcase>
    <testcase classname="Emoticons matchEmoticons empty message" name="Emoticons matchEmoticons empty message" time="0.003">
    </testcase>
    <testcase classname="Emoticons matchEmoticons no emoticons" name="Emoticons matchEmoticons no emoticons" time="0">
    </testcase>
    <testcase classname="Emoticons matchEmoticons single shorthand forms" name="Emoticons matchEmoticons single shorthand forms" time="0.001">
    </testcase>
    <testcase classname="Emoticons matchEmoticons single named emoticons forms" name="Emoticons matchEmoticons single named emoticons forms" time="0">
    </testcase>
    <testcase classname="Emoticons matchEmoticons multiple shorthand forms" name="Emoticons matchEmoticons multiple shorthand forms" time="0.001">
    </testcase>
    <testcase classname="Emoticons matchEmoticons multiple named emoticons forms" name="Emoticons matchEmoticons multiple named emoticons forms" time="0">
    </testcase>
    <testcase classname="Emoticons matchEmoticons multiple mixed" name="Emoticons matchEmoticons multiple mixed" time="0.001">
    </testcase>
    <testcase classname="Emoticons matchEmoticons inline" name="Emoticons matchEmoticons inline" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:06" time="0.448" tests="8">
    <testcase classname="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings should match snapshot on new with default roles without permissions" name="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings should match snapshot on new with default roles without permissions" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings should match snapshot on new with default roles with permissions" name="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings should match snapshot on new with default roles with permissions" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings should save each role on handleSubmit except system_admin role" name="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings should save each role on handleSubmit except system_admin role" time="0.006">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings should show error if createScheme fails" name="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings should show error if createScheme fails" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings should show error if editRole fails" name="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings should show error if editRole fails" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings should open and close correctly roles blocks" name="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings should open and close correctly roles blocks" time="0.012">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings should match snapshot on edit without permissions" name="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings should match snapshot on edit without permissions" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings should match snapshot on edit with permissions" name="components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings should match snapshot on edit with permissions" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/RhsThread" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:06" time="0.545" tests="3">
    <testcase classname="components/RhsThread should match snapshot" name="components/RhsThread should match snapshot" time="0.005">
    </testcase>
    <testcase classname="components/RhsThread should make api call to get thread posts on socket reconnect" name="components/RhsThread should make api call to get thread posts on socket reconnect" time="0.003">
    </testcase>
    <testcase classname="components/RhsThread should update openTime state when selected prop updated" name="components/RhsThread should update openTime state when selected prop updated" time="0.106">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/InstalledOutgoingWebhook" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:07" time="0.586" tests="11">
    <testcase classname="components/integrations/InstalledOutgoingWebhook should match snapshot" name="components/integrations/InstalledOutgoingWebhook should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/integrations/InstalledOutgoingWebhook should not have edit and delete actions if user does not have permissions to change" name="components/integrations/InstalledOutgoingWebhook should not have edit and delete actions if user does not have permissions to change" time="0.002">
    </testcase>
    <testcase classname="components/integrations/InstalledOutgoingWebhook should have edit and delete actions if user can change webhook" name="components/integrations/InstalledOutgoingWebhook should have edit and delete actions if user can change webhook" time="0.011">
    </testcase>
    <testcase classname="components/integrations/InstalledOutgoingWebhook Should have the same name and description on view as it has in outgoingWebhook" name="components/integrations/InstalledOutgoingWebhook Should have the same name and description on view as it has in outgoingWebhook" time="0.003">
    </testcase>
    <testcase classname="components/integrations/InstalledOutgoingWebhook Should not display description as it is null" name="components/integrations/InstalledOutgoingWebhook Should not display description as it is null" time="0.003">
    </testcase>
    <testcase classname="components/integrations/InstalledOutgoingWebhook Should not render any nodes as there are no filtered results" name="components/integrations/InstalledOutgoingWebhook Should not render any nodes as there are no filtered results" time="0.001">
    </testcase>
    <testcase classname="components/integrations/InstalledOutgoingWebhook Should render a webhook item as filtered result is true" name="components/integrations/InstalledOutgoingWebhook Should render a webhook item as filtered result is true" time="0.002">
    </testcase>
    <testcase classname="components/integrations/InstalledOutgoingWebhook Should call onRegenToken function once" name="components/integrations/InstalledOutgoingWebhook Should call onRegenToken function once" time="0.002">
    </testcase>
    <testcase classname="components/integrations/InstalledOutgoingWebhook Should call onDelete function once" name="components/integrations/InstalledOutgoingWebhook Should call onDelete function once" time="0.003">
    </testcase>
    <testcase classname="components/integrations/InstalledOutgoingWebhook Should match snapshot of makeDisplayName" name="components/integrations/InstalledOutgoingWebhook Should match snapshot of makeDisplayName" time="0.002">
    </testcase>
    <testcase classname="components/integrations/InstalledOutgoingWebhook Should match result when matchesFilter is called" name="components/integrations/InstalledOutgoingWebhook Should match result when matchesFilter is called" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/system_users" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:07" time="0.769" tests="7">
    <testcase classname="components/admin_console/system_users should match default snapshot" name="components/admin_console/system_users should match default snapshot" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/system_users loadDataForTeam() should have called getProfiles" name="components/admin_console/system_users loadDataForTeam() should have called getProfiles" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/system_users loadDataForTeam() should have called loadProfilesWithoutTeam" name="components/admin_console/system_users loadDataForTeam() should have called loadProfilesWithoutTeam" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/system_users nextPage() should have called getProfiles" name="components/admin_console/system_users nextPage() should have called getProfiles" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/system_users nextPage() should have called loadProfilesWithoutTeam" name="components/admin_console/system_users nextPage() should have called loadProfilesWithoutTeam" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/system_users doSearch() should have called searchProfiles with allow_inactive" name="components/admin_console/system_users doSearch() should have called searchProfiles with allow_inactive" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/system_users doSearch() should have called searchProfiles with allow_inactive and system_admin role" name="components/admin_console/system_users doSearch() should have called searchProfiles with allow_inactive and system_admin role" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Selectors.AdminConsole" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:08" time="0.446" tests="4">
    <testcase classname="Selectors.AdminConsole get admin definitions should return the default admin definition if there is not plugins" name="Selectors.AdminConsole get admin definitions should return the default admin definition if there is not plugins" time="0.021">
    </testcase>
    <testcase classname="Selectors.AdminConsole get admin definitions should allow to remove everything with a plugin" name="Selectors.AdminConsole get admin definitions should allow to remove everything with a plugin" time="0.002">
    </testcase>
    <testcase classname="Selectors.AdminConsole get admin definitions should allow to add a value to the existing definition" name="Selectors.AdminConsole get admin definitions should allow to add a value to the existing definition" time="0.002">
    </testcase>
    <testcase classname="Selectors.AdminConsole get admin definitions should allow to use multiple plugins" name="Selectors.AdminConsole get admin definitions should allow to use multiple plugins" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/ChannelHeaderMobile/ChannelHeaderMobile" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:09" time="0.415" tests="6">
    <testcase classname="components/ChannelHeaderMobile/ChannelHeaderMobile should match snapshot" name="components/ChannelHeaderMobile/ChannelHeaderMobile should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/ChannelHeaderMobile/ChannelHeaderMobile should match snapshot, for default channel" name="components/ChannelHeaderMobile/ChannelHeaderMobile should match snapshot, for default channel" time="0.002">
    </testcase>
    <testcase classname="components/ChannelHeaderMobile/ChannelHeaderMobile should match snapshot, if not licensed" name="components/ChannelHeaderMobile/ChannelHeaderMobile should match snapshot, if not licensed" time="0.001">
    </testcase>
    <testcase classname="components/ChannelHeaderMobile/ChannelHeaderMobile should match snapshot, if enabled WebRTC and DM channel" name="components/ChannelHeaderMobile/ChannelHeaderMobile should match snapshot, if enabled WebRTC and DM channel" time="0.002">
    </testcase>
    <testcase classname="components/ChannelHeaderMobile/ChannelHeaderMobile should match snapshot, if WebRTC is not enabled" name="components/ChannelHeaderMobile/ChannelHeaderMobile should match snapshot, if WebRTC is not enabled" time="0.001">
    </testcase>
    <testcase classname="components/ChannelHeaderMobile/ChannelHeaderMobile should match snapshot, for private channel" name="components/ChannelHeaderMobile/ChannelHeaderMobile should match snapshot, for private channel" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/MoreDirectChannels" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:09" time="0.462" tests="13">
    <testcase classname="components/MoreDirectChannels should match snapshot" name="components/MoreDirectChannels should match snapshot" time="0.007">
    </testcase>
    <testcase classname="components/MoreDirectChannels should call actions.getStatusesByIds on loadProfilesMissingStatus" name="components/MoreDirectChannels should call actions.getStatusesByIds on loadProfilesMissingStatus" time="0.002">
    </testcase>
    <testcase classname="components/MoreDirectChannels should call actions.setModalSearchTerm and match state on handleHide" name="components/MoreDirectChannels should call actions.setModalSearchTerm and match state on handleHide" time="0.002">
    </testcase>
    <testcase classname="components/MoreDirectChannels should match state on setUsersLoadingState" name="components/MoreDirectChannels should match state on setUsersLoadingState" time="0.003">
    </testcase>
    <testcase classname="components/MoreDirectChannels should call on search" name="components/MoreDirectChannels should call on search" time="0.001">
    </testcase>
    <testcase classname="components/MoreDirectChannels should match state on handleDelete" name="components/MoreDirectChannels should match state on handleDelete" time="0.002">
    </testcase>
    <testcase classname="components/MoreDirectChannels should match renderOption snapshot" name="components/MoreDirectChannels should match renderOption snapshot" time="0.002">
    </testcase>
    <testcase classname="components/MoreDirectChannels should match output on renderValue" name="components/MoreDirectChannels should match output on renderValue" time="0.001">
    </testcase>
    <testcase classname="components/MoreDirectChannels should match output on handleSubmitImmediatelyOn" name="components/MoreDirectChannels should match output on handleSubmitImmediatelyOn" time="0.002">
    </testcase>
    <testcase classname="components/MoreDirectChannels should render the group channel option" name="components/MoreDirectChannels should render the group channel option" time="0.001">
    </testcase>
    <testcase classname="components/MoreDirectChannels should not open a DM or GM if no user Ids" name="components/MoreDirectChannels should not open a DM or GM if no user Ids" time="0.002">
    </testcase>
    <testcase classname="components/MoreDirectChannels should open a DM" name="components/MoreDirectChannels should open a DM" time="0.006">
    </testcase>
    <testcase classname="components/MoreDirectChannels should open a GM" name="components/MoreDirectChannels should open a GM" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="components/PluginManagement" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:09" time="0.486" tests="12">
    <testcase classname="components/PluginManagement should match snapshot" name="components/PluginManagement should match snapshot" time="0.008">
    </testcase>
    <testcase classname="components/PluginManagement should match snapshot, disabled" name="components/PluginManagement should match snapshot, disabled" time="0.003">
    </testcase>
    <testcase classname="components/PluginManagement should match snapshot when `Enable Plugins` is hidden" name="components/PluginManagement should match snapshot when `Enable Plugins` is hidden" time="0.003">
    </testcase>
    <testcase classname="components/PluginManagement should match snapshot, upload disabled" name="components/PluginManagement should match snapshot, upload disabled" time="0.004">
    </testcase>
    <testcase classname="components/PluginManagement should match snapshot, allow insecure URL enabled" name="components/PluginManagement should match snapshot, allow insecure URL enabled" time="0.004">
    </testcase>
    <testcase classname="components/PluginManagement should match snapshot, text entered into the URL install text box" name="components/PluginManagement should match snapshot, text entered into the URL install text box" time="0.005">
    </testcase>
    <testcase classname="components/PluginManagement should match snapshot, No installed plugins" name="components/PluginManagement should match snapshot, No installed plugins" time="0.005">
    </testcase>
    <testcase classname="components/PluginManagement should match snapshot, with installed plugins" name="components/PluginManagement should match snapshot, with installed plugins" time="0.005">
    </testcase>
    <testcase classname="components/PluginManagement should match snapshot, with installed plugins and not settings link should set hasSettings to false" name="components/PluginManagement should match snapshot, with installed plugins and not settings link should set hasSettings to false" time="0.011">
    </testcase>
    <testcase classname="components/PluginManagement should match snapshot, with installed plugins and just header should set hasSettings to true" name="components/PluginManagement should match snapshot, with installed plugins and just header should set hasSettings to true" time="0.006">
    </testcase>
    <testcase classname="components/PluginManagement should match snapshot, with installed plugins and just footer should set hasSettings to true" name="components/PluginManagement should match snapshot, with installed plugins and just footer should set hasSettings to true" time="0.005">
    </testcase>
    <testcase classname="components/PluginManagement should match snapshot, with installed plugins and just settings should set hasSettings to true" name="components/PluginManagement should match snapshot, with installed plugins and just settings should set hasSettings to true" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="/components/create_team" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:10" time="0.901" tests="2">
    <testcase classname="/components/create_team should match snapshot" name="/components/create_team should match snapshot" time="0.003">
    </testcase>
    <testcase classname="/components/create_team should run props.history.push with new state" name="/components/create_team should run props.history.push with new state" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/channel_notifications_modal/ChannelNotificationsModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:11" time="0.452" tests="16">
    <testcase classname="components/channel_notifications_modal/ChannelNotificationsModal should match snapshot" name="components/channel_notifications_modal/ChannelNotificationsModal should match snapshot" time="0.01">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ChannelNotificationsModal should provide default notify props when missing" name="components/channel_notifications_modal/ChannelNotificationsModal should provide default notify props when missing" time="0.002">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ChannelNotificationsModal should provide correct default when currentUser channel notify props is true" name="components/channel_notifications_modal/ChannelNotificationsModal should provide correct default when currentUser channel notify props is true" time="0.001">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ChannelNotificationsModal should provide correct default when currentUser channel notify props is false" name="components/channel_notifications_modal/ChannelNotificationsModal should provide correct default when currentUser channel notify props is false" time="0.002">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ChannelNotificationsModal should provide correct value for ignoreChannelMentions when channelMember channel-wide mentions are off and false on the currentUser" name="components/channel_notifications_modal/ChannelNotificationsModal should provide correct value for ignoreChannelMentions when channelMember channel-wide mentions are off and false on the currentUser" time="0.001">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ChannelNotificationsModal should provide correct value for ignoreChannelMentions when channelMember channel-wide mentions are on but false on currentUser" name="components/channel_notifications_modal/ChannelNotificationsModal should provide correct value for ignoreChannelMentions when channelMember channel-wide mentions are on but false on currentUser" time="0.001">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ChannelNotificationsModal should call onHide and match state on handleOnHide" name="components/channel_notifications_modal/ChannelNotificationsModal should call onHide and match state on handleOnHide" time="0.008">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ChannelNotificationsModal should match state on updateSection" name="components/channel_notifications_modal/ChannelNotificationsModal should match state on updateSection" time="0.002">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ChannelNotificationsModal should reset state when collapsing a section" name="components/channel_notifications_modal/ChannelNotificationsModal should reset state when collapsing a section" time="0.004">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ChannelNotificationsModal should match state on handleSubmitDesktopNotifyLevel" name="components/channel_notifications_modal/ChannelNotificationsModal should match state on handleSubmitDesktopNotifyLevel" time="0.002">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ChannelNotificationsModal should match state on handleUpdateDesktopNotifyLevel" name="components/channel_notifications_modal/ChannelNotificationsModal should match state on handleUpdateDesktopNotifyLevel" time="0.001">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ChannelNotificationsModal should match state on handleSubmitMarkUnreadLevel" name="components/channel_notifications_modal/ChannelNotificationsModal should match state on handleSubmitMarkUnreadLevel" time="0.002">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ChannelNotificationsModal should match state on handleUpdateMarkUnreadLevel" name="components/channel_notifications_modal/ChannelNotificationsModal should match state on handleUpdateMarkUnreadLevel" time="0.002">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ChannelNotificationsModal should match state on handleSubmitPushNotificationLevel" name="components/channel_notifications_modal/ChannelNotificationsModal should match state on handleSubmitPushNotificationLevel" time="0.002">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ChannelNotificationsModal should match state on handleUpdatePushNotificationLevel" name="components/channel_notifications_modal/ChannelNotificationsModal should match state on handleUpdatePushNotificationLevel" time="0.001">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ChannelNotificationsModal should match state on resetStateFromNotifyProps" name="components/channel_notifications_modal/ChannelNotificationsModal should match state on resetStateFromNotifyProps" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:11" time="0.678" tests="11">
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should match snapshot, on desktop with mentions badge" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should match snapshot, on desktop with mentions badge" time="0.004">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should match snapshot, on desktop with draft" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should match snapshot, on desktop with draft" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should match snapshot, on desktop without badge" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should match snapshot, on desktop without badge" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should trackEvent, mark and add history entry on desktop on click" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should trackEvent, mark and add history entry on desktop on click" time="0.25">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should match snapshot, on non-desktop with mentions badge" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should match snapshot, on non-desktop with mentions badge" time="0.003">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should match snapshot, on non-desktop without badge" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should match snapshot, on non-desktop without badge" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should trackEvent and mark but not add history entry on non-desktop on click" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should trackEvent and mark but not add history entry on non-desktop on click" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should properly handle state to show tooltip Direct Message" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should properly handle state to show tooltip Direct Message" time="0.013">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should properly handle state to show tooltip Group Message" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should properly handle state to show tooltip Group Message" time="0.006">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should properly handle state to show tooltip Public Channel" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should properly handle state to show tooltip Public Channel" time="0.005">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should properly handle state to show tooltip Private Channel" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLink should properly handle state to show tooltip Private Channel" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="components/user_settings/display/UserSettingsDisplay" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:12" time="1.05" tests="8">
    <testcase classname="components/user_settings/display/UserSettingsDisplay componentDidMount() should have called getAuthorizedOAuthApps" name="components/user_settings/display/UserSettingsDisplay componentDidMount() should have called getAuthorizedOAuthApps" time="0.004">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay componentDidMount() should have updated state.authorizedApps" name="components/user_settings/display/UserSettingsDisplay componentDidMount() should have updated state.authorizedApps" time="0.002">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay componentDidMount() should have updated state.serverError" name="components/user_settings/display/UserSettingsDisplay componentDidMount() should have updated state.serverError" time="0.002">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay submitPassword() should not have called updateUserPassword" name="components/user_settings/display/UserSettingsDisplay submitPassword() should not have called updateUserPassword" time="0.001">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay submitPassword() should have called updateUserPassword" name="components/user_settings/display/UserSettingsDisplay submitPassword() should have called updateUserPassword" time="0.003">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay deauthorizeApp() should have called deauthorizeOAuthApp" name="components/user_settings/display/UserSettingsDisplay deauthorizeApp() should have called deauthorizeOAuthApp" time="0.003">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay deauthorizeApp() should have updated state.authorizedApps" name="components/user_settings/display/UserSettingsDisplay deauthorizeApp() should have updated state.authorizedApps" time="0.002">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay deauthorizeApp() should have updated state.serverError" name="components/user_settings/display/UserSettingsDisplay deauthorizeApp() should have updated state.serverError" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/SchemaAdminSettings" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:13" time="0.418" tests="4">
    <testcase classname="components/admin_console/SchemaAdminSettings should match snapshot with settings and plugin" name="components/admin_console/SchemaAdminSettings should match snapshot with settings and plugin" time="0.011">
    </testcase>
    <testcase classname="components/admin_console/SchemaAdminSettings should match snapshot with custom component" name="components/admin_console/SchemaAdminSettings should match snapshot with custom component" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/SchemaAdminSettings should render header using a SchemaText" name="components/admin_console/SchemaAdminSettings should render header using a SchemaText" time="0.007">
    </testcase>
    <testcase classname="components/admin_console/SchemaAdminSettings should render footer using a SchemaText" name="components/admin_console/SchemaAdminSettings should render footer using a SchemaText" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/system_user_detail" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:13" time="0.653" tests="5">
    <testcase classname="components/admin_console/system_user_detail should match default snapshot" name="components/admin_console/system_user_detail should match default snapshot" time="0.012">
    </testcase>
    <testcase classname="components/admin_console/system_user_detail should redirect if user id is not defined" name="components/admin_console/system_user_detail should redirect if user id is not defined" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/system_user_detail should match snapshot if user is inactive" name="components/admin_console/system_user_detail should match snapshot if user is inactive" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/system_user_detail should match snapshot if MFA is enabled" name="components/admin_console/system_user_detail should match snapshot if MFA is enabled" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/system_user_detail should match snapshot if no nickname is defined" name="components/admin_console/system_user_detail should match snapshot if no nickname is defined" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/PopoverListMembers" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:14" time="0.414" tests="8">
    <testcase classname="components/PopoverListMembers should match snapshot" name="components/PopoverListMembers should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/PopoverListMembers should have called openDirectChannelToUserId when handleShowDirectChannel is called" name="components/PopoverListMembers should have called openDirectChannelToUserId when handleShowDirectChannel is called" time="0.002">
    </testcase>
    <testcase classname="components/PopoverListMembers should match state when closePopover is called" name="components/PopoverListMembers should match state when closePopover is called" time="0.002">
    </testcase>
    <testcase classname="components/PopoverListMembers should match state when showChannelInviteModal is called" name="components/PopoverListMembers should match state when showChannelInviteModal is called" time="0.003">
    </testcase>
    <testcase classname="components/PopoverListMembers should match state when hideChannelInviteModal is called" name="components/PopoverListMembers should match state when hideChannelInviteModal is called" time="0.002">
    </testcase>
    <testcase classname="components/PopoverListMembers should match state when hideTeamMembersModal is called" name="components/PopoverListMembers should match state when hideTeamMembersModal is called" time="0.002">
    </testcase>
    <testcase classname="components/PopoverListMembers should match snapshot with archived channel" name="components/PopoverListMembers should match snapshot with archived channel" time="0.002">
    </testcase>
    <testcase classname="components/PopoverListMembers should match snapshot with group-constrained channel" name="components/PopoverListMembers should match snapshot with group-constrained channel" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/user_settings/display/user_settings_theme/user_settings_theme.jsx" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:15" time="0.658" tests="3">
    <testcase classname="components/user_settings/display/user_settings_theme/user_settings_theme.jsx should match snapshot" name="components/user_settings/display/user_settings_theme/user_settings_theme.jsx should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/user_settings/display/user_settings_theme/user_settings_theme.jsx should saveTheme" name="components/user_settings/display/user_settings_theme/user_settings_theme.jsx should saveTheme" time="0.003">
    </testcase>
    <testcase classname="components/user_settings/display/user_settings_theme/user_settings_theme.jsx should deleteTeamSpecificThemes if applyToAllTeams is enabled" name="components/user_settings/display/user_settings_theme/user_settings_theme.jsx should deleteTeamSpecificThemes if applyToAllTeams is enabled" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/user_settings/display/UserSettingsDisplay" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:15" time="0.95" tests="5">
    <testcase classname="components/user_settings/display/UserSettingsDisplay should have called handleSubmit" name="components/user_settings/display/UserSettingsDisplay should have called handleSubmit" time="0.005">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should have called updateSection" name="components/user_settings/display/UserSettingsDisplay should have called updateSection" time="0.002">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should have called updateUserActive" name="components/user_settings/display/UserSettingsDisplay should have called updateUserActive" time="0.002">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay handleDeactivateAccountSubmit() should have called revokeAllSessions" name="components/user_settings/display/UserSettingsDisplay handleDeactivateAccountSubmit() should have called revokeAllSessions" time="0.002">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay handleDeactivateAccountSubmit() should have updated state.serverError" name="components/user_settings/display/UserSettingsDisplay handleDeactivateAccountSubmit() should have updated state.serverError" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/bots/Bot" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:16" time="0.552" tests="5">
    <testcase classname="components/integrations/bots/Bot regular bot" name="components/integrations/bots/Bot regular bot" time="0.006">
    </testcase>
    <testcase classname="components/integrations/bots/Bot disabled bot" name="components/integrations/bots/Bot disabled bot" time="0.005">
    </testcase>
    <testcase classname="components/integrations/bots/Bot bot with owner" name="components/integrations/bots/Bot bot with owner" time="0.003">
    </testcase>
    <testcase classname="components/integrations/bots/Bot bot with access tokens" name="components/integrations/bots/Bot bot with access tokens" time="0.003">
    </testcase>
    <testcase classname="components/integrations/bots/Bot bot with disabled access tokens" name="components/integrations/bots/Bot bot with disabled access tokens" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/channel/ChannelDetails" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:17" time="0.372" tests="1">
    <testcase classname="admin_console/team_channel_settings/channel/ChannelDetails should match snapshot" name="admin_console/team_channel_settings/channel/ChannelDetails should match snapshot" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/PostAttachment" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:17" time="0.415" tests="7">
    <testcase classname="components/post_view/PostAttachment should match snapshot" name="components/post_view/PostAttachment should match snapshot" time="0.012">
    </testcase>
    <testcase classname="components/post_view/PostAttachment should match snapshot, on Show More" name="components/post_view/PostAttachment should match snapshot, on Show More" time="0.001">
    </testcase>
    <testcase classname="components/post_view/PostAttachment should match snapshot, on Show Less" name="components/post_view/PostAttachment should match snapshot, on Show Less" time="0.001">
    </testcase>
    <testcase classname="components/post_view/PostAttachment should match snapshot, on deleted post" name="components/post_view/PostAttachment should match snapshot, on deleted post" time="0.002">
    </testcase>
    <testcase classname="components/post_view/PostAttachment should match snapshot, on edited post" name="components/post_view/PostAttachment should match snapshot, on edited post" time="0.001">
    </testcase>
    <testcase classname="components/post_view/PostAttachment should match snapshot, on ephemeral post" name="components/post_view/PostAttachment should match snapshot, on ephemeral post" time="0.002">
    </testcase>
    <testcase classname="components/post_view/PostAttachment should match checkOverflow state on handleHeightReceived change" name="components/post_view/PostAttachment should match checkOverflow state on handleHeightReceived change" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="FileAttachmentList" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:18" time="0.425" tests="7">
    <testcase classname="FileAttachmentList should render a FileAttachment for a single file" name="FileAttachmentList should render a FileAttachment for a single file" time="0.013">
    </testcase>
    <testcase classname="FileAttachmentList should render multiple, sorted FileAttachments for multiple files" name="FileAttachmentList should render multiple, sorted FileAttachments for multiple files" time="0.005">
    </testcase>
    <testcase classname="FileAttachmentList should render a SingleImageView for a single image" name="FileAttachmentList should render a SingleImageView for a single image" time="0.002">
    </testcase>
    <testcase classname="FileAttachmentList should render a SingleImageView for an SVG with SVG previews enabled" name="FileAttachmentList should render a SingleImageView for an SVG with SVG previews enabled" time="0.001">
    </testcase>
    <testcase classname="FileAttachmentList should render a FileAttachment for an SVG with SVG previews disabled" name="FileAttachmentList should render a FileAttachment for an SVG with SVG previews disabled" time="0.003">
    </testcase>
    <testcase classname="FileAttachmentList should match state on handleImageClick" name="FileAttachmentList should match state on handleImageClick" time="0.002">
    </testcase>
    <testcase classname="FileAttachmentList should match state on hidePreviewModal" name="FileAttachmentList should match state on hidePreviewModal" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/ChannelMembersModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:18" time="0.466" tests="9">
    <testcase classname="components/ChannelMembersModal should match snapshot" name="components/ChannelMembersModal should match snapshot" time="0.014">
    </testcase>
    <testcase classname="components/ChannelMembersModal should match state when onHide is called" name="components/ChannelMembersModal should match state when onHide is called" time="0.001">
    </testcase>
    <testcase classname="components/ChannelMembersModal should have called props.actions.openModal and props.onHide when onAddNewMembersButton is called" name="components/ChannelMembersModal should have called props.actions.openModal and props.onHide when onAddNewMembersButton is called" time="0.001">
    </testcase>
    <testcase classname="components/ChannelMembersModal should have state when Modal.onHide" name="components/ChannelMembersModal should have state when Modal.onHide" time="0.003">
    </testcase>
    <testcase classname="components/ChannelMembersModal should match snapshot with archived channel" name="components/ChannelMembersModal should match snapshot with archived channel" time="0.002">
    </testcase>
    <testcase classname="components/ChannelMembersModal renders the channel display name" name="components/ChannelMembersModal renders the channel display name" time="0.001">
    </testcase>
    <testcase classname="components/ChannelMembersModal should show the invite modal link if the user can manage channel members" name="components/ChannelMembersModal should show the invite modal link if the user can manage channel members" time="0.002">
    </testcase>
    <testcase classname="components/ChannelMembersModal should not show the invite modal link if the user can not manage channel members" name="components/ChannelMembersModal should not show the invite modal link if the user can not manage channel members" time="0.001">
    </testcase>
    <testcase classname="components/ChannelMembersModal should call openModal with ChannelInviteModal when the add members link is clicked" name="components/ChannelMembersModal should call openModal with ChannelInviteModal when the add members link is clicked" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/InstalledOAuthApps" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:18" time="0.688" tests="2">
    <testcase classname="components/integrations/InstalledOAuthApps should match snapshot" name="components/integrations/InstalledOAuthApps should match snapshot" time="0.017">
    </testcase>
    <testcase classname="components/integrations/InstalledOAuthApps should props.deleteOAuthApp on deleteOAuthApp" name="components/integrations/InstalledOAuthApps should props.deleteOAuthApp on deleteOAuthApp" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="isFirstReply" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:19" time="0.402" tests="8">
    <testcase classname="isFirstReply a post with nothing above it" name="isFirstReply a post with nothing above it" time="0.001">
    </testcase>
    <testcase classname="isFirstReply a comment with nothing above it" name="isFirstReply a comment with nothing above it" time="0.001">
    </testcase>
    <testcase classname="isFirstReply a post with a regular post above it" name="isFirstReply a post with a regular post above it" time="0.001">
    </testcase>
    <testcase classname="isFirstReply a post with a comment above it" name="isFirstReply a post with a comment above it" time="0">
    </testcase>
    <testcase classname="isFirstReply a comment with a regular post above it" name="isFirstReply a comment with a regular post above it" time="0.001">
    </testcase>
    <testcase classname="isFirstReply a comment with a comment on another thread above it" name="isFirstReply a comment with a comment on another thread above it" time="0">
    </testcase>
    <testcase classname="isFirstReply a comment with a comment on the same thread above it" name="isFirstReply a comment with a comment on the same thread above it" time="0.001">
    </testcase>
    <testcase classname="isFirstReply a comment with its parent above it" name="isFirstReply a comment with its parent above it" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/CommentedOn" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:20" time="0.379" tests="8">
    <testcase classname="components/post_view/CommentedOn should match snapshot" name="components/post_view/CommentedOn should match snapshot" time="0.009">
    </testcase>
    <testcase classname="components/post_view/CommentedOn should match snapshots for post with props.pretext as message" name="components/post_view/CommentedOn should match snapshots for post with props.pretext as message" time="0.008">
    </testcase>
    <testcase classname="components/post_view/CommentedOn should match snapshots for post with props.title as message" name="components/post_view/CommentedOn should match snapshots for post with props.title as message" time="0.001">
    </testcase>
    <testcase classname="components/post_view/CommentedOn should match snapshots for post with props.text as message" name="components/post_view/CommentedOn should match snapshots for post with props.text as message" time="0.001">
    </testcase>
    <testcase classname="components/post_view/CommentedOn should match snapshots for post with props.fallback as message" name="components/post_view/CommentedOn should match snapshots for post with props.fallback as message" time="0.001">
    </testcase>
    <testcase classname="components/post_view/CommentedOn should call onCommentClick on click of text message" name="components/post_view/CommentedOn should call onCommentClick on click of text message" time="0.002">
    </testcase>
    <testcase classname="components/post_view/CommentedOn should call actions.updateSearchTerms and actions.showSearchResults on handleOnClick" name="components/post_view/CommentedOn should call actions.updateSearchTerms and actions.showSearchResults on handleOnClick" time="0.001">
    </testcase>
    <testcase classname="components/post_view/CommentedOn Should trigger search with override_username" name="components/post_view/CommentedOn Should trigger search with override_username" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="executeCommand" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:20" time="0.676" tests="3">
    <testcase classname="executeCommand search should fire the UPDATE_RHS_SEARCH_TERMS with the terms" name="executeCommand search should fire the UPDATE_RHS_SEARCH_TERMS with the terms" time="0.043">
    </testcase>
    <testcase classname="executeCommand shortcuts should return error in case of mobile" name="executeCommand shortcuts should return error in case of mobile" time="0.001">
    </testcase>
    <testcase classname="executeCommand shortcuts should call toggleShortcutsModal in case of no mobile" name="executeCommand shortcuts should call toggleShortcutsModal in case of no mobile" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/terms_of_service/TermsOfService" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:21" time="0.534" tests="9">
    <testcase classname="components/terms_of_service/TermsOfService should match snapshot" name="components/terms_of_service/TermsOfService should match snapshot" time="0.01">
    </testcase>
    <testcase classname="components/terms_of_service/TermsOfService should call getTermsOfService on mount" name="components/terms_of_service/TermsOfService should call getTermsOfService on mount" time="0.002">
    </testcase>
    <testcase classname="components/terms_of_service/TermsOfService should match snapshot on loading" name="components/terms_of_service/TermsOfService should match snapshot on loading" time="0.002">
    </testcase>
    <testcase classname="components/terms_of_service/TermsOfService should match snapshot, on accept terms" name="components/terms_of_service/TermsOfService should match snapshot, on accept terms" time="0.001">
    </testcase>
    <testcase classname="components/terms_of_service/TermsOfService should match snapshot, on reject terms" name="components/terms_of_service/TermsOfService should match snapshot, on reject terms" time="0.002">
    </testcase>
    <testcase classname="components/terms_of_service/TermsOfService should call updateTermsOfServiceStatus on registerUserAction" name="components/terms_of_service/TermsOfService should call updateTermsOfServiceStatus on registerUserAction" time="0.001">
    </testcase>
    <testcase classname="components/terms_of_service/TermsOfService should match state and call updateTermsOfServiceStatus on handleAcceptTerms" name="components/terms_of_service/TermsOfService should match state and call updateTermsOfServiceStatus on handleAcceptTerms" time="0.002">
    </testcase>
    <testcase classname="components/terms_of_service/TermsOfService should match state and call updateTermsOfServiceStatus on handleRejectTerms" name="components/terms_of_service/TermsOfService should match state and call updateTermsOfServiceStatus on handleRejectTerms" time="0.002">
    </testcase>
    <testcase classname="components/terms_of_service/TermsOfService should call emitUserLoggedOutEvent on handleLogoutClick" name="components/terms_of_service/TermsOfService should call emitUserLoggedOutEvent on handleLogoutClick" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="messageHtmlToComponent" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:21" time="0.39" tests="6">
    <testcase classname="messageHtmlToComponent plain text" name="messageHtmlToComponent plain text" time="0.002">
    </testcase>
    <testcase classname="messageHtmlToComponent latex" name="messageHtmlToComponent latex" time="0.002">
    </testcase>
    <testcase classname="messageHtmlToComponent link without enabled tooltip plugins" name="messageHtmlToComponent link without enabled tooltip plugins" time="0.002">
    </testcase>
    <testcase classname="messageHtmlToComponent link with enabled a tooltip plugin" name="messageHtmlToComponent link with enabled a tooltip plugin" time="0.001">
    </testcase>
    <testcase classname="messageHtmlToComponent Inline markdown image" name="messageHtmlToComponent Inline markdown image" time="0.006">
    </testcase>
    <testcase classname="messageHtmlToComponent Inline markdown image where image is link" name="messageHtmlToComponent Inline markdown image where image is link" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/NewChannelFlow" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:22" time="0.412" tests="16">
    <testcase classname="components/NewChannelFlow should match snapshot, with base props" name="components/NewChannelFlow should match snapshot, with base props" time="0.003">
    </testcase>
    <testcase classname="components/NewChannelFlow should match state when channelDataChanged is called" name="components/NewChannelFlow should match state when channelDataChanged is called" time="0.002">
    </testcase>
    <testcase classname="components/NewChannelFlow should match state when urlChangeDismissed is called" name="components/NewChannelFlow should match state when urlChangeDismissed is called" time="0.001">
    </testcase>
    <testcase classname="components/NewChannelFlow should match state when urlChangeSubmitted is called" name="components/NewChannelFlow should match state when urlChangeSubmitted is called" time="0.001">
    </testcase>
    <testcase classname="components/NewChannelFlow should match state when urlChangeRequested is called" name="components/NewChannelFlow should match state when urlChangeRequested is called" time="0.001">
    </testcase>
    <testcase classname="components/NewChannelFlow should match state when typeSwitched is called, with state switched from OPEN_CHANNEL" name="components/NewChannelFlow should match state when typeSwitched is called, with state switched from OPEN_CHANNEL" time="0.002">
    </testcase>
    <testcase classname="components/NewChannelFlow should match state when typeSwitched is called, with state switched from PRIVATE_CHANNEL" name="components/NewChannelFlow should match state when typeSwitched is called, with state switched from PRIVATE_CHANNEL" time="0.001">
    </testcase>
    <testcase classname="components/NewChannelFlow should match state when onModalExited is called" name="components/NewChannelFlow should match state when onModalExited is called" time="0.006">
    </testcase>
    <testcase classname="components/NewChannelFlow should match state when onSubmit is called with invalid channelDisplayName" name="components/NewChannelFlow should match state when onSubmit is called with invalid channelDisplayName" time="0.001">
    </testcase>
    <testcase classname="components/NewChannelFlow should call createChannel when onSubmit is called with valid channelDisplayName and valid channelName" name="components/NewChannelFlow should call createChannel when onSubmit is called with valid channelDisplayName and valid channelName" time="0.001">
    </testcase>
    <testcase classname="components/NewChannelFlow call onModalDismissed after successfully creating channel" name="components/NewChannelFlow call onModalDismissed after successfully creating channel" time="0.002">
    </testcase>
    <testcase classname="components/NewChannelFlow don&apos;t call onModalDismissed after failing to create channel" name="components/NewChannelFlow don&apos;t call onModalDismissed after failing to create channel" time="0.002">
    </testcase>
    <testcase classname="components/NewChannelFlow show URL modal when trying to submit non-Latin display name" name="components/NewChannelFlow show URL modal when trying to submit non-Latin display name" time="0.001">
    </testcase>
    <testcase classname="components/NewChannelFlow call onModalDismissed after successfully creating channel from URL modal" name="components/NewChannelFlow call onModalDismissed after successfully creating channel from URL modal" time="0.002">
    </testcase>
    <testcase classname="components/NewChannelFlow getChannelTypeFromProps" name="components/NewChannelFlow getChannelTypeFromProps" time="0">
    </testcase>
    <testcase classname="components/NewChannelFlow should reset the state when being shown" name="components/NewChannelFlow should reset the state when being shown" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/ViewImageModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:22" time="0.503" tests="22">
    <testcase classname="components/ViewImageModal should match snapshot, modal not shown" name="components/ViewImageModal should match snapshot, modal not shown" time="0.012">
    </testcase>
    <testcase classname="components/ViewImageModal should match snapshot, loading" name="components/ViewImageModal should match snapshot, loading" time="0.003">
    </testcase>
    <testcase classname="components/ViewImageModal should match snapshot, loaded with image" name="components/ViewImageModal should match snapshot, loaded with image" time="0.002">
    </testcase>
    <testcase classname="components/ViewImageModal should match snapshot, loaded with .mov file" name="components/ViewImageModal should match snapshot, loaded with .mov file" time="0.002">
    </testcase>
    <testcase classname="components/ViewImageModal should match snapshot, loaded with .m4a file" name="components/ViewImageModal should match snapshot, loaded with .m4a file" time="0.001">
    </testcase>
    <testcase classname="components/ViewImageModal should match snapshot, loaded with .js file" name="components/ViewImageModal should match snapshot, loaded with .js file" time="0.002">
    </testcase>
    <testcase classname="components/ViewImageModal should match snapshot, loaded with other file" name="components/ViewImageModal should match snapshot, loaded with other file" time="0.002">
    </testcase>
    <testcase classname="components/ViewImageModal should match snapshot, loaded with left and right arrows" name="components/ViewImageModal should match snapshot, loaded with left and right arrows" time="0.019">
    </testcase>
    <testcase classname="components/ViewImageModal should match snapshot, loaded with footer" name="components/ViewImageModal should match snapshot, loaded with footer" time="0.002">
    </testcase>
    <testcase classname="components/ViewImageModal should match snapshot, loaded" name="components/ViewImageModal should match snapshot, loaded" time="0.002">
    </testcase>
    <testcase classname="components/ViewImageModal should match snapshot, loaded and showing footer" name="components/ViewImageModal should match snapshot, loaded and showing footer" time="0.001">
    </testcase>
    <testcase classname="components/ViewImageModal should go to next or previous upon key press of right or left, respectively" name="components/ViewImageModal should go to next or previous upon key press of right or left, respectively" time="0.005">
    </testcase>
    <testcase classname="components/ViewImageModal should handle onMouseEnter and onMouseLeave" name="components/ViewImageModal should handle onMouseEnter and onMouseLeave" time="0.002">
    </testcase>
    <testcase classname="components/ViewImageModal should have called onModalDismissed" name="components/ViewImageModal should have called onModalDismissed" time="0.002">
    </testcase>
    <testcase classname="components/ViewImageModal should match snapshot on onModalShown and onModalHidden" name="components/ViewImageModal should match snapshot on onModalShown and onModalHidden" time="0.004">
    </testcase>
    <testcase classname="components/ViewImageModal should match snapshot for external file" name="components/ViewImageModal should match snapshot for external file" time="0.002">
    </testcase>
    <testcase classname="components/ViewImageModal should have called loadImage" name="components/ViewImageModal should have called loadImage" time="0.002">
    </testcase>
    <testcase classname="components/ViewImageModal should handle handleImageLoaded" name="components/ViewImageModal should handle handleImageLoaded" time="0.001">
    </testcase>
    <testcase classname="components/ViewImageModal should handle handleImageProgress" name="components/ViewImageModal should handle handleImageProgress" time="0.002">
    </testcase>
    <testcase classname="components/ViewImageModal should pass componentWillReceiveProps" name="components/ViewImageModal should pass componentWillReceiveProps" time="0.004">
    </testcase>
    <testcase classname="components/ViewImageModal should match snapshot when plugin overrides the preview component" name="components/ViewImageModal should match snapshot when plugin overrides the preview component" time="0.002">
    </testcase>
    <testcase classname="components/ViewImageModal should fall back to default preview if plugin does not need to override preview component" name="components/ViewImageModal should fall back to default preview if plugin does not need to override preview component" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/index" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:22" time="0.475" tests="6">
    <testcase classname="components/post_view/index should return false if loading a permalink view" name="components/post_view/index should return false if loading a permalink view" time="0.001">
    </testcase>
    <testcase classname="components/post_view/index should return true if channel or if team data is not present" name="components/post_view/index should return true if channel or if team data is not present" time="0.001">
    </testcase>
    <testcase classname="components/post_view/index should return true if channel is a DM and indetifier is not the same as teammate name" name="components/post_view/index should return true if channel is a DM and indetifier is not the same as teammate name" time="0.001">
    </testcase>
    <testcase classname="components/post_view/index should return true if channel is a GM and indetifier is not the same as channel name" name="components/post_view/index should return true if channel is a GM and indetifier is not the same as channel name" time="0">
    </testcase>
    <testcase classname="components/post_view/index should return true if channel team id is not the same as current team id" name="components/post_view/index should return true if channel team id is not the same as current team id" time="0.001">
    </testcase>
    <testcase classname="components/post_view/index should return true if teamMemberships exist but team is not part of membership" name="components/post_view/index should return true if teamMemberships exist but team is not part of membership" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/SearchResults" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:23" time="0.38" tests="2">
    <testcase classname="components/SearchResults shouldRenderFromPropsAndState should not render" name="components/SearchResults shouldRenderFromPropsAndState should not render" time="0.001">
    </testcase>
    <testcase classname="components/SearchResults shouldRenderFromPropsAndState should render" name="components/SearchResults shouldRenderFromPropsAndState should render" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/user_settings/display/UserSettingsDisplay" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:23" time="0.657" tests="3">
    <testcase classname="components/user_settings/display/UserSettingsDisplay should have called handleSubmit" name="components/user_settings/display/UserSettingsDisplay should have called handleSubmit" time="0.004">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should have called handleSubmit" name="components/user_settings/display/UserSettingsDisplay should have called handleSubmit" time="0.003">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should reset state when handleUpdateSection is called" name="components/user_settings/display/UserSettingsDisplay should reset state when handleUpdateSection is called" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:24" time="0.442" tests="9">
    <testcase classname="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should match snapshot on roles without permissions" name="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should match snapshot on roles without permissions" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should match snapshot when the license doesnt have custom schemes" name="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should match snapshot when the license doesnt have custom schemes" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should match snapshot on roles with permissions" name="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should match snapshot on roles with permissions" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should save each role on handleSubmit except system_admin role" name="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should save each role on handleSubmit except system_admin role" time="0.005">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should save roles based on license" name="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should save roles based on license" time="0.015">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should show error if editRole fails" name="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should show error if editRole fails" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should open and close correctly roles blocks" name="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should open and close correctly roles blocks" time="0.009">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should open modal on click reset defaults" name="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should open modal on click reset defaults" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should have default permissions that match the defaults constant" name="components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings should have default permissions that match the defaults constant" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/dot_menu/DotMenu returning empty (&quot;&quot;)" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:24" time="0.379" tests="1">
    <testcase classname="components/dot_menu/DotMenu returning empty (&quot;&quot;) should match snapshot, return empty (&quot;&quot;) on Center" name="components/dot_menu/DotMenu returning empty (&quot;&quot;) should match snapshot, return empty (&quot;&quot;) on Center" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/bots/AddBot" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:25" time="0.568" tests="2">
    <testcase classname="components/integrations/bots/AddBot blank" name="components/integrations/bots/AddBot blank" time="0.012">
    </testcase>
    <testcase classname="components/integrations/bots/AddBot edit bot" name="components/integrations/bots/AddBot edit bot" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/post_view" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:25" time="0.417" tests="4">
    <testcase classname="components/post_view/post_view should match snapshot for channel loading" name="components/post_view/post_view should match snapshot for channel loading" time="0.003">
    </testcase>
    <testcase classname="components/post_view/post_view should match snapshot for loaderForChangeOfPostsChunk" name="components/post_view/post_view should match snapshot for loaderForChangeOfPostsChunk" time="0.002">
    </testcase>
    <testcase classname="components/post_view/post_view unreadChunkTimeStamp should be set for first load of channel" name="components/post_view/post_view unreadChunkTimeStamp should be set for first load of channel" time="0.001">
    </testcase>
    <testcase classname="components/post_view/post_view changeUnreadChunkTimeStamp" name="components/post_view/post_view changeUnreadChunkTimeStamp" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="components/ChannelHeaderDropdown/MenuItem.CloseChannel" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:26" time="0.366" tests="3">
    <testcase classname="components/ChannelHeaderDropdown/MenuItem.CloseChannel should match snapshot" name="components/ChannelHeaderDropdown/MenuItem.CloseChannel should match snapshot" time="0.002">
    </testcase>
    <testcase classname="components/ChannelHeaderDropdown/MenuItem.CloseChannel shoud be hidden if the channel is not archived" name="components/ChannelHeaderDropdown/MenuItem.CloseChannel shoud be hidden if the channel is not archived" time="0.002">
    </testcase>
    <testcase classname="components/ChannelHeaderDropdown/MenuItem.CloseChannel should runs goToLastViewedChannel function on click" name="components/ChannelHeaderDropdown/MenuItem.CloseChannel should runs goToLastViewedChannel function on click" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Markdown.Links" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:26" time="0.43" tests="21">
    <testcase classname="Markdown.Links Not links" name="Markdown.Links Not links" time="0.004">
    </testcase>
    <testcase classname="Markdown.Links External links" name="Markdown.Links External links" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links IP addresses" name="Markdown.Links IP addresses" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links Links with anchors" name="Markdown.Links Links with anchors" time="0">
    </testcase>
    <testcase classname="Markdown.Links Links with parameters" name="Markdown.Links Links with parameters" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links Special characters" name="Markdown.Links Special characters" time="0.002">
    </testcase>
    <testcase classname="Markdown.Links Brackets" name="Markdown.Links Brackets" time="0">
    </testcase>
    <testcase classname="Markdown.Links Email addresses" name="Markdown.Links Email addresses" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links Formatted links" name="Markdown.Links Formatted links" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links Links with text" name="Markdown.Links Links with text" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links Links with tooltips" name="Markdown.Links Links with tooltips" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links Links with surrounding text" name="Markdown.Links Links with surrounding text" time="0">
    </testcase>
    <testcase classname="Markdown.Links Links with trailing punctuation" name="Markdown.Links Links with trailing punctuation" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links Links with surrounding brackets" name="Markdown.Links Links with surrounding brackets" time="0.009">
    </testcase>
    <testcase classname="Markdown.Links Searching for links" name="Markdown.Links Searching for links" time="0.002">
    </testcase>
    <testcase classname="Markdown.Links Links containing %" name="Markdown.Links Links containing %" time="0">
    </testcase>
    <testcase classname="Markdown.Links Relative link" name="Markdown.Links Relative link" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links autolinkedUrlSchemes all links are rendered when not provided" name="Markdown.Links autolinkedUrlSchemes all links are rendered when not provided" time="0.002">
    </testcase>
    <testcase classname="Markdown.Links autolinkedUrlSchemes no links are rendered when no schemes are provided" name="Markdown.Links autolinkedUrlSchemes no links are rendered when no schemes are provided" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links autolinkedUrlSchemes only matching links are rendered when schemes are provided" name="Markdown.Links autolinkedUrlSchemes only matching links are rendered when schemes are provided" time="0.002">
    </testcase>
    <testcase classname="Markdown.Links autolinkedUrlSchemes explicit links are not affected by this setting" name="Markdown.Links autolinkedUrlSchemes explicit links are not affected by this setting" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/team/TeamDetails" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:27" time="0.394" tests="1">
    <testcase classname="admin_console/team_channel_settings/team/TeamDetails should match snapshot" name="admin_console/team_channel_settings/team/TeamDetails should match snapshot" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/PostInfo" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:27" time="0.509" tests="13">
    <testcase classname="components/post_view/PostInfo should match snapshot" name="components/post_view/PostInfo should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/post_view/PostInfo should match snapshot, compact display" name="components/post_view/PostInfo should match snapshot, compact display" time="0.002">
    </testcase>
    <testcase classname="components/post_view/PostInfo should match snapshot, military time" name="components/post_view/PostInfo should match snapshot, military time" time="0.001">
    </testcase>
    <testcase classname="components/post_view/PostInfo should match snapshot, flagged post" name="components/post_view/PostInfo should match snapshot, flagged post" time="0.001">
    </testcase>
    <testcase classname="components/post_view/PostInfo should match snapshot, pinned post" name="components/post_view/PostInfo should match snapshot, pinned post" time="0.002">
    </testcase>
    <testcase classname="components/post_view/PostInfo should match snapshot, ephemeral post" name="components/post_view/PostInfo should match snapshot, ephemeral post" time="0.001">
    </testcase>
    <testcase classname="components/post_view/PostInfo should match snapshot, deleted post" name="components/post_view/PostInfo should match snapshot, deleted post" time="0.001">
    </testcase>
    <testcase classname="components/post_view/PostInfo should match snapshot, ephemeral deleted post" name="components/post_view/PostInfo should match snapshot, ephemeral deleted post" time="0.001">
    </testcase>
    <testcase classname="components/post_view/PostInfo should match snapshot, enable emoji picker" name="components/post_view/PostInfo should match snapshot, enable emoji picker" time="0.001">
    </testcase>
    <testcase classname="components/post_view/PostInfo toggleEmojiPicker, should have called props.handleDropdownOpened" name="components/post_view/PostInfo toggleEmojiPicker, should have called props.handleDropdownOpened" time="0.002">
    </testcase>
    <testcase classname="components/post_view/PostInfo removePost, should have called props.actions.removePost(post)" name="components/post_view/PostInfo removePost, should have called props.actions.removePost(post)" time="0.002">
    </testcase>
    <testcase classname="components/post_view/PostInfo should match snapshot, hover" name="components/post_view/PostInfo should match snapshot, hover" time="0.001">
    </testcase>
    <testcase classname="components/post_view/PostInfo should match snapshot, showTimeWithoutHover" name="components/post_view/PostInfo should match snapshot, showTimeWithoutHover" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/group/GroupUsers" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:28" time="0.383" tests="3">
    <testcase classname="admin_console/team_channel_settings/group/GroupUsers should match snapshot, on loading without data" name="admin_console/team_channel_settings/group/GroupUsers should match snapshot, on loading without data" time="0.003">
    </testcase>
    <testcase classname="admin_console/team_channel_settings/group/GroupUsers should match snapshot, on loading with data" name="admin_console/team_channel_settings/group/GroupUsers should match snapshot, on loading with data" time="0.004">
    </testcase>
    <testcase classname="admin_console/team_channel_settings/group/GroupUsers should match snapshot, loaded with multiple pages" name="admin_console/team_channel_settings/group/GroupUsers should match snapshot, loaded with multiple pages" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="components/suggestion/at_mention_provider/AtMentionProvider" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:28" time="0.472" tests="15">
    <testcase classname="components/suggestion/at_mention_provider/AtMentionProvider should ignore pretexts that are not at-mentions" name="components/suggestion/at_mention_provider/AtMentionProvider should ignore pretexts that are not at-mentions" time="0.003">
    </testcase>
    <testcase classname="components/suggestion/at_mention_provider/AtMentionProvider should suggest for &quot;@&quot;" name="components/suggestion/at_mention_provider/AtMentionProvider should suggest for &quot;@&quot;" time="0.006">
    </testcase>
    <testcase classname="components/suggestion/at_mention_provider/AtMentionProvider should suggest for &quot;@&quot;, skipping the loading indicator if results load quickly" name="components/suggestion/at_mention_provider/AtMentionProvider should suggest for &quot;@&quot;, skipping the loading indicator if results load quickly" time="0.001">
    </testcase>
    <testcase classname="components/suggestion/at_mention_provider/AtMentionProvider should suggest for &quot;@h&quot;" name="components/suggestion/at_mention_provider/AtMentionProvider should suggest for &quot;@h&quot;" time="0.001">
    </testcase>
    <testcase classname="components/suggestion/at_mention_provider/AtMentionProvider should suggest for username match &quot;@user&quot;" name="components/suggestion/at_mention_provider/AtMentionProvider should suggest for username match &quot;@user&quot;" time="0.002">
    </testcase>
    <testcase classname="components/suggestion/at_mention_provider/AtMentionProvider should suggest for username match &quot;@six&quot;" name="components/suggestion/at_mention_provider/AtMentionProvider should suggest for username match &quot;@six&quot;" time="0.001">
    </testcase>
    <testcase classname="components/suggestion/at_mention_provider/AtMentionProvider should suggest for username match &quot;@split&quot;" name="components/suggestion/at_mention_provider/AtMentionProvider should suggest for username match &quot;@split&quot;" time="0.002">
    </testcase>
    <testcase classname="components/suggestion/at_mention_provider/AtMentionProvider should suggest for username match &quot;@-split&quot;" name="components/suggestion/at_mention_provider/AtMentionProvider should suggest for username match &quot;@-split&quot;" time="0.001">
    </testcase>
    <testcase classname="components/suggestion/at_mention_provider/AtMentionProvider should suggest for username match &quot;@junior&quot;" name="components/suggestion/at_mention_provider/AtMentionProvider should suggest for username match &quot;@junior&quot;" time="0.001">
    </testcase>
    <testcase classname="components/suggestion/at_mention_provider/AtMentionProvider should suggest for first_name match &quot;@X&quot;" name="components/suggestion/at_mention_provider/AtMentionProvider should suggest for first_name match &quot;@X&quot;" time="0.001">
    </testcase>
    <testcase classname="components/suggestion/at_mention_provider/AtMentionProvider should suggest for last_name match &quot;@Y&quot;" name="components/suggestion/at_mention_provider/AtMentionProvider should suggest for last_name match &quot;@Y&quot;" time="0.001">
    </testcase>
    <testcase classname="components/suggestion/at_mention_provider/AtMentionProvider should suggest for nickname match &quot;@Z&quot;" name="components/suggestion/at_mention_provider/AtMentionProvider should suggest for nickname match &quot;@Z&quot;" time="0.001">
    </testcase>
    <testcase classname="components/suggestion/at_mention_provider/AtMentionProvider should suggest ignore out_of_channel if found locally" name="components/suggestion/at_mention_provider/AtMentionProvider should suggest ignore out_of_channel if found locally" time="0.002">
    </testcase>
    <testcase classname="components/suggestion/at_mention_provider/AtMentionProvider should prioritise username match over other matches for in channel users" name="components/suggestion/at_mention_provider/AtMentionProvider should prioritise username match over other matches for in channel users" time="0.001">
    </testcase>
    <testcase classname="components/suggestion/at_mention_provider/AtMentionProvider should prioritise username match over other matches for out of channel users" name="components/suggestion/at_mention_provider/AtMentionProvider should prioritise username match over other matches for out of channel users" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="rhs view actions" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:28" time="0.639" tests="18">
    <testcase classname="rhs view actions clearCommentDraftUploads it calls actionOnGlobalItemsWithPrefix action correctly" name="rhs view actions clearCommentDraftUploads it calls actionOnGlobalItemsWithPrefix action correctly" time="0.002">
    </testcase>
    <testcase classname="rhs view actions updateCommentDraft it calls setGlobalItem action correctly" name="rhs view actions updateCommentDraft it calls setGlobalItem action correctly" time="0">
    </testcase>
    <testcase classname="rhs view actions makeOnMoveHistoryIndex it moves comment history index back" name="rhs view actions makeOnMoveHistoryIndex it moves comment history index back" time="0.002">
    </testcase>
    <testcase classname="rhs view actions makeOnMoveHistoryIndex it stores history message in draft" name="rhs view actions makeOnMoveHistoryIndex it stores history message in draft" time="0">
    </testcase>
    <testcase classname="rhs view actions submitPost it call PostActions.createPost with post" name="rhs view actions submitPost it call PostActions.createPost with post" time="0.002">
    </testcase>
    <testcase classname="rhs view actions submitPost it does not call PostActions.createPost when hooks fail" name="rhs view actions submitPost it does not call PostActions.createPost when hooks fail" time="0.001">
    </testcase>
    <testcase classname="rhs view actions submitReaction it adds a reaction when action is +" name="rhs view actions submitReaction it adds a reaction when action is +" time="0">
    </testcase>
    <testcase classname="rhs view actions submitReaction it removes a reaction when action is -" name="rhs view actions submitReaction it removes a reaction when action is -" time="0.001">
    </testcase>
    <testcase classname="rhs view actions submitCommand it calls executeCommand" name="rhs view actions submitCommand it calls executeCommand" time="0.001">
    </testcase>
    <testcase classname="rhs view actions submitCommand it does not call executeComaand when hooks fail" name="rhs view actions submitCommand it does not call executeComaand when hooks fail" time="0.001">
    </testcase>
    <testcase classname="rhs view actions submitCommand it calls submitPost on error.sendMessage" name="rhs view actions submitCommand it calls submitPost on error.sendMessage" time="0.217">
    </testcase>
    <testcase classname="rhs view actions makeOnSubmit it adds message into history" name="rhs view actions makeOnSubmit it adds message into history" time="0.001">
    </testcase>
    <testcase classname="rhs view actions makeOnSubmit it clears comment draft" name="rhs view actions makeOnSubmit it clears comment draft" time="0">
    </testcase>
    <testcase classname="rhs view actions makeOnSubmit it submits a reaction when message is +:smile:" name="rhs view actions makeOnSubmit it submits a reaction when message is +:smile:" time="0.001">
    </testcase>
    <testcase classname="rhs view actions makeOnSubmit it submits a command when message is /away" name="rhs view actions makeOnSubmit it submits a command when message is /away" time="0.001">
    </testcase>
    <testcase classname="rhs view actions makeOnSubmit it submits a regular post when options.ignoreSlash is true" name="rhs view actions makeOnSubmit it submits a regular post when options.ignoreSlash is true" time="0.003">
    </testcase>
    <testcase classname="rhs view actions makeOnSubmit it submits a regular post when message is something else" name="rhs view actions makeOnSubmit it submits a regular post when message is something else" time="0.001">
    </testcase>
    <testcase classname="rhs view actions makeOnEditLatestPost it dispatches the correct actions" name="rhs view actions makeOnEditLatestPost it dispatches the correct actions" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/SingleImageView" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:29" time="0.486" tests="6">
    <testcase classname="components/SingleImageView should match snapshot" name="components/SingleImageView should match snapshot" time="0.006">
    </testcase>
    <testcase classname="components/SingleImageView should match snapshot, SVG image" name="components/SingleImageView should match snapshot, SVG image" time="0.003">
    </testcase>
    <testcase classname="components/SingleImageView should match state on handleImageClick" name="components/SingleImageView should match state on handleImageClick" time="0.002">
    </testcase>
    <testcase classname="components/SingleImageView should match state on showPreviewModal" name="components/SingleImageView should match state on showPreviewModal" time="0.002">
    </testcase>
    <testcase classname="components/SingleImageView should call toggleEmbedVisibility with post id" name="components/SingleImageView should call toggleEmbedVisibility with post id" time="0.002">
    </testcase>
    <testcase classname="components/SingleImageView should set loaded state on callback of onImageLoaded on SizeAwareImage component" name="components/SingleImageView should set loaded state on callback of onImageLoaded on SizeAwareImage component" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/team/TeamGroups" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:30" time="0.362" tests="1">
    <testcase classname="admin_console/team_channel_settings/team/TeamGroups should match snapshot" name="admin_console/team_channel_settings/team/TeamGroups should match snapshot" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/InstalledOutgoingWebhooks" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:30" time="0.42" tests="3">
    <testcase classname="components/integrations/InstalledOutgoingWebhooks should match snapshot" name="components/integrations/InstalledOutgoingWebhooks should match snapshot" time="0.005">
    </testcase>
    <testcase classname="components/integrations/InstalledOutgoingWebhooks should call regenOutgoingHookToken function" name="components/integrations/InstalledOutgoingWebhooks should call regenOutgoingHookToken function" time="0.002">
    </testcase>
    <testcase classname="components/integrations/InstalledOutgoingWebhooks should call removeOutgoingHook function" name="components/integrations/InstalledOutgoingWebhooks should call removeOutgoingHook function" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="FilePreview" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:30" time="0.385" tests="5">
    <testcase classname="FilePreview should match snapshot" name="FilePreview should match snapshot" time="0.003">
    </testcase>
    <testcase classname="FilePreview should match snapshot when props are changed" name="FilePreview should match snapshot when props are changed" time="0.003">
    </testcase>
    <testcase classname="FilePreview should call handleRemove when file removed" name="FilePreview should call handleRemove when file removed" time="0.001">
    </testcase>
    <testcase classname="FilePreview should not render an SVG when SVGs are disabled" name="FilePreview should not render an SVG when SVGs are disabled" time="0.009">
    </testcase>
    <testcase classname="FilePreview should render an SVG when SVGs are enabled" name="FilePreview should render an SVG when SVGs are enabled" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="components/user_settings/display/manage_timezones/manage_timezones" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:31" time="0.43" tests="1">
    <testcase classname="components/user_settings/display/manage_timezones/manage_timezones submitUser() should have called [updateMe, updateSection]" name="components/user_settings/display/manage_timezones/manage_timezones submitUser() should have called [updateMe, updateSection]" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/AbstractCommand" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:31" time="0.577" tests="6">
    <testcase classname="components/integrations/AbstractCommand should match snapshot" name="components/integrations/AbstractCommand should match snapshot" time="0.007">
    </testcase>
    <testcase classname="components/integrations/AbstractCommand should match snapshot, displays client error" name="components/integrations/AbstractCommand should match snapshot, displays client error" time="0.016">
    </testcase>
    <testcase classname="components/integrations/AbstractCommand should call action function" name="components/integrations/AbstractCommand should call action function" time="0.007">
    </testcase>
    <testcase classname="components/integrations/AbstractCommand should match object returned by getStateFromCommand" name="components/integrations/AbstractCommand should match object returned by getStateFromCommand" time="0.002">
    </testcase>
    <testcase classname="components/integrations/AbstractCommand should match state when method is called" name="components/integrations/AbstractCommand should match state when method is called" time="0.026">
    </testcase>
    <testcase classname="components/integrations/AbstractCommand should match state when handleSubmit is called" name="components/integrations/AbstractCommand should match state when handleSubmit is called" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="components/file_attachment/FilenameOverlay" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:32" time="0.477" tests="4">
    <testcase classname="components/file_attachment/FilenameOverlay should match snapshot, standard display" name="components/file_attachment/FilenameOverlay should match snapshot, standard display" time="0.003">
    </testcase>
    <testcase classname="components/file_attachment/FilenameOverlay should match snapshot, compact display" name="components/file_attachment/FilenameOverlay should match snapshot, compact display" time="0.006">
    </testcase>
    <testcase classname="components/file_attachment/FilenameOverlay should match snapshot, with Download icon as children" name="components/file_attachment/FilenameOverlay should match snapshot, with Download icon as children" time="0.003">
    </testcase>
    <testcase classname="components/file_attachment/FilenameOverlay should match snapshot, standard but not downloadable" name="components/file_attachment/FilenameOverlay should match snapshot, standard but not downloadable" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ManageTeamsModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:32" time="0.393" tests="3">
    <testcase classname="ManageTeamsModal should match snapshot init" name="ManageTeamsModal should match snapshot init" time="0.005">
    </testcase>
    <testcase classname="ManageTeamsModal should call api calls on mount" name="ManageTeamsModal should call api calls on mount" time="0.002">
    </testcase>
    <testcase classname="ManageTeamsModal should save data in state from api calls" name="ManageTeamsModal should save data in state from api calls" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="components/select_team/SelectTeam" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:33" time="0.522" tests="9">
    <testcase classname="components/select_team/SelectTeam should match snapshot" name="components/select_team/SelectTeam should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/select_team/SelectTeam should match snapshot, on loading" name="components/select_team/SelectTeam should match snapshot, on loading" time="0.003">
    </testcase>
    <testcase classname="components/select_team/SelectTeam should match snapshot, on error" name="components/select_team/SelectTeam should match snapshot, on error" time="0.002">
    </testcase>
    <testcase classname="components/select_team/SelectTeam should match snapshot, on no joinable team but can create team" name="components/select_team/SelectTeam should match snapshot, on no joinable team but can create team" time="0.001">
    </testcase>
    <testcase classname="components/select_team/SelectTeam should match snapshot, on no joinable team and is not system admin nor can create team" name="components/select_team/SelectTeam should match snapshot, on no joinable team and is not system admin nor can create team" time="0.002">
    </testcase>
    <testcase classname="components/select_team/SelectTeam should match snapshot, on no joinable team and user is guest" name="components/select_team/SelectTeam should match snapshot, on no joinable team and user is guest" time="0.002">
    </testcase>
    <testcase classname="components/select_team/SelectTeam should match state and call addUserToTeam on handleTeamClick" name="components/select_team/SelectTeam should match state and call addUserToTeam on handleTeamClick" time="0.001">
    </testcase>
    <testcase classname="components/select_team/SelectTeam should call emitUserLoggedOutEvent on handleLogoutClick" name="components/select_team/SelectTeam should call emitUserLoggedOutEvent on handleLogoutClick" time="0.001">
    </testcase>
    <testcase classname="components/select_team/SelectTeam should match state on clearError" name="components/select_team/SelectTeam should match state on clearError" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/analytics/doughnut_chart.tsx" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:33" time="0.429" tests="5">
    <testcase classname="components/analytics/doughnut_chart.tsx should match snapshot, on loading" name="components/analytics/doughnut_chart.tsx should match snapshot, on loading" time="0.003">
    </testcase>
    <testcase classname="components/analytics/doughnut_chart.tsx should match snapshot, loaded without data" name="components/analytics/doughnut_chart.tsx should match snapshot, loaded without data" time="0.013">
    </testcase>
    <testcase classname="components/analytics/doughnut_chart.tsx should match snapshot, loaded with data" name="components/analytics/doughnut_chart.tsx should match snapshot, loaded with data" time="0.011">
    </testcase>
    <testcase classname="components/analytics/doughnut_chart.tsx should create and destroy the chart on mount and unmount with data" name="components/analytics/doughnut_chart.tsx should create and destroy the chart on mount and unmount with data" time="0.004">
    </testcase>
    <testcase classname="components/analytics/doughnut_chart.tsx should update the chart on data change" name="components/analytics/doughnut_chart.tsx should update the chart on data change" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/MessageAttachment" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:34" time="0.469" tests="11">
    <testcase classname="components/post_view/MessageAttachment should match snapshot" name="components/post_view/MessageAttachment should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/post_view/MessageAttachment should change checkOverflow state on handleHeightReceived change" name="components/post_view/MessageAttachment should change checkOverflow state on handleHeightReceived change" time="0.01">
    </testcase>
    <testcase classname="components/post_view/MessageAttachment should match value on renderPostActions" name="components/post_view/MessageAttachment should match value on renderPostActions" time="0.003">
    </testcase>
    <testcase classname="components/post_view/MessageAttachment should call actions.doPostActionWithCookie on handleAction" name="components/post_view/MessageAttachment should call actions.doPostActionWithCookie on handleAction" time="0.002">
    </testcase>
    <testcase classname="components/post_view/MessageAttachment should match value on getFieldsTable" name="components/post_view/MessageAttachment should match value on getFieldsTable" time="0.002">
    </testcase>
    <testcase classname="components/post_view/MessageAttachment should use ExternalImage for images" name="components/post_view/MessageAttachment should use ExternalImage for images" time="0.02">
    </testcase>
    <testcase classname="components/post_view/MessageAttachment should match snapshot when the attachment has an emoji in the title" name="components/post_view/MessageAttachment should match snapshot when the attachment has an emoji in the title" time="0.002">
    </testcase>
    <testcase classname="components/post_view/MessageAttachment should match snapshot when the attachment hasn&apos;t any emojis in the title" name="components/post_view/MessageAttachment should match snapshot when the attachment hasn&apos;t any emojis in the title" time="0.007">
    </testcase>
    <testcase classname="components/post_view/MessageAttachment should match snapshot when the attachment has a link in the title" name="components/post_view/MessageAttachment should match snapshot when the attachment has a link in the title" time="0.002">
    </testcase>
    <testcase classname="components/post_view/MessageAttachment should match snapshot when no footer is provided (even if footer_icon is provided)" name="components/post_view/MessageAttachment should match snapshot when no footer is provided (even if footer_icon is provided)" time="0.002">
    </testcase>
    <testcase classname="components/post_view/MessageAttachment should match snapshot when the footer is truncated" name="components/post_view/MessageAttachment should match snapshot when the footer is truncated" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:34" time="0.492" tests="11">
    <testcase classname="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx handleMakeActive() should have called updateUserActive" name="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx handleMakeActive() should have called updateUserActive" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx handleMakeActive() should have called onError" name="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx handleMakeActive() should have called onError" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx handleDeactivateMember() should have called updateUserActive" name="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx handleDeactivateMember() should have called updateUserActive" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx handleDeactivateMember() should have called onError" name="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx handleDeactivateMember() should have called onError" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx handleRevokeSessions() should have called revokeAllSessions" name="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx handleRevokeSessions() should have called revokeAllSessions" time="0.024">
    </testcase>
    <testcase classname="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx handleRevokeSessions() should have called onError" name="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx handleRevokeSessions() should have called onError" time="0.007">
    </testcase>
    <testcase classname="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx handleShowDeactivateMemberModal should not call the loadBots if the setting is not true" name="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx handleShowDeactivateMemberModal should not call the loadBots if the setting is not true" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx handleShowDeactivateMemberModal should call the loadBots only if the setting is true" name="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx handleShowDeactivateMemberModal should call the loadBots only if the setting is true" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx renderDeactivateMemberModal should not render the bot accounts warning in case the user do not have any bot accounts" name="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx renderDeactivateMemberModal should not render the bot accounts warning in case the user do not have any bot accounts" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx renderDeactivateMemberModal should render the bot accounts warning. owner_id has enabled bot accounts" name="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx renderDeactivateMemberModal should render the bot accounts warning. owner_id has enabled bot accounts" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx renderDeactivateMemberModal should not render the bot accounts warning. owner_id has no enabled bot accounts" name="components/admin_console/system_users/system_users_dropdown/system_users_dropdown.jsx renderDeactivateMemberModal should not render the bot accounts warning. owner_id has no enabled bot accounts" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/EditIncomingWebhook" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:35" time="0.582" tests="6">
    <testcase classname="components/integrations/EditIncomingWebhook should show Loading screen when no hook is provided" name="components/integrations/EditIncomingWebhook should show Loading screen when no hook is provided" time="0.003">
    </testcase>
    <testcase classname="components/integrations/EditIncomingWebhook should show AbstractIncomingWebhook" name="components/integrations/EditIncomingWebhook should show AbstractIncomingWebhook" time="0.002">
    </testcase>
    <testcase classname="components/integrations/EditIncomingWebhook should not call getIncomingHook" name="components/integrations/EditIncomingWebhook should not call getIncomingHook" time="0.001">
    </testcase>
    <testcase classname="components/integrations/EditIncomingWebhook should have called submitHook when editIncomingHook is initiated (no server error)" name="components/integrations/EditIncomingWebhook should have called submitHook when editIncomingHook is initiated (no server error)" time="0.002">
    </testcase>
    <testcase classname="components/integrations/EditIncomingWebhook should have called submitHook when editIncomingHook is initiated (with server error)" name="components/integrations/EditIncomingWebhook should have called submitHook when editIncomingHook is initiated (with server error)" time="0.002">
    </testcase>
    <testcase classname="components/integrations/EditIncomingWebhook should have called submitHook when editIncomingHook is initiated (with data)" name="components/integrations/EditIncomingWebhook should have called submitHook when editIncomingHook is initiated (with data)" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/invitation_modal/InvitationModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:35" time="0.38" tests="5">
    <testcase classname="components/invitation_modal/InvitationModal should match the snapshot" name="components/invitation_modal/InvitationModal should match the snapshot" time="0.003">
    </testcase>
    <testcase classname="components/invitation_modal/InvitationModal should match the snapshot when not show" name="components/invitation_modal/InvitationModal should match the snapshot when not show" time="0.001">
    </testcase>
    <testcase classname="components/invitation_modal/InvitationModal should match the snapshot when I have no permission to add users" name="components/invitation_modal/InvitationModal should match the snapshot when I have no permission to add users" time="0.001">
    </testcase>
    <testcase classname="components/invitation_modal/InvitationModal should match the snapshot when I have no permission to invite guests" name="components/invitation_modal/InvitationModal should match the snapshot when I have no permission to invite guests" time="0.001">
    </testcase>
    <testcase classname="components/invitation_modal/InvitationModal should call actions.getTeam if invite_id is empty" name="components/invitation_modal/InvitationModal should call actions.getTeam if invite_id is empty" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/ActivityLogModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:36" time="0.377" tests="4">
    <testcase classname="components/ActivityLogModal should match snapshot" name="components/ActivityLogModal should match snapshot" time="0.013">
    </testcase>
    <testcase classname="components/ActivityLogModal should match snapshot when submitRevoke is called" name="components/ActivityLogModal should match snapshot when submitRevoke is called" time="0.003">
    </testcase>
    <testcase classname="components/ActivityLogModal should have called actions.getUserAudits when onShow is called" name="components/ActivityLogModal should have called actions.getUserAudits when onShow is called" time="0.001">
    </testcase>
    <testcase classname="components/ActivityLogModal should match state when onHide is called" name="components/ActivityLogModal should match state when onHide is called" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/AddIncomingWebhook" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:36" time="0.405" tests="2">
    <testcase classname="components/integrations/AddIncomingWebhook should match snapshot" name="components/integrations/AddIncomingWebhook should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/integrations/AddIncomingWebhook should have called createIncomingHook" name="components/integrations/AddIncomingWebhook should have called createIncomingHook" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/ChannelHeaderDropdown/MenuItemToggleMuteChannel" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:36" time="0.401" tests="4">
    <testcase classname="components/ChannelHeaderDropdown/MenuItemToggleMuteChannel should match snapshot" name="components/ChannelHeaderDropdown/MenuItemToggleMuteChannel should match snapshot" time="0.002">
    </testcase>
    <testcase classname="components/ChannelHeaderDropdown/MenuItemToggleMuteChannel should unmute channel on click the channel was muted" name="components/ChannelHeaderDropdown/MenuItemToggleMuteChannel should unmute channel on click the channel was muted" time="0.003">
    </testcase>
    <testcase classname="components/ChannelHeaderDropdown/MenuItemToggleMuteChannel should mute channel on click the channel was unmuted" name="components/ChannelHeaderDropdown/MenuItemToggleMuteChannel should mute channel on click the channel was unmuted" time="0.001">
    </testcase>
    <testcase classname="components/ChannelHeaderDropdown/MenuItemToggleMuteChannel should be hidden if the channel type is DM" name="components/ChannelHeaderDropdown/MenuItemToggleMuteChannel should be hidden if the channel type is DM" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/logged_in/LoggedIn" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:37" time="0.556" tests="7">
    <testcase classname="components/logged_in/LoggedIn should render loading state without user" name="components/logged_in/LoggedIn should render loading state without user" time="0.027">
    </testcase>
    <testcase classname="components/logged_in/LoggedIn should redirect to mfa when required and not on /mfa/setup" name="components/logged_in/LoggedIn should redirect to mfa when required and not on /mfa/setup" time="0.004">
    </testcase>
    <testcase classname="components/logged_in/LoggedIn should render children when mfa required and already on /mfa/setup" name="components/logged_in/LoggedIn should render children when mfa required and already on /mfa/setup" time="0.001">
    </testcase>
    <testcase classname="components/logged_in/LoggedIn should render children when mfa is not required and on /mfa/confirm" name="components/logged_in/LoggedIn should render children when mfa is not required and on /mfa/confirm" time="0.001">
    </testcase>
    <testcase classname="components/logged_in/LoggedIn should redirect to terms of service when mfa not required and terms of service required but not on /terms_of_service" name="components/logged_in/LoggedIn should redirect to terms of service when mfa not required and terms of service required but not on /terms_of_service" time="0.002">
    </testcase>
    <testcase classname="components/logged_in/LoggedIn should render children when mfa is not required and terms of service required and on /terms_of_service" name="components/logged_in/LoggedIn should render children when mfa is not required and terms of service required and on /terms_of_service" time="0.001">
    </testcase>
    <testcase classname="components/logged_in/LoggedIn should render children when neither mfa nor terms of service required" name="components/logged_in/LoggedIn should render children when neither mfa nor terms of service required" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/AbstractOAuthApp" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:37" time="0.525" tests="9">
    <testcase classname="components/integrations/AbstractOAuthApp should match snapshot" name="components/integrations/AbstractOAuthApp should match snapshot" time="0.007">
    </testcase>
    <testcase classname="components/integrations/AbstractOAuthApp should match snapshot, displays client error" name="components/integrations/AbstractOAuthApp should match snapshot, displays client error" time="0.01">
    </testcase>
    <testcase classname="components/integrations/AbstractOAuthApp should call action function" name="components/integrations/AbstractOAuthApp should call action function" time="0.007">
    </testcase>
    <testcase classname="components/integrations/AbstractOAuthApp should have correct state when updateName is called" name="components/integrations/AbstractOAuthApp should have correct state when updateName is called" time="0.005">
    </testcase>
    <testcase classname="components/integrations/AbstractOAuthApp should have correct state when updateTrusted is called" name="components/integrations/AbstractOAuthApp should have correct state when updateTrusted is called" time="0.003">
    </testcase>
    <testcase classname="components/integrations/AbstractOAuthApp should have correct state when updateDescription is called" name="components/integrations/AbstractOAuthApp should have correct state when updateDescription is called" time="0.004">
    </testcase>
    <testcase classname="components/integrations/AbstractOAuthApp should have correct state when updateHomepage is called" name="components/integrations/AbstractOAuthApp should have correct state when updateHomepage is called" time="0.004">
    </testcase>
    <testcase classname="components/integrations/AbstractOAuthApp should have correct state when updateIconUrl is called" name="components/integrations/AbstractOAuthApp should have correct state when updateIconUrl is called" time="0.006">
    </testcase>
    <testcase classname="components/integrations/AbstractOAuthApp should have correct state when handleSubmit is called" name="components/integrations/AbstractOAuthApp should have correct state when handleSubmit is called" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="component/PDFPreview" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:38" time="0.389" tests="4">
    <testcase classname="component/PDFPreview should match snapshot, loading" name="component/PDFPreview should match snapshot, loading" time="0.007">
    </testcase>
    <testcase classname="component/PDFPreview should match snapshot, not successful" name="component/PDFPreview should match snapshot, not successful" time="0.001">
    </testcase>
    <testcase classname="component/PDFPreview should return correct state when updateStateFromProps is called" name="component/PDFPreview should return correct state when updateStateFromProps is called" time="0.002">
    </testcase>
    <testcase classname="component/PDFPreview should return correct state when onDocumentLoad is called" name="component/PDFPreview should return correct state when onDocumentLoad is called" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/MessageSubmitError" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:38" time="0.349" tests="2">
    <testcase classname="components/MessageSubmitError should display the submit link if the error is for an invalid slash command" name="components/MessageSubmitError should display the submit link if the error is for an invalid slash command" time="0.003">
    </testcase>
    <testcase classname="components/MessageSubmitError should not display the submit link if the error is not for an invalid slash command" name="components/MessageSubmitError should not display the submit link if the error is not for an invalid slash command" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/SuggestionList" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:39" time="0.35" tests="1">
    <testcase classname="components/SuggestionList should not throw error when currentLabel is null and label is generated" name="components/SuggestionList should not throw error when currentLabel is null and label is generated" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/dot_menu/DotMenu on mobile view" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:39" time="0.439" tests="1">
    <testcase classname="components/dot_menu/DotMenu on mobile view should match snapshot" name="components/dot_menu/DotMenu on mobile view should match snapshot" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/EditOutgoingWebhook" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:40" time="0.516" tests="9">
    <testcase classname="components/integrations/EditOutgoingWebhook should match snapshot" name="components/integrations/EditOutgoingWebhook should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/integrations/EditOutgoingWebhook should match snapshot, loading" name="components/integrations/EditOutgoingWebhook should match snapshot, loading" time="0.001">
    </testcase>
    <testcase classname="components/integrations/EditOutgoingWebhook should match snapshot when EnableOutgoingWebhooks is false" name="components/integrations/EditOutgoingWebhook should match snapshot when EnableOutgoingWebhooks is false" time="0.001">
    </testcase>
    <testcase classname="components/integrations/EditOutgoingWebhook should have match state when handleConfirmModal is called" name="components/integrations/EditOutgoingWebhook should have match state when handleConfirmModal is called" time="0.001">
    </testcase>
    <testcase classname="components/integrations/EditOutgoingWebhook should have match state when confirmModalDismissed is called" name="components/integrations/EditOutgoingWebhook should have match state when confirmModalDismissed is called" time="0.001">
    </testcase>
    <testcase classname="components/integrations/EditOutgoingWebhook should have match renderExtra" name="components/integrations/EditOutgoingWebhook should have match renderExtra" time="0.001">
    </testcase>
    <testcase classname="components/integrations/EditOutgoingWebhook should have match when editOutgoingHook is called" name="components/integrations/EditOutgoingWebhook should have match when editOutgoingHook is called" time="0.001">
    </testcase>
    <testcase classname="components/integrations/EditOutgoingWebhook should have match when submitHook is called on success" name="components/integrations/EditOutgoingWebhook should have match when submitHook is called on success" time="0.001">
    </testcase>
    <testcase classname="components/integrations/EditOutgoingWebhook should have match when submitHook is called on error" name="components/integrations/EditOutgoingWebhook should have match when submitHook is called on error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/PostFlagIcon" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:40" time="0.351" tests="1">
    <testcase classname="components/post_view/PostFlagIcon should match snapshot" name="components/post_view/PostFlagIcon should match snapshot" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="components/AccessHistoryModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:40" time="0.386" tests="4">
    <testcase classname="components/AccessHistoryModal should match snapshot when no audits exist" name="components/AccessHistoryModal should match snapshot when no audits exist" time="0.013">
    </testcase>
    <testcase classname="components/AccessHistoryModal should match snapshot when audits exist" name="components/AccessHistoryModal should match snapshot when audits exist" time="0.004">
    </testcase>
    <testcase classname="components/AccessHistoryModal should have called actions.getUserAudits when onShow is called" name="components/AccessHistoryModal should have called actions.getUserAudits when onShow is called" time="0.001">
    </testcase>
    <testcase classname="components/AccessHistoryModal should match state when onHide is called" name="components/AccessHistoryModal should match state when onHide is called" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/invitation_modal/InvitationModalGuestsStep" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:41" time="0.364" tests="1">
    <testcase classname="components/invitation_modal/InvitationModalGuestsStep should match the snapshot" name="components/invitation_modal/InvitationModalGuestsStep should match the snapshot" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="components/interactive_dialog/InteractiveDialog" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:41" time="0.426" tests="2">
    <testcase classname="components/interactive_dialog/InteractiveDialog generic error message should appear when submit returns an error" name="components/interactive_dialog/InteractiveDialog generic error message should appear when submit returns an error" time="0.008">
    </testcase>
    <testcase classname="components/interactive_dialog/InteractiveDialog generic error message should not appear when submit does not return an error" name="components/interactive_dialog/InteractiveDialog generic error message should not appear when submit does not return an error" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/AbstractOutgoingWebhook" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:42" time="0.359" tests="3">
    <testcase classname="components/integrations/AbstractOutgoingWebhook should match snapshot" name="components/integrations/AbstractOutgoingWebhook should match snapshot" time="0.006">
    </testcase>
    <testcase classname="components/integrations/AbstractOutgoingWebhook should render username in case of enablePostUsernameOverride is true " name="components/integrations/AbstractOutgoingWebhook should render username in case of enablePostUsernameOverride is true " time="0.009">
    </testcase>
    <testcase classname="components/integrations/AbstractOutgoingWebhook should render username in case of enablePostUsernameOverride is true " name="components/integrations/AbstractOutgoingWebhook should render username in case of enablePostUsernameOverride is true " time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/channel/ChannelGroups" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:42" time="0.351" tests="1">
    <testcase classname="admin_console/team_channel_settings/channel/ChannelGroups should match snapshot" name="admin_console/team_channel_settings/channel/ChannelGroups should match snapshot" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/ChannelHeaderDropdown/MenuItem.ToggleFavoriteChannel" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:42" time="0.385" tests="4">
    <testcase classname="components/ChannelHeaderDropdown/MenuItem.ToggleFavoriteChannel should match snapshot for favorite channel" name="components/ChannelHeaderDropdown/MenuItem.ToggleFavoriteChannel should match snapshot for favorite channel" time="0.002">
    </testcase>
    <testcase classname="components/ChannelHeaderDropdown/MenuItem.ToggleFavoriteChannel should runs unfavoriteChannel function for favorite channel" name="components/ChannelHeaderDropdown/MenuItem.ToggleFavoriteChannel should runs unfavoriteChannel function for favorite channel" time="0.003">
    </testcase>
    <testcase classname="components/ChannelHeaderDropdown/MenuItem.ToggleFavoriteChannel should match snapshot for not favorite channel" name="components/ChannelHeaderDropdown/MenuItem.ToggleFavoriteChannel should match snapshot for not favorite channel" time="0.001">
    </testcase>
    <testcase classname="components/ChannelHeaderDropdown/MenuItem.ToggleFavoriteChannel should runs favoriteChannel function for not favorite channel" name="components/ChannelHeaderDropdown/MenuItem.ToggleFavoriteChannel should runs favoriteChannel function for not favorite channel" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/channel_header/components/HeaderIconWrapper" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:43" time="0.391" tests="6">
    <testcase classname="components/channel_header/components/HeaderIconWrapper should match snapshot, on MentionsIcon" name="components/channel_header/components/HeaderIconWrapper should match snapshot, on MentionsIcon" time="0.003">
    </testcase>
    <testcase classname="components/channel_header/components/HeaderIconWrapper should match snapshot, on FlagIcon" name="components/channel_header/components/HeaderIconWrapper should match snapshot, on FlagIcon" time="0.001">
    </testcase>
    <testcase classname="components/channel_header/components/HeaderIconWrapper should match snapshot, on PinIcon" name="components/channel_header/components/HeaderIconWrapper should match snapshot, on PinIcon" time="0.001">
    </testcase>
    <testcase classname="components/channel_header/components/HeaderIconWrapper should match snapshot, on SearchIcon" name="components/channel_header/components/HeaderIconWrapper should match snapshot, on SearchIcon" time="0.002">
    </testcase>
    <testcase classname="components/channel_header/components/HeaderIconWrapper should match snapshot, on PluginIcon with tooltipText" name="components/channel_header/components/HeaderIconWrapper should match snapshot, on PluginIcon with tooltipText" time="0.001">
    </testcase>
    <testcase classname="components/channel_header/components/HeaderIconWrapper should match snapshot, on PluginIcon without tooltipText" name="components/channel_header/components/HeaderIconWrapper should match snapshot, on PluginIcon without tooltipText" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/DeleteModalTrigger" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:43" time="0.458" tests="10">
    <testcase classname="components/DeleteModalTrigger should throw error when trying to construct DeleteModalTrigger" name="components/DeleteModalTrigger should throw error when trying to construct DeleteModalTrigger" time="0.004">
    </testcase>
    <testcase classname="components/DeleteModalTrigger should match snapshot" name="components/DeleteModalTrigger should match snapshot" time="0.002">
    </testcase>
    <testcase classname="components/DeleteModalTrigger should match snapshot when showDeleteModal is set" name="components/DeleteModalTrigger should match snapshot when showDeleteModal is set" time="0.002">
    </testcase>
    <testcase classname="components/DeleteModalTrigger should have called onDelete on confirm" name="components/DeleteModalTrigger should have called onDelete on confirm" time="0.004">
    </testcase>
    <testcase classname="components/DeleteModalTrigger should have called onDelete on enter key down" name="components/DeleteModalTrigger should have called onDelete on enter key down" time="0.002">
    </testcase>
    <testcase classname="components/DeleteModalTrigger should not called onDelete on not enter key down" name="components/DeleteModalTrigger should not called onDelete on not enter key down" time="0.007">
    </testcase>
    <testcase classname="components/DeleteModalTrigger should match state when handleOpenModal is called" name="components/DeleteModalTrigger should match state when handleOpenModal is called" time="0.002">
    </testcase>
    <testcase classname="components/DeleteModalTrigger should have called onDelete when handleConfirm is called" name="components/DeleteModalTrigger should have called onDelete when handleConfirm is called" time="0.001">
    </testcase>
    <testcase classname="components/DeleteModalTrigger should match state when handleCancel is called" name="components/DeleteModalTrigger should match state when handleCancel is called" time="0.001">
    </testcase>
    <testcase classname="components/DeleteModalTrigger should have called handleConfirm when on handleKeyDown ENTER" name="components/DeleteModalTrigger should have called handleConfirm when on handleKeyDown ENTER" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/SizeAwareImage" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:44" time="0.41" tests="7">
    <testcase classname="components/SizeAwareImage should render an svg when first mounted with dimensions and div display set to position absolute" name="components/SizeAwareImage should render an svg when first mounted with dimensions and div display set to position absolute" time="0.011">
    </testcase>
    <testcase classname="components/SizeAwareImage img should have inherited class name from prop" name="components/SizeAwareImage img should have inherited class name from prop" time="0.009">
    </testcase>
    <testcase classname="components/SizeAwareImage should render a placeholder and has loader when showLoader is true" name="components/SizeAwareImage should render a placeholder and has loader when showLoader is true" time="0.004">
    </testcase>
    <testcase classname="components/SizeAwareImage should not have position absolute on button when image is in loaded state" name="components/SizeAwareImage should not have position absolute on button when image is in loaded state" time="0.003">
    </testcase>
    <testcase classname="components/SizeAwareImage should render the actual image when first mounted without dimensions" name="components/SizeAwareImage should render the actual image when first mounted without dimensions" time="0.002">
    </testcase>
    <testcase classname="components/SizeAwareImage should set loaded state when img loads and call onImageLoaded prop" name="components/SizeAwareImage should set loaded state when img loads and call onImageLoaded prop" time="0.002">
    </testcase>
    <testcase classname="components/SizeAwareImage should call onImageLoadFail when image load fails and should have svg" name="components/SizeAwareImage should call onImageLoadFail when image load fails and should have svg" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="components/team_members_dropdown" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:44" time="0.372" tests="3">
    <testcase classname="components/team_members_dropdown should match snapshot for team_members_dropdown" name="components/team_members_dropdown should match snapshot for team_members_dropdown" time="0.004">
    </testcase>
    <testcase classname="components/team_members_dropdown should match snapshot opening dropdown upwards" name="components/team_members_dropdown should match snapshot opening dropdown upwards" time="0.001">
    </testcase>
    <testcase classname="components/team_members_dropdown should match snapshot with group-constrained team" name="components/team_members_dropdown should match snapshot with group-constrained team" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/invitation_modal/InvitationModalMembersStep" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:44" time="0.354" tests="1">
    <testcase classname="components/invitation_modal/InvitationModalMembersStep should match the snapshot" name="components/invitation_modal/InvitationModalMembersStep should match the snapshot" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="components/TextBox" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:45" time="0.399" tests="3">
    <testcase classname="components/TextBox should match snapshot with required props" name="components/TextBox should match snapshot with required props" time="0.005">
    </testcase>
    <testcase classname="components/TextBox should throw error when value is too long" name="components/TextBox should throw error when value is too long" time="0.002">
    </testcase>
    <testcase classname="components/TextBox should throw error when new property is too long" name="components/TextBox should throw error when new property is too long" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/system_user_detail/team_list/AbstractList" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:45" time="0.464" tests="5">
    <testcase classname="admin_console/system_user_detail/team_list/AbstractList should match snapshot if loading" name="admin_console/system_user_detail/team_list/AbstractList should match snapshot if loading" time="0.004">
    </testcase>
    <testcase classname="admin_console/system_user_detail/team_list/AbstractList should match snapshot no data" name="admin_console/system_user_detail/team_list/AbstractList should match snapshot no data" time="0.002">
    </testcase>
    <testcase classname="admin_console/system_user_detail/team_list/AbstractList should match snapshot with teams data populated" name="admin_console/system_user_detail/team_list/AbstractList should match snapshot with teams data populated" time="0.003">
    </testcase>
    <testcase classname="admin_console/system_user_detail/team_list/AbstractList should match snapshot with enough teams data to require paging" name="admin_console/system_user_detail/team_list/AbstractList should match snapshot with enough teams data to require paging" time="0.003">
    </testcase>
    <testcase classname="admin_console/system_user_detail/team_list/AbstractList should match snapshot when on second page of pagination" name="admin_console/system_user_detail/team_list/AbstractList should match snapshot when on second page of pagination" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="components/user_settings/notifications/DesktopNotificationSettings" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:46" time="0.364" tests="7">
    <testcase classname="components/user_settings/notifications/DesktopNotificationSettings should match snapshot, on max setting" name="components/user_settings/notifications/DesktopNotificationSettings should match snapshot, on max setting" time="0.004">
    </testcase>
    <testcase classname="components/user_settings/notifications/DesktopNotificationSettings should match snapshot, on min setting" name="components/user_settings/notifications/DesktopNotificationSettings should match snapshot, on min setting" time="0.001">
    </testcase>
    <testcase classname="components/user_settings/notifications/DesktopNotificationSettings should call props.updateSection and props.cancel on handleMinUpdateSection" name="components/user_settings/notifications/DesktopNotificationSettings should call props.updateSection and props.cancel on handleMinUpdateSection" time="0.002">
    </testcase>
    <testcase classname="components/user_settings/notifications/DesktopNotificationSettings should call props.updateSection on handleMaxUpdateSection" name="components/user_settings/notifications/DesktopNotificationSettings should call props.updateSection on handleMaxUpdateSection" time="0.001">
    </testcase>
    <testcase classname="components/user_settings/notifications/DesktopNotificationSettings should call props.setParentState on handleOnChange" name="components/user_settings/notifications/DesktopNotificationSettings should call props.setParentState on handleOnChange" time="0.001">
    </testcase>
    <testcase classname="components/user_settings/notifications/DesktopNotificationSettings should match snapshot, on buildMaximizedSetting" name="components/user_settings/notifications/DesktopNotificationSettings should match snapshot, on buildMaximizedSetting" time="0.003">
    </testcase>
    <testcase classname="components/user_settings/notifications/DesktopNotificationSettings should match snapshot, on buildMinimizedSetting" name="components/user_settings/notifications/DesktopNotificationSettings should match snapshot, on buildMinimizedSetting" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/ResetStatusModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:46" time="0.373" tests="4">
    <testcase classname="components/ResetStatusModal should match snapshot" name="components/ResetStatusModal should match snapshot" time="0.002">
    </testcase>
    <testcase classname="components/ResetStatusModal should have match state when onConfirm is called" name="components/ResetStatusModal should have match state when onConfirm is called" time="0.004">
    </testcase>
    <testcase classname="components/ResetStatusModal should have match state when onCancel is called" name="components/ResetStatusModal should have match state when onCancel is called" time="0.001">
    </testcase>
    <testcase classname="components/ResetStatusModal should match snapshot, render modal for OOF status" name="components/ResetStatusModal should match snapshot, render modal for OOF status" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/group_settings/GroupRow" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:46" time="0.373" tests="9">
    <testcase classname="components/admin_console/group_settings/GroupRow should match snapshot, on linked and configured row" name="components/admin_console/group_settings/GroupRow should match snapshot, on linked and configured row" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupRow should match snapshot, on linked but not configured row" name="components/admin_console/group_settings/GroupRow should match snapshot, on linked but not configured row" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupRow should match snapshot, on not linked row" name="components/admin_console/group_settings/GroupRow should match snapshot, on not linked row" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupRow should match snapshot, on checked row" name="components/admin_console/group_settings/GroupRow should match snapshot, on checked row" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupRow should match snapshot, on failed linked row" name="components/admin_console/group_settings/GroupRow should match snapshot, on failed linked row" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupRow should match snapshot, on failed not linked row" name="components/admin_console/group_settings/GroupRow should match snapshot, on failed not linked row" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupRow onRowClick call to onCheckToggle" name="components/admin_console/group_settings/GroupRow onRowClick call to onCheckToggle" time="0">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupRow linkHandler must run the link action" name="components/admin_console/group_settings/GroupRow linkHandler must run the link action" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/group_settings/GroupRow unlinkHandler must run the unlink action" name="components/admin_console/group_settings/GroupRow unlinkHandler must run the unlink action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/ProfilePicture" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:47" time="0.402" tests="5">
    <testcase classname="components/ProfilePicture should match snapshot, no user specified, default props" name="components/ProfilePicture should match snapshot, no user specified, default props" time="0.003">
    </testcase>
    <testcase classname="components/ProfilePicture should match snapshot, profile and src, default props" name="components/ProfilePicture should match snapshot, profile and src, default props" time="0.001">
    </testcase>
    <testcase classname="components/ProfilePicture should match snapshot, no user specified, overridden props" name="components/ProfilePicture should match snapshot, no user specified, overridden props" time="0.001">
    </testcase>
    <testcase classname="components/ProfilePicture should match snapshot, user specified" name="components/ProfilePicture should match snapshot, user specified" time="0.001">
    </testcase>
    <testcase classname="components/ProfilePicture should match snapshot, user specified, overridden props" name="components/ProfilePicture should match snapshot, user specified, overridden props" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/channel_invite_modal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:47" time="0.505" tests="6">
    <testcase classname="components/channel_invite_modal should match snapshot for channel_invite_modal" name="components/channel_invite_modal should match snapshot for channel_invite_modal" time="0.004">
    </testcase>
    <testcase classname="components/channel_invite_modal should match state when onHide is called" name="components/channel_invite_modal should match state when onHide is called" time="0.002">
    </testcase>
    <testcase classname="components/channel_invite_modal should have called props.onHide when Modal.onExited is called" name="components/channel_invite_modal should have called props.onHide when Modal.onExited is called" time="0.005">
    </testcase>
    <testcase classname="components/channel_invite_modal should fail to add users on handleSubmit" name="components/channel_invite_modal should fail to add users on handleSubmit" time="0.003">
    </testcase>
    <testcase classname="components/channel_invite_modal should add users on handleSubmit" name="components/channel_invite_modal should add users on handleSubmit" time="0.004">
    </testcase>
    <testcase classname="components/channel_invite_modal should trim the search term" name="components/channel_invite_modal should trim the search term" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/ConfirmIntegration" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:48" time="0.446" tests="6">
    <testcase classname="components/integrations/ConfirmIntegration should match snapshot, oauthApps case" name="components/integrations/ConfirmIntegration should match snapshot, oauthApps case" time="0.01">
    </testcase>
    <testcase classname="components/integrations/ConfirmIntegration should match snapshot, commands case" name="components/integrations/ConfirmIntegration should match snapshot, commands case" time="0.002">
    </testcase>
    <testcase classname="components/integrations/ConfirmIntegration should match snapshot, incomingHooks case" name="components/integrations/ConfirmIntegration should match snapshot, incomingHooks case" time="0.002">
    </testcase>
    <testcase classname="components/integrations/ConfirmIntegration should match snapshot, outgoingHooks case" name="components/integrations/ConfirmIntegration should match snapshot, outgoingHooks case" time="0.001">
    </testcase>
    <testcase classname="components/integrations/ConfirmIntegration should match snapshot, outgoingHooks and bad identifier case" name="components/integrations/ConfirmIntegration should match snapshot, outgoingHooks and bad identifier case" time="0.002">
    </testcase>
    <testcase classname="components/integrations/ConfirmIntegration should match snapshot, bad integration type case" name="components/integrations/ConfirmIntegration should match snapshot, bad integration type case" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/permission_schemes_settings/permission_tree" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:48" time="0.374" tests="7">
    <testcase classname="components/admin_console/permission_schemes_settings/permission_tree should match snapshot on default data" name="components/admin_console/permission_schemes_settings/permission_tree should match snapshot on default data" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_tree should match snapshot on read only" name="components/admin_console/permission_schemes_settings/permission_tree should match snapshot on read only" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_tree should match snapshot on team scope" name="components/admin_console/permission_schemes_settings/permission_tree should match snapshot on team scope" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_tree should match snapshot on system scope" name="components/admin_console/permission_schemes_settings/permission_tree should match snapshot on system scope" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_tree should match snapshot with parentRole with permissions" name="components/admin_console/permission_schemes_settings/permission_tree should match snapshot with parentRole with permissions" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_tree should ask to toggle on row toggle" name="components/admin_console/permission_schemes_settings/permission_tree should ask to toggle on row toggle" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_tree should hide disabbled integration options" name="components/admin_console/permission_schemes_settings/permission_tree should hide disabbled integration options" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/login/LoginMfa" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:49" time="0.394" tests="3">
    <testcase classname="components/login/LoginMfa should match snapshot" name="components/login/LoginMfa should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/login/LoginMfa should have match state when handleChange is called" name="components/login/LoginMfa should have match state when handleChange is called" time="0.001">
    </testcase>
    <testcase classname="components/login/LoginMfa should have match state when handleSubmit is called" name="components/login/LoginMfa should have match state when handleSubmit is called" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="plugins/PostMessageView" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:49" time="0.405" tests="2">
    <testcase classname="plugins/PostMessageView should match snapshot with extended post type" name="plugins/PostMessageView should match snapshot with extended post type" time="0.011">
    </testcase>
    <testcase classname="plugins/PostMessageView should match snapshot with no extended post type" name="plugins/PostMessageView should match snapshot with no extended post type" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/PostAddChannelMember" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:49" time="0.485" tests="7">
    <testcase classname="components/post_view/PostAddChannelMember should match snapshot, empty postId" name="components/post_view/PostAddChannelMember should match snapshot, empty postId" time="0.002">
    </testcase>
    <testcase classname="components/post_view/PostAddChannelMember should match snapshot, empty channelType" name="components/post_view/PostAddChannelMember should match snapshot, empty channelType" time="0.001">
    </testcase>
    <testcase classname="components/post_view/PostAddChannelMember should match snapshot, public channel" name="components/post_view/PostAddChannelMember should match snapshot, public channel" time="0.002">
    </testcase>
    <testcase classname="components/post_view/PostAddChannelMember should match snapshot, private channel" name="components/post_view/PostAddChannelMember should match snapshot, private channel" time="0.001">
    </testcase>
    <testcase classname="components/post_view/PostAddChannelMember actions should have been called" name="components/post_view/PostAddChannelMember actions should have been called" time="0.002">
    </testcase>
    <testcase classname="components/post_view/PostAddChannelMember addChannelMember should have been called multiple times" name="components/post_view/PostAddChannelMember addChannelMember should have been called multiple times" time="0.002">
    </testcase>
    <testcase classname="components/post_view/PostAddChannelMember should match snapshot, with no-groups usernames" name="components/post_view/PostAddChannelMember should match snapshot, with no-groups usernames" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Actions.Channel" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:50" time="0.355" tests="3">
    <testcase classname="Actions.Channel loadChannelsForCurrentUser" name="Actions.Channel loadChannelsForCurrentUser" time="0.002">
    </testcase>
    <testcase classname="Actions.Channel searchMoreChannels" name="Actions.Channel searchMoreChannels" time="0.001">
    </testcase>
    <testcase classname="Actions.Channel addUsersToChannel" name="Actions.Channel addUsersToChannel" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/search_bar/SearchBar" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:50" time="0.362" tests="4">
    <testcase classname="components/search_bar/SearchBar should match snapshot without search" name="components/search_bar/SearchBar should match snapshot without search" time="0.004">
    </testcase>
    <testcase classname="components/search_bar/SearchBar should match snapshot without search on focus" name="components/search_bar/SearchBar should match snapshot without search on focus" time="0.003">
    </testcase>
    <testcase classname="components/search_bar/SearchBar should match snapshot without search on focus in mobile" name="components/search_bar/SearchBar should match snapshot without search on focus in mobile" time="0.002">
    </testcase>
    <testcase classname="components/search_bar/SearchBar should match snapshot with search" name="components/search_bar/SearchBar should match snapshot with search" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/tutorial/tutorial_tip/tutorial_tip.jsx" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:51" time="0.374" tests="5">
    <testcase classname="components/tutorial/tutorial_tip/tutorial_tip.jsx should match snapshot" name="components/tutorial/tutorial_tip/tutorial_tip.jsx should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/tutorial/tutorial_tip/tutorial_tip.jsx should not call both closeRhsMenu and savePreferences" name="components/tutorial/tutorial_tip/tutorial_tip.jsx should not call both closeRhsMenu and savePreferences" time="0.002">
    </testcase>
    <testcase classname="components/tutorial/tutorial_tip/tutorial_tip.jsx should have called both closeRhsMenu and savePreferences" name="components/tutorial/tutorial_tip/tutorial_tip.jsx should have called both closeRhsMenu and savePreferences" time="0.003">
    </testcase>
    <testcase classname="components/tutorial/tutorial_tip/tutorial_tip.jsx should have called mockEvent.preventDefault when skipTutorial" name="components/tutorial/tutorial_tip/tutorial_tip.jsx should have called mockEvent.preventDefault when skipTutorial" time="0.001">
    </testcase>
    <testcase classname="components/tutorial/tutorial_tip/tutorial_tip.jsx should have called both closeRhsMenu and savePreferences when skipTutorial" name="components/tutorial/tutorial_tip/tutorial_tip.jsx should have called both closeRhsMenu and savePreferences when skipTutorial" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/AddCommand" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:51" time="0.374" tests="1">
    <testcase classname="components/integrations/AddCommand should match snapshot" name="components/integrations/AddCommand should match snapshot" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/channel_notifications_modal/NotificationSection" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:51" time="0.42" tests="10">
    <testcase classname="components/channel_notifications_modal/NotificationSection should match snapshot, DESKTOP on collapsed view" name="components/channel_notifications_modal/NotificationSection should match snapshot, DESKTOP on collapsed view" time="0.003">
    </testcase>
    <testcase classname="components/channel_notifications_modal/NotificationSection should match snapshot, DESKTOP on expanded view" name="components/channel_notifications_modal/NotificationSection should match snapshot, DESKTOP on expanded view" time="0.002">
    </testcase>
    <testcase classname="components/channel_notifications_modal/NotificationSection should match snapshot, PUSH on collapsed view" name="components/channel_notifications_modal/NotificationSection should match snapshot, PUSH on collapsed view" time="0.001">
    </testcase>
    <testcase classname="components/channel_notifications_modal/NotificationSection should match snapshot, PUSH on expanded view" name="components/channel_notifications_modal/NotificationSection should match snapshot, PUSH on expanded view" time="0.001">
    </testcase>
    <testcase classname="components/channel_notifications_modal/NotificationSection should match snapshot, MARK_UNREAD on collapsed view" name="components/channel_notifications_modal/NotificationSection should match snapshot, MARK_UNREAD on collapsed view" time="0.002">
    </testcase>
    <testcase classname="components/channel_notifications_modal/NotificationSection should match snapshot, MARK_UNREAD on expanded view" name="components/channel_notifications_modal/NotificationSection should match snapshot, MARK_UNREAD on expanded view" time="0.001">
    </testcase>
    <testcase classname="components/channel_notifications_modal/NotificationSection should have called onChange when handleOnChange is called" name="components/channel_notifications_modal/NotificationSection should have called onChange when handleOnChange is called" time="0.002">
    </testcase>
    <testcase classname="components/channel_notifications_modal/NotificationSection should have called onUpdateSection when handleExpandSection is called" name="components/channel_notifications_modal/NotificationSection should have called onUpdateSection when handleExpandSection is called" time="0.002">
    </testcase>
    <testcase classname="components/channel_notifications_modal/NotificationSection should have called onUpdateSection when handleCollapseSection is called" name="components/channel_notifications_modal/NotificationSection should have called onUpdateSection when handleCollapseSection is called" time="0.001">
    </testcase>
    <testcase classname="components/channel_notifications_modal/NotificationSection should match snapshot on server error" name="components/channel_notifications_modal/NotificationSection should match snapshot on server error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/AddOutgoingWebhook" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:52" time="0.409" tests="1">
    <testcase classname="components/integrations/AddOutgoingWebhook should match snapshot" name="components/integrations/AddOutgoingWebhook should match snapshot" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/dot_menu/DotMenu" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:52" time="0.377" tests="3">
    <testcase classname="components/dot_menu/DotMenu should match snapshot, on Center" name="components/dot_menu/DotMenu should match snapshot, on Center" time="0.004">
    </testcase>
    <testcase classname="components/dot_menu/DotMenu should match snapshot, canDelete" name="components/dot_menu/DotMenu should match snapshot, canDelete" time="0.002">
    </testcase>
    <testcase classname="components/dot_menu/DotMenu should have divider when plugin menu item exists" name="components/dot_menu/DotMenu should have divider when plugin menu item exists" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/permission_schemes_settings/permission_row" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:53" time="0.363" tests="6">
    <testcase classname="components/admin_console/permission_schemes_settings/permission_row should match snapshot on editable and not inherited" name="components/admin_console/permission_schemes_settings/permission_row should match snapshot on editable and not inherited" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_row should match snapshot on editable and inherited" name="components/admin_console/permission_schemes_settings/permission_row should match snapshot on editable and inherited" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_row should match snapshot on read only and not inherited" name="components/admin_console/permission_schemes_settings/permission_row should match snapshot on read only and not inherited" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_row should match snapshot on read only and not inherited" name="components/admin_console/permission_schemes_settings/permission_row should match snapshot on read only and not inherited" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_row should call onChange function on click" name="components/admin_console/permission_schemes_settings/permission_row should call onChange function on click" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_row shouldn&apos;t call onChange function on click when is read-only" name="components/admin_console/permission_schemes_settings/permission_row shouldn&apos;t call onChange function on click when is read-only" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/InstalledCommand" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:53" time="0.43" tests="5">
    <testcase classname="components/integrations/InstalledCommand should match snapshot" name="components/integrations/InstalledCommand should match snapshot" time="0.007">
    </testcase>
    <testcase classname="components/integrations/InstalledCommand should match snapshot, not autocomplete, no display_name/description/auto_complete_hint" name="components/integrations/InstalledCommand should match snapshot, not autocomplete, no display_name/description/auto_complete_hint" time="0.002">
    </testcase>
    <testcase classname="components/integrations/InstalledCommand should call onRegenToken function" name="components/integrations/InstalledCommand should call onRegenToken function" time="0.004">
    </testcase>
    <testcase classname="components/integrations/InstalledCommand should call onDelete function" name="components/integrations/InstalledCommand should call onDelete function" time="0.002">
    </testcase>
    <testcase classname="components/integrations/InstalledCommand should filter out command" name="components/integrations/InstalledCommand should filter out command" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ExternalImage" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:53" time="0.445" tests="13">
    <testcase classname="ExternalImage should render an image" name="ExternalImage should render an image" time="0.002">
    </testcase>
    <testcase classname="ExternalImage should render an image without image metadata" name="ExternalImage should render an image without image metadata" time="0.002">
    </testcase>
    <testcase classname="ExternalImage should render an SVG when enabled" name="ExternalImage should render an SVG when enabled" time="0.001">
    </testcase>
    <testcase classname="ExternalImage should not render an SVG when disabled" name="ExternalImage should not render an SVG when disabled" time="0.001">
    </testcase>
    <testcase classname="ExternalImage should pass src through the image proxy when enabled" name="ExternalImage should pass src through the image proxy when enabled" time="0.001">
    </testcase>
    <testcase classname="ExternalImage isSVGImage no metadata, no extension" name="ExternalImage isSVGImage no metadata, no extension" time="0.001">
    </testcase>
    <testcase classname="ExternalImage isSVGImage no metadata, svg extension" name="ExternalImage isSVGImage no metadata, svg extension" time="0.001">
    </testcase>
    <testcase classname="ExternalImage isSVGImage no metadata, svg extension with query parameter" name="ExternalImage isSVGImage no metadata, svg extension with query parameter" time="0.005">
    </testcase>
    <testcase classname="ExternalImage isSVGImage no metadata, svg extension with hash" name="ExternalImage isSVGImage no metadata, svg extension with hash" time="0.001">
    </testcase>
    <testcase classname="ExternalImage isSVGImage no metadata, proxied image" name="ExternalImage isSVGImage no metadata, proxied image" time="0">
    </testcase>
    <testcase classname="ExternalImage isSVGImage no metadata, proxied svg image" name="ExternalImage isSVGImage no metadata, proxied svg image" time="0.001">
    </testcase>
    <testcase classname="ExternalImage isSVGImage with metadata, not an SVG" name="ExternalImage isSVGImage with metadata, not an SVG" time="0.001">
    </testcase>
    <testcase classname="ExternalImage isSVGImage with metadata, SVG" name="ExternalImage isSVGImage with metadata, SVG" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Channel Utils" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:54" time="0.353" tests="6">
    <testcase classname="Channel Utils findNextUnreadChannelId no channels are unread" name="Channel Utils findNextUnreadChannelId no channels are unread" time="0.002">
    </testcase>
    <testcase classname="Channel Utils findNextUnreadChannelId only current channel is unread" name="Channel Utils findNextUnreadChannelId only current channel is unread" time="0">
    </testcase>
    <testcase classname="Channel Utils findNextUnreadChannelId going forward to unread channels" name="Channel Utils findNextUnreadChannelId going forward to unread channels" time="0.001">
    </testcase>
    <testcase classname="Channel Utils findNextUnreadChannelId going forward to unread channels with wrapping" name="Channel Utils findNextUnreadChannelId going forward to unread channels with wrapping" time="0.001">
    </testcase>
    <testcase classname="Channel Utils findNextUnreadChannelId going backwards to unread channels" name="Channel Utils findNextUnreadChannelId going backwards to unread channels" time="0">
    </testcase>
    <testcase classname="Channel Utils findNextUnreadChannelId going backwards to unread channels with wrapping" name="Channel Utils findNextUnreadChannelId going backwards to unread channels with wrapping" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/Markdown" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:54" time="0.372" tests="2">
    <testcase classname="components/Markdown should render properly" name="components/Markdown should render properly" time="0.006">
    </testcase>
    <testcase classname="components/Markdown should not render markdown when formatting is disabled" name="components/Markdown should not render markdown when formatting is disabled" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="FileThumbnail" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:55" time="0.36" tests="5">
    <testcase classname="FileThumbnail should render a small image" name="FileThumbnail should render a small image" time="0.002">
    </testcase>
    <testcase classname="FileThumbnail should render a normal-sized image" name="FileThumbnail should render a normal-sized image" time="0.001">
    </testcase>
    <testcase classname="FileThumbnail should render an svg when svg previews are enabled" name="FileThumbnail should render an svg when svg previews are enabled" time="0.002">
    </testcase>
    <testcase classname="FileThumbnail should render an icon for an SVG when SVG previews are disabled" name="FileThumbnail should render an icon for an SVG when SVG previews are disabled" time="0.002">
    </testcase>
    <testcase classname="FileThumbnail should render an icon for a PDF" name="FileThumbnail should render an icon for a PDF" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="actions/global_actions" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:55" time="0.365" tests="3">
    <testcase classname="actions/global_actions redirectUserToDefaultTeam should redirect to /select_team when no team is available" name="actions/global_actions redirectUserToDefaultTeam should redirect to /select_team when no team is available" time="0.001">
    </testcase>
    <testcase classname="actions/global_actions redirectUserToDefaultTeam should redirect to last channel on first team when current team is no longer available" name="actions/global_actions redirectUserToDefaultTeam should redirect to last channel on first team when current team is no longer available" time="0.002">
    </testcase>
    <testcase classname="actions/global_actions toggleSideBarRightMenuAction" name="actions/global_actions toggleSideBarRightMenuAction" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="mapStateToProps" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:55" time="0.454" tests="2">
    <testcase classname="mapStateToProps canInviteGuests is false when group_constrained is true" name="mapStateToProps canInviteGuests is false when group_constrained is true" time="0.002">
    </testcase>
    <testcase classname="mapStateToProps canInviteGuests is true when group_constrained is false" name="mapStateToProps canInviteGuests is true when group_constrained is false" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/GetPostLinkModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:56" time="0.371" tests="3">
    <testcase classname="components/GetPostLinkModal should match snapshot with currentTeamUrl passed in" name="components/GetPostLinkModal should match snapshot with currentTeamUrl passed in" time="0.013">
    </testcase>
    <testcase classname="components/GetPostLinkModal should call hide on GetLinkModal&apos;s onHide" name="components/GetPostLinkModal should call hide on GetLinkModal&apos;s onHide" time="0.002">
    </testcase>
    <testcase classname="components/GetPostLinkModal should pass handleToggle" name="components/GetPostLinkModal should pass handleToggle" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Utils.getDisplayNameByUser" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:56" time="0.49" tests="33">
    <testcase classname="Utils.getDisplayNameByUser Show display name of user with TeammateNameDisplay set to username" name="Utils.getDisplayNameByUser Show display name of user with TeammateNameDisplay set to username" time="0.004">
    </testcase>
    <testcase classname="Utils.getDisplayNameByUser Show display name of user with TeammateNameDisplay set to nickname_full_name" name="Utils.getDisplayNameByUser Show display name of user with TeammateNameDisplay set to nickname_full_name" time="0.002">
    </testcase>
    <testcase classname="Utils.getDisplayNameByUser Show display name of user with TeammateNameDisplay set to username" name="Utils.getDisplayNameByUser Show display name of user with TeammateNameDisplay set to username" time="0.003">
    </testcase>
    <testcase classname="Utils.sortUsersByStatusAndDisplayName Users sort by status and displayname, TeammateNameDisplay set to username" name="Utils.sortUsersByStatusAndDisplayName Users sort by status and displayname, TeammateNameDisplay set to username" time="0.003">
    </testcase>
    <testcase classname="Utils.sortUsersByStatusAndDisplayName Users sort by status and displayname, TeammateNameDisplay set to nickname_full_name" name="Utils.sortUsersByStatusAndDisplayName Users sort by status and displayname, TeammateNameDisplay set to nickname_full_name" time="0.003">
    </testcase>
    <testcase classname="Utils.sortUsersByStatusAndDisplayName Users sort by status and displayname, TeammateNameDisplay set to full_name" name="Utils.sortUsersByStatusAndDisplayName Users sort by status and displayname, TeammateNameDisplay set to full_name" time="0.002">
    </testcase>
    <testcase classname="Utils.isValidPassword Minimum length enforced" name="Utils.isValidPassword Minimum length enforced" time="0.001">
    </testcase>
    <testcase classname="Utils.isValidPassword Require lowercase enforced" name="Utils.isValidPassword Require lowercase enforced" time="0">
    </testcase>
    <testcase classname="Utils.isValidPassword Require uppercase enforced" name="Utils.isValidPassword Require uppercase enforced" time="0.001">
    </testcase>
    <testcase classname="Utils.isValidPassword Require number enforced" name="Utils.isValidPassword Require number enforced" time="0.003">
    </testcase>
    <testcase classname="Utils.isValidPassword Require symbol enforced" name="Utils.isValidPassword Require symbol enforced" time="0">
    </testcase>
    <testcase classname="Utils.isKeyPressed Key match is used over keyCode if it exists" name="Utils.isKeyPressed Key match is used over keyCode if it exists" time="0.001">
    </testcase>
    <testcase classname="Utils.isKeyPressed Key match works for both uppercase and lower case" name="Utils.isKeyPressed Key match works for both uppercase and lower case" time="0">
    </testcase>
    <testcase classname="Utils.isKeyPressed KeyCode is used for dead letter keys" name="Utils.isKeyPressed KeyCode is used for dead letter keys" time="0.002">
    </testcase>
    <testcase classname="Utils.isKeyPressed KeyCode is used for unidentified keys" name="Utils.isKeyPressed KeyCode is used for unidentified keys" time="0">
    </testcase>
    <testcase classname="Utils.isKeyPressed KeyCode is used for undefined keys" name="Utils.isKeyPressed KeyCode is used for undefined keys" time="0.001">
    </testcase>
    <testcase classname="Utils.isKeyPressed keyCode is used for determining if it exists" name="Utils.isKeyPressed keyCode is used for determining if it exists" time="0">
    </testcase>
    <testcase classname="Utils.isKeyPressed key should be tested as fallback for different layout of english keyboards" name="Utils.isKeyPressed key should be tested as fallback for different layout of english keyboards" time="0.001">
    </testcase>
    <testcase classname="Utils.localizeMessage with translations with translations" name="Utils.localizeMessage with translations with translations" time="0.001">
    </testcase>
    <testcase classname="Utils.localizeMessage with translations with missing string in translations" name="Utils.localizeMessage with translations with missing string in translations" time="0">
    </testcase>
    <testcase classname="Utils.localizeMessage with translations with missing string in translations and no default" name="Utils.localizeMessage with translations with missing string in translations and no default" time="0.001">
    </testcase>
    <testcase classname="Utils.localizeMessage without translations without translations" name="Utils.localizeMessage without translations without translations" time="0">
    </testcase>
    <testcase classname="Utils.localizeMessage without translations without translations and no default" name="Utils.localizeMessage without translations without translations and no default" time="0.001">
    </testcase>
    <testcase classname="Utils.isDevMode dev mode off with missing EnableDeveloper field" name="Utils.isDevMode dev mode off with missing EnableDeveloper field" time="0">
    </testcase>
    <testcase classname="Utils.isDevMode dev mode off with EnableDeveloper field set to false" name="Utils.isDevMode dev mode off with EnableDeveloper field set to false" time="0.001">
    </testcase>
    <testcase classname="Utils.isDevMode dev mode off with EnableDeveloper field set to false bool" name="Utils.isDevMode dev mode off with EnableDeveloper field set to false bool" time="0">
    </testcase>
    <testcase classname="Utils.isDevMode dev mode off with EnableDeveloper field set to true bool" name="Utils.isDevMode dev mode off with EnableDeveloper field set to true bool" time="0.001">
    </testcase>
    <testcase classname="Utils.isDevMode dev mode off with EnableDeveloper field set to null" name="Utils.isDevMode dev mode off with EnableDeveloper field set to null" time="0">
    </testcase>
    <testcase classname="Utils.isDevMode dev mode on with EnableDeveloper field set to true text" name="Utils.isDevMode dev mode on with EnableDeveloper field set to true text" time="0">
    </testcase>
    <testcase classname="Utils.enableDevModeFeatures with DevModeFeatures invoke Map.Length" name="Utils.enableDevModeFeatures with DevModeFeatures invoke Map.Length" time="0.033">
    </testcase>
    <testcase classname="Utils.enableDevModeFeatures with DevModeFeatures invoke Set.Length" name="Utils.enableDevModeFeatures with DevModeFeatures invoke Set.Length" time="0.001">
    </testcase>
    <testcase classname="Utils.enableDevModeFeatures without DevModeFeatures invoke Map.Length" name="Utils.enableDevModeFeatures without DevModeFeatures invoke Map.Length" time="0.001">
    </testcase>
    <testcase classname="Utils.enableDevModeFeatures without DevModeFeatures invoke Set.Length" name="Utils.enableDevModeFeatures without DevModeFeatures invoke Set.Length" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/Reaction" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:57" time="0.388" tests="9">
    <testcase classname="components/post_view/Reaction should match snapshot" name="components/post_view/Reaction should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/post_view/Reaction should match snapshot when a current user reacted to a post" name="components/post_view/Reaction should match snapshot when a current user reacted to a post" time="0.002">
    </testcase>
    <testcase classname="components/post_view/Reaction should return null/empty if no emojiImageUrl" name="components/post_view/Reaction should return null/empty if no emojiImageUrl" time="0.001">
    </testcase>
    <testcase classname="components/post_view/Reaction should disable add reaction when you do not have permissions" name="components/post_view/Reaction should disable add reaction when you do not have permissions" time="0.001">
    </testcase>
    <testcase classname="components/post_view/Reaction should disable remove reaction when you do not have permissions" name="components/post_view/Reaction should disable remove reaction when you do not have permissions" time="0.001">
    </testcase>
    <testcase classname="components/post_view/Reaction should have called actions.addReaction when handleAddReaction is called" name="components/post_view/Reaction should have called actions.addReaction when handleAddReaction is called" time="0.001">
    </testcase>
    <testcase classname="components/post_view/Reaction should have called actions.removeReaction when handleRemoveReaction is called" name="components/post_view/Reaction should have called actions.removeReaction when handleRemoveReaction is called" time="0.008">
    </testcase>
    <testcase classname="components/post_view/Reaction should have called actions.getMissingProfilesByIds when loadMissingProfiles is called" name="components/post_view/Reaction should have called actions.getMissingProfilesByIds when loadMissingProfiles is called" time="0.001">
    </testcase>
    <testcase classname="components/post_view/Reaction should sort users by who reacted first" name="components/post_view/Reaction should sort users by who reacted first" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/InstalledIncomingWebhook" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:57" time="0.436" tests="7">
    <testcase classname="components/integrations/InstalledIncomingWebhook should match snapshot" name="components/integrations/InstalledIncomingWebhook should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/integrations/InstalledIncomingWebhook should not have edit and delete actions if user does not have permissions to change" name="components/integrations/InstalledIncomingWebhook should not have edit and delete actions if user does not have permissions to change" time="0.002">
    </testcase>
    <testcase classname="components/integrations/InstalledIncomingWebhook should have edit and delete actions if user can change webhook" name="components/integrations/InstalledIncomingWebhook should have edit and delete actions if user can change webhook" time="0.006">
    </testcase>
    <testcase classname="components/integrations/InstalledIncomingWebhook Should have the same name and description on view as it has in incomingWebhook" name="components/integrations/InstalledIncomingWebhook Should have the same name and description on view as it has in incomingWebhook" time="0.002">
    </testcase>
    <testcase classname="components/integrations/InstalledIncomingWebhook Should not display description as it is null" name="components/integrations/InstalledIncomingWebhook Should not display description as it is null" time="0.009">
    </testcase>
    <testcase classname="components/integrations/InstalledIncomingWebhook Should not render any nodes as there are no filtered results" name="components/integrations/InstalledIncomingWebhook Should not render any nodes as there are no filtered results" time="0.001">
    </testcase>
    <testcase classname="components/integrations/InstalledIncomingWebhook Should render a webhook item as filtered result is true" name="components/integrations/InstalledIncomingWebhook Should render a webhook item as filtered result is true" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="YoutubeVideo" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:58" time="0.446" tests="3">
    <testcase classname="YoutubeVideo should match init snapshot" name="YoutubeVideo should match init snapshot" time="0.009">
    </testcase>
    <testcase classname="YoutubeVideo should match snapshot for playing state" name="YoutubeVideo should match snapshot for playing state" time="0.001">
    </testcase>
    <testcase classname="YoutubeVideo should use url if secure_url is not present" name="YoutubeVideo should use url if secure_url is not present" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/system_users/list" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:58" time="0.403" tests="6">
    <testcase classname="components/admin_console/system_users/list should match default snapshot" name="components/admin_console/system_users/list should match default snapshot" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/system_users/list should match default snapshot, with users and mfa enabled" name="components/admin_console/system_users/list should match default snapshot, with users and mfa enabled" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/system_users/list should match default snapshot, with users and mfa disabled" name="components/admin_console/system_users/list should match default snapshot, with users and mfa disabled" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/system_users/list should reset page when team changes" name="components/admin_console/system_users/list should reset page when team changes" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/system_users/list should reset page when filter changes" name="components/admin_console/system_users/list should reset page when filter changes" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/system_users/list should not reset page when term changes" name="components/admin_console/system_users/list should not reset page when term changes" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/MoreChannels" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:58" time="0.427" tests="11">
    <testcase classname="components/MoreChannels should match snapshot and state" name="components/MoreChannels should match snapshot and state" time="0.005">
    </testcase>
    <testcase classname="components/MoreChannels should match state on handleHide" name="components/MoreChannels should match state on handleHide" time="0.002">
    </testcase>
    <testcase classname="components/MoreChannels should call props.onModalDismissed on handleExit" name="components/MoreChannels should call props.onModalDismissed on handleExit" time="0.001">
    </testcase>
    <testcase classname="components/MoreChannels should match state on onChange" name="components/MoreChannels should match state on onChange" time="0.002">
    </testcase>
    <testcase classname="components/MoreChannels should call props.getChannels on nextPage" name="components/MoreChannels should call props.getChannels on nextPage" time="0.002">
    </testcase>
    <testcase classname="components/MoreChannels should have loading prop true when searching state is true" name="components/MoreChannels should have loading prop true when searching state is true" time="0.002">
    </testcase>
    <testcase classname="components/MoreChannels should attempt to join the channel and fail" name="components/MoreChannels should attempt to join the channel and fail" time="0.002">
    </testcase>
    <testcase classname="components/MoreChannels should join the channel" name="components/MoreChannels should join the channel" time="0.002">
    </testcase>
    <testcase classname="components/MoreChannels should not perform a search if term is empty" name="components/MoreChannels should not perform a search if term is empty" time="0.002">
    </testcase>
    <testcase classname="components/MoreChannels should handle a failed search" name="components/MoreChannels should handle a failed search" time="0.004">
    </testcase>
    <testcase classname="components/MoreChannels should perform search and set the correct state" name="components/MoreChannels should perform search and set the correct state" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/permission_schemes_settings/permission_schemes_settings" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:59" time="0.378" tests="6">
    <testcase classname="components/admin_console/permission_schemes_settings/permission_schemes_settings should match snapshot loading" name="components/admin_console/permission_schemes_settings/permission_schemes_settings should match snapshot loading" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_schemes_settings should match snapshot without schemes" name="components/admin_console/permission_schemes_settings/permission_schemes_settings should match snapshot without schemes" time="0.008">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_schemes_settings should match snapshot with schemes" name="components/admin_console/permission_schemes_settings/permission_schemes_settings should match snapshot with schemes" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_schemes_settings should show migration in-progress view" name="components/admin_console/permission_schemes_settings/permission_schemes_settings should show migration in-progress view" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_schemes_settings should show migration on hold view" name="components/admin_console/permission_schemes_settings/permission_schemes_settings should show migration on hold view" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_schemes_settings should show normal view (jobs disabled after migration)" name="components/admin_console/permission_schemes_settings/permission_schemes_settings should show normal view (jobs disabled after migration)" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/ChannelHeaderDropdown/MenuItem.ViewPinnedPosts" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:48:59" time="0.379" tests="3">
    <testcase classname="components/ChannelHeaderDropdown/MenuItem.ViewPinnedPosts should match snapshot" name="components/ChannelHeaderDropdown/MenuItem.ViewPinnedPosts should match snapshot" time="0.008">
    </testcase>
    <testcase classname="components/ChannelHeaderDropdown/MenuItem.ViewPinnedPosts should runs closeRightHandSide function if has any pinned posts" name="components/ChannelHeaderDropdown/MenuItem.ViewPinnedPosts should runs closeRightHandSide function if has any pinned posts" time="0.003">
    </testcase>
    <testcase classname="components/ChannelHeaderDropdown/MenuItem.ViewPinnedPosts should runs showPinnedPosts function if has not pinned posts" name="components/ChannelHeaderDropdown/MenuItem.ViewPinnedPosts should runs showPinnedPosts function if has not pinned posts" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/claim/components/ldap_to_email.jsx" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:00" time="0.421" tests="1">
    <testcase classname="components/claim/components/ldap_to_email.jsx submit() should have called switchLdapToEmail" name="components/claim/components/ldap_to_email.jsx submit() should have called switchLdapToEmail" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/group_settings/group_details/GroupDetails" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:00" time="0.54" tests="7">
    <testcase classname="components/admin_console/group_settings/group_details/GroupDetails should match snapshot, with everything closed" name="components/admin_console/group_settings/group_details/GroupDetails should match snapshot, with everything closed" time="0.011">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupDetails should match snapshot, with add team selector open" name="components/admin_console/group_settings/group_details/GroupDetails should match snapshot, with add team selector open" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupDetails should match snapshot, with add channel selector open" name="components/admin_console/group_settings/group_details/GroupDetails should match snapshot, with add channel selector open" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupDetails should match snapshot, with loaded state" name="components/admin_console/group_settings/group_details/GroupDetails should match snapshot, with loaded state" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupDetails should load data on mount" name="components/admin_console/group_settings/group_details/GroupDetails should load data on mount" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupDetails should call link for each channel when addChannels is called" name="components/admin_console/group_settings/group_details/GroupDetails should call link for each channel when addChannels is called" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupDetails should call link for each team when addTeams is called" name="components/admin_console/group_settings/group_details/GroupDetails should call link for each team when addTeams is called" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/permission_schemes_settings/permissions_scheme_summary" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:01" time="0.391" tests="4">
    <testcase classname="components/admin_console/permission_schemes_settings/permissions_scheme_summary should match snapshot on default data" name="components/admin_console/permission_schemes_settings/permissions_scheme_summary should match snapshot on default data" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permissions_scheme_summary should match snapshot on more than eight teams" name="components/admin_console/permission_schemes_settings/permissions_scheme_summary should match snapshot on more than eight teams" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permissions_scheme_summary should match snapshot on no teams" name="components/admin_console/permission_schemes_settings/permissions_scheme_summary should match snapshot on no teams" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permissions_scheme_summary should ask to toggle on row toggle" name="components/admin_console/permission_schemes_settings/permissions_scheme_summary should ask to toggle on row toggle" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/permission_schemes_settings/permission_tree" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:01" time="0.377" tests="7">
    <testcase classname="components/admin_console/permission_schemes_settings/permission_tree should match snapshot on default data" name="components/admin_console/permission_schemes_settings/permission_tree should match snapshot on default data" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_tree should match snapshot on read only" name="components/admin_console/permission_schemes_settings/permission_tree should match snapshot on read only" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_tree should match snapshot on team scope" name="components/admin_console/permission_schemes_settings/permission_tree should match snapshot on team scope" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_tree should match snapshot on system scope" name="components/admin_console/permission_schemes_settings/permission_tree should match snapshot on system scope" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_tree should match snapshot with parentRole with permissions" name="components/admin_console/permission_schemes_settings/permission_tree should match snapshot with parentRole with permissions" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_tree should ask to toggle on row toggle" name="components/admin_console/permission_schemes_settings/permission_tree should ask to toggle on row toggle" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_tree should hide disabbled integration options" name="components/admin_console/permission_schemes_settings/permission_tree should hide disabbled integration options" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/bots/Bots" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:01" time="0.445" tests="2">
    <testcase classname="components/integrations/bots/Bots bots" name="components/integrations/bots/Bots bots" time="0.008">
    </testcase>
    <testcase classname="components/integrations/bots/Bots bot owner tokens" name="components/integrations/bots/Bots bot owner tokens" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/ReactionList" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:02" time="0.388" tests="2">
    <testcase classname="components/ReactionList should render nothing when no reactions" name="components/ReactionList should render nothing when no reactions" time="0.002">
    </testcase>
    <testcase classname="components/ReactionList should render when there are reactions" name="components/ReactionList should render when there are reactions" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/team_settings_modal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:02" time="0.401" tests="2">
    <testcase classname="components/team_settings_modal should match snapshot" name="components/team_settings_modal should match snapshot" time="0.006">
    </testcase>
    <testcase classname="components/team_settings_modal should call onHide callback when the modal is hidden" name="components/team_settings_modal should call onHide callback when the modal is hidden" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/user_settings/advanced/JoinLeaveSection" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:03" time="0.435" tests="4">
    <testcase classname="components/user_settings/advanced/JoinLeaveSection should match snapshot" name="components/user_settings/advanced/JoinLeaveSection should match snapshot" time="0.01">
    </testcase>
    <testcase classname="components/user_settings/advanced/JoinLeaveSection should match state on handleOnChange" name="components/user_settings/advanced/JoinLeaveSection should match state on handleOnChange" time="0.001">
    </testcase>
    <testcase classname="components/user_settings/advanced/JoinLeaveSection should call props.actions.savePreferences and props.onUpdateSection on handleSubmit" name="components/user_settings/advanced/JoinLeaveSection should call props.actions.savePreferences and props.onUpdateSection on handleSubmit" time="0.002">
    </testcase>
    <testcase classname="components/user_settings/advanced/JoinLeaveSection should match state and call props.onUpdateSection on handleUpdateSection" name="components/user_settings/advanced/JoinLeaveSection should match state and call props.onUpdateSection on handleUpdateSection" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Actions.Emojis" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:03" time="0.417" tests="3">
    <testcase classname="Actions.Emojis Emoji alias is stored in recent emojis" name="Actions.Emojis Emoji alias is stored in recent emojis" time="0.003">
    </testcase>
    <testcase classname="Actions.Emojis First alias is stored in recent emojis even if second alias used" name="Actions.Emojis First alias is stored in recent emojis even if second alias used" time="0.002">
    </testcase>
    <testcase classname="Actions.Emojis Invalid emoji are not stored in recents" name="Actions.Emojis Invalid emoji are not stored in recents" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Selectors.Rhs" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:03" time="0.343" tests="7">
    <testcase classname="Selectors.Rhs should return the last time a post was selected when open is 0" name="Selectors.Rhs should return the last time a post was selected when open is 0" time="0.001">
    </testcase>
    <testcase classname="Selectors.Rhs should return the last time a post was selected when open is 1000000" name="Selectors.Rhs should return the last time a post was selected when open is 1000000" time="0">
    </testcase>
    <testcase classname="Selectors.Rhs should return the last time a post was selected when open is 2000000" name="Selectors.Rhs should return the last time a post was selected when open is 2000000" time="0">
    </testcase>
    <testcase classname="Selectors.Rhs should return the open state of the sidebar when open is true" name="Selectors.Rhs should return the open state of the sidebar when open is true" time="0.001">
    </testcase>
    <testcase classname="Selectors.Rhs should return the open state of the sidebar when open is false" name="Selectors.Rhs should return the open state of the sidebar when open is false" time="0">
    </testcase>
    <testcase classname="Selectors.Rhs should return the open state of the sidebar menu when open is true" name="Selectors.Rhs should return the open state of the sidebar menu when open is true" time="0.001">
    </testcase>
    <testcase classname="Selectors.Rhs should return the open state of the sidebar menu when open is false" name="Selectors.Rhs should return the open state of the sidebar menu when open is false" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/InstalledOAuthApp" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:04" time="0.421" tests="8">
    <testcase classname="components/integrations/InstalledOAuthApp should match snapshot" name="components/integrations/InstalledOAuthApp should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/integrations/InstalledOAuthApp should match snapshot, when oauthApp is without name and not trusted" name="components/integrations/InstalledOAuthApp should match snapshot, when oauthApp is without name and not trusted" time="0.003">
    </testcase>
    <testcase classname="components/integrations/InstalledOAuthApp should match snapshot, on error" name="components/integrations/InstalledOAuthApp should match snapshot, on error" time="0.003">
    </testcase>
    <testcase classname="components/integrations/InstalledOAuthApp should call onRegenerateSecret function" name="components/integrations/InstalledOAuthApp should call onRegenerateSecret function" time="0.003">
    </testcase>
    <testcase classname="components/integrations/InstalledOAuthApp should filter out OAuthApp" name="components/integrations/InstalledOAuthApp should filter out OAuthApp" time="0">
    </testcase>
    <testcase classname="components/integrations/InstalledOAuthApp should match state on button clicks, both showSecretButton and hideSecretButton" name="components/integrations/InstalledOAuthApp should match state on button clicks, both showSecretButton and hideSecretButton" time="0.02">
    </testcase>
    <testcase classname="components/integrations/InstalledOAuthApp should match on handleRegenerate" name="components/integrations/InstalledOAuthApp should match on handleRegenerate" time="0.003">
    </testcase>
    <testcase classname="components/integrations/InstalledOAuthApp should have called props.onDelete on handleDelete " name="components/integrations/InstalledOAuthApp should have called props.onDelete on handleDelete " time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/message_attachments/action_button.jsx" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:04" time="0.379" tests="2">
    <testcase classname="components/post_view/message_attachments/action_button.jsx should match snapshot" name="components/post_view/message_attachments/action_button.jsx should match snapshot" time="0.007">
    </testcase>
    <testcase classname="components/post_view/message_attachments/action_button.jsx should call handleAction on click" name="components/post_view/message_attachments/action_button.jsx should call handleAction on click" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/MarketplaceItem" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:05" time="0.39" tests="5">
    <testcase classname="components/MarketplaceItem should match snapshot, no plugin icon" name="components/MarketplaceItem should match snapshot, no plugin icon" time="0.005">
    </testcase>
    <testcase classname="components/MarketplaceItem should match snapshot, with plugin icon" name="components/MarketplaceItem should match snapshot, with plugin icon" time="0.001">
    </testcase>
    <testcase classname="components/MarketplaceItem should match snapshot, with homepage url" name="components/MarketplaceItem should match snapshot, with homepage url" time="0.002">
    </testcase>
    <testcase classname="components/MarketplaceItem should match snapshot, no homepage url" name="components/MarketplaceItem should match snapshot, no homepage url" time="0.001">
    </testcase>
    <testcase classname="components/MarketplaceItem should match snapshot, with server error" name="components/MarketplaceItem should match snapshot, with server error" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Actions.User" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:05" time="0.466" tests="7">
    <testcase classname="Actions.User loadProfilesAndStatusesInChannel" name="Actions.User loadProfilesAndStatusesInChannel" time="0.003">
    </testcase>
    <testcase classname="Actions.User loadProfilesAndTeamMembers" name="Actions.User loadProfilesAndTeamMembers" time="0.002">
    </testcase>
    <testcase classname="Actions.User loadProfilesAndTeamMembersAndChannelMembers" name="Actions.User loadProfilesAndTeamMembersAndChannelMembers" time="0.002">
    </testcase>
    <testcase classname="Actions.User loadTeamMembersForProfilesList" name="Actions.User loadTeamMembersForProfilesList" time="0.001">
    </testcase>
    <testcase classname="Actions.User loadTeamMembersAndChannelMembersForProfilesList" name="Actions.User loadTeamMembersAndChannelMembersForProfilesList" time="0.001">
    </testcase>
    <testcase classname="Actions.User loadChannelMembersForProfilesList" name="Actions.User loadChannelMembersForProfilesList" time="0.001">
    </testcase>
    <testcase classname="Actions.User loadProfilesForGroupChannels" name="Actions.User loadProfilesForGroupChannels" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/SearchSuggestionList" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:06" time="0.391" tests="1">
    <testcase classname="components/SearchSuggestionList should not throw error when currentLabel is null and label is generated" name="components/SearchSuggestionList should not throw error when currentLabel is null and label is generated" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/DoVerifyEmail" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:06" time="0.417" tests="3">
    <testcase classname="components/DoVerifyEmail should match snapshot" name="components/DoVerifyEmail should match snapshot" time="0.005">
    </testcase>
    <testcase classname="components/DoVerifyEmail should show verifyStatus as pending" name="components/DoVerifyEmail should show verifyStatus as pending" time="0.001">
    </testcase>
    <testcase classname="components/DoVerifyEmail should set serverError state on mount" name="components/DoVerifyEmail should set serverError state on mount" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/channel_notifications_modal/ExpandView" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:06" time="0.343" tests="3">
    <testcase classname="components/channel_notifications_modal/ExpandView should match snapshot, DESKTOP on expanded view" name="components/channel_notifications_modal/ExpandView should match snapshot, DESKTOP on expanded view" time="0.003">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ExpandView should match snapshot, PUSH on expanded view" name="components/channel_notifications_modal/ExpandView should match snapshot, PUSH on expanded view" time="0.001">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ExpandView should match snapshot, MARK_UNREAD on expanded view" name="components/channel_notifications_modal/ExpandView should match snapshot, MARK_UNREAD on expanded view" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/SettingItemMin" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:07" time="0.389" tests="10">
    <testcase classname="components/SettingItemMin should match snapshot" name="components/SettingItemMin should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/SettingItemMin should match snapshot, without submit" name="components/SettingItemMin should match snapshot, without submit" time="0.002">
    </testcase>
    <testcase classname="components/SettingItemMin should match snapshot, on clientError" name="components/SettingItemMin should match snapshot, on clientError" time="0.001">
    </testcase>
    <testcase classname="components/SettingItemMin should match snapshot, on serverError" name="components/SettingItemMin should match snapshot, on serverError" time="0.002">
    </testcase>
    <testcase classname="components/SettingItemMin should have called updateSection on handleUpdateSection with section" name="components/SettingItemMin should have called updateSection on handleUpdateSection with section" time="0.001">
    </testcase>
    <testcase classname="components/SettingItemMin should have called updateSection on handleUpdateSection with empty string" name="components/SettingItemMin should have called updateSection on handleUpdateSection with empty string" time="0.001">
    </testcase>
    <testcase classname="components/SettingItemMin should have called submit on handleSubmit with setting" name="components/SettingItemMin should have called submit on handleSubmit with setting" time="0.001">
    </testcase>
    <testcase classname="components/SettingItemMin should have called submit on handleSubmit with empty string" name="components/SettingItemMin should have called submit on handleSubmit with empty string" time="0.001">
    </testcase>
    <testcase classname="components/SettingItemMin should have called submit on handleSubmit onKeyDown ENTER" name="components/SettingItemMin should have called submit on handleSubmit onKeyDown ENTER" time="0.001">
    </testcase>
    <testcase classname="components/SettingItemMin should match snapshot, with new saveTextButton" name="components/SettingItemMin should match snapshot, with new saveTextButton" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/user_settings/display/manage_languages/manage_languages" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:07" time="0.433" tests="1">
    <testcase classname="components/user_settings/display/manage_languages/manage_languages submitUser() should have called updateMe" name="components/user_settings/display/manage_languages/manage_languages submitUser() should have called updateMe" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/PostMarkdown" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:08" time="0.526" tests="7">
    <testcase classname="components/PostMarkdown should not error when rendering without a post" name="components/PostMarkdown should not error when rendering without a post" time="0.002">
    </testcase>
    <testcase classname="components/PostMarkdown should render properly with an empty post" name="components/PostMarkdown should render properly with an empty post" time="0.003">
    </testcase>
    <testcase classname="components/PostMarkdown should render properly with a post" name="components/PostMarkdown should render properly with a post" time="0.002">
    </testcase>
    <testcase classname="components/PostMarkdown should correctly pass postId down" name="components/PostMarkdown should correctly pass postId down" time="0.039">
    </testcase>
    <testcase classname="components/PostMarkdown should render header change properly" name="components/PostMarkdown should render header change properly" time="0.002">
    </testcase>
    <testcase classname="components/PostMarkdown plugin hooks can build upon other hook message updates" name="components/PostMarkdown plugin hooks can build upon other hook message updates" time="0">
    </testcase>
    <testcase classname="components/PostMarkdown plugin hooks can overwrite other hooks messages" name="components/PostMarkdown plugin hooks can overwrite other hooks messages" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/PostReaction" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:08" time="0.365" tests="2">
    <testcase classname="components/post_view/PostReaction should match snapshot" name="components/post_view/PostReaction should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/post_view/PostReaction should call addReaction and toggleEmojiPicker on handleAddEmoji" name="components/post_view/PostReaction should call addReaction and toggleEmojiPicker on handleAddEmoji" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/team/TeamSettings" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:08" time="0.34" tests="1">
    <testcase classname="admin_console/team_channel_settings/team/TeamSettings should match snapshot" name="admin_console/team_channel_settings/team/TeamSettings should match snapshot" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="rhs view actions" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:09" time="0.424" tests="21">
    <testcase classname="rhs view actions updateRhsState it dispatches UPDATE_RHS_STATE correctly" name="rhs view actions updateRhsState it dispatches UPDATE_RHS_STATE correctly" time="0.001">
    </testcase>
    <testcase classname="rhs view actions selectPostFromRightHandSideSearch it dispatches PostActions.getPostThread correctly" name="rhs view actions selectPostFromRightHandSideSearch it dispatches PostActions.getPostThread correctly" time="0.001">
    </testcase>
    <testcase classname="rhs view actions selectPostFromRightHandSideSearch it dispatches SELECT_POST correctly with mocked date" name="rhs view actions selectPostFromRightHandSideSearch it dispatches SELECT_POST correctly with mocked date" time="0.001">
    </testcase>
    <testcase classname="rhs view actions updateSearchTerms it dispatches UPDATE_RHS_SEARCH_TERMS correctly" name="rhs view actions updateSearchTerms it dispatches UPDATE_RHS_SEARCH_TERMS correctly" time="0.001">
    </testcase>
    <testcase classname="rhs view actions performSearch it dispatches searchPosts correctly" name="rhs view actions performSearch it dispatches searchPosts correctly" time="0.001">
    </testcase>
    <testcase classname="rhs view actions showSearchResults it dispatches the right actions" name="rhs view actions showSearchResults it dispatches the right actions" time="0.001">
    </testcase>
    <testcase classname="rhs view actions showFlaggedPosts it dispatches the right actions" name="rhs view actions showFlaggedPosts it dispatches the right actions" time="0.001">
    </testcase>
    <testcase classname="rhs view actions showPinnedPosts it dispatches the right actions for the current channel" name="rhs view actions showPinnedPosts it dispatches the right actions for the current channel" time="0.001">
    </testcase>
    <testcase classname="rhs view actions showPinnedPosts it dispatches the right actions for a specific channel" name="rhs view actions showPinnedPosts it dispatches the right actions for a specific channel" time="0.001">
    </testcase>
    <testcase classname="rhs view actions showMentions it dispatches the right actions" name="rhs view actions showMentions it dispatches the right actions" time="0.001">
    </testcase>
    <testcase classname="rhs view actions showMentions it calls trackEvent correctly" name="rhs view actions showMentions it calls trackEvent correctly" time="0.001">
    </testcase>
    <testcase classname="rhs view actions closeRightHandSide it dispatches the right actions" name="rhs view actions closeRightHandSide it dispatches the right actions" time="0">
    </testcase>
    <testcase classname="rhs view actions toggleMenu dispatches the right action" name="rhs view actions toggleMenu dispatches the right action" time="0.001">
    </testcase>
    <testcase classname="rhs view actions openMenu dispatches the right action" name="rhs view actions openMenu dispatches the right action" time="0.001">
    </testcase>
    <testcase classname="rhs view actions closeMenu dispatches the right action" name="rhs view actions closeMenu dispatches the right action" time="0">
    </testcase>
    <testcase classname="rhs view actions Plugin actions showRHSPlugin dispatches the right action" name="rhs view actions Plugin actions showRHSPlugin dispatches the right action" time="0.001">
    </testcase>
    <testcase classname="rhs view actions Plugin actions hideRHSPlugin it dispatches the right action when plugin rhs is opened" name="rhs view actions Plugin actions hideRHSPlugin it dispatches the right action when plugin rhs is opened" time="0.001">
    </testcase>
    <testcase classname="rhs view actions Plugin actions hideRHSPlugin it doesn&apos;t dispatch the action when plugin rhs is closed" name="rhs view actions Plugin actions hideRHSPlugin it doesn&apos;t dispatch the action when plugin rhs is closed" time="0.001">
    </testcase>
    <testcase classname="rhs view actions Plugin actions hideRHSPlugin it doesn&apos;t dispatch the action when other plugin rhs is opened" name="rhs view actions Plugin actions hideRHSPlugin it doesn&apos;t dispatch the action when other plugin rhs is opened" time="0">
    </testcase>
    <testcase classname="rhs view actions Plugin actions toggleRHSPlugin it dispatches hide action when rhs is open" name="rhs view actions Plugin actions toggleRHSPlugin it dispatches hide action when rhs is open" time="0.001">
    </testcase>
    <testcase classname="rhs view actions Plugin actions toggleRHSPlugin it dispatches hide action when rhs is closed" name="rhs view actions Plugin actions toggleRHSPlugin it dispatches hide action when rhs is closed" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/TeamMembersModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:09" time="0.38" tests="2">
    <testcase classname="components/TeamMembersModal should match snapshot" name="components/TeamMembersModal should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/TeamMembersModal should call onHide on Modal&apos;s onExited" name="components/TeamMembersModal should call onHide on Modal&apos;s onExited" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="TextFormatting.mentionHighlighting" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:10" time="0.402" tests="13">
    <testcase classname="TextFormatting.mentionHighlighting no mentions" name="TextFormatting.mentionHighlighting no mentions" time="0.005">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting not an at-mention" name="TextFormatting.mentionHighlighting not an at-mention" time="0.009">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting at-mention" name="TextFormatting.mentionHighlighting at-mention" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting at-mention and non-at-mention for same word" name="TextFormatting.mentionHighlighting at-mention and non-at-mention for same word" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting case insensitive mentions" name="TextFormatting.mentionHighlighting case insensitive mentions" time="0">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting case sensitive mentions" name="TextFormatting.mentionHighlighting case sensitive mentions" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting multibyte mentions" name="TextFormatting.mentionHighlighting multibyte mentions" time="0.004">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting multibyte mentions twice in one sentence" name="TextFormatting.mentionHighlighting multibyte mentions twice in one sentence" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting combine multibyte and ascii mentions key" name="TextFormatting.mentionHighlighting combine multibyte and ascii mentions key" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting at mention linking disabled, mentioned by non-at-mention" name="TextFormatting.mentionHighlighting at mention linking disabled, mentioned by non-at-mention" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting at mention linking disabled, mentioned by at-mention" name="TextFormatting.mentionHighlighting at mention linking disabled, mentioned by at-mention" time="0">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting mention highlighting disabled" name="TextFormatting.mentionHighlighting mention highlighting disabled" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting mention highlighting and at mention linking disabled" name="TextFormatting.mentionHighlighting mention highlighting and at mention linking disabled" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/permission_schemes_settings/permission_group" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:10" time="0.489" tests="17">
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable without permissions" name="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable without permissions" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable without every permission out of the scope" name="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable without every permission out of the scope" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable with some permissions" name="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable with some permissions" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable with all permissions" name="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable with all permissions" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable without permissions and read-only" name="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable without permissions and read-only" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable with some permissions and read-only" name="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable with some permissions and read-only" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable with all permissions and read-only" name="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable with all permissions and read-only" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable with some permissions from parentRole" name="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable with some permissions from parentRole" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable with all permissions from parentRole" name="components/admin_console/permission_schemes_settings/permission_group should match snapshot on editable with all permissions from parentRole" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group should expand and collapse correctly, expanded by default, collapsed and then expanded again" name="components/admin_console/permission_schemes_settings/permission_group should expand and collapse correctly, expanded by default, collapsed and then expanded again" time="0.014">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group should call correctly onChange function on click without permissions" name="components/admin_console/permission_schemes_settings/permission_group should call correctly onChange function on click without permissions" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group should call correctly onChange function on click with some permissions" name="components/admin_console/permission_schemes_settings/permission_group should call correctly onChange function on click with some permissions" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group should call correctly onChange function on click with all permissions" name="components/admin_console/permission_schemes_settings/permission_group should call correctly onChange function on click with all permissions" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group shouldn&apos;t call onChange function on click when is read-only" name="components/admin_console/permission_schemes_settings/permission_group shouldn&apos;t call onChange function on click when is read-only" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group shouldn&apos;t call onChange function on click when is read-only" name="components/admin_console/permission_schemes_settings/permission_group shouldn&apos;t call onChange function on click when is read-only" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group should collapse when toggle to all permissions and expand otherwise" name="components/admin_console/permission_schemes_settings/permission_group should collapse when toggle to all permissions and expand otherwise" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_group should toggle correctly between states" name="components/admin_console/permission_schemes_settings/permission_group should toggle correctly between states" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="stores/LocalStorageStore" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:11" time="0.419" tests="5">
    <testcase classname="stores/LocalStorageStore should persist previous team id per user" name="stores/LocalStorageStore should persist previous team id per user" time="0.001">
    </testcase>
    <testcase classname="stores/LocalStorageStore should persist previous channel name per team and user" name="stores/LocalStorageStore should persist previous channel name per team and user" time="0.001">
    </testcase>
    <testcase classname="stores/LocalStorageStore should persist recent emojis per user" name="stores/LocalStorageStore should persist recent emojis per user" time="0">
    </testcase>
    <testcase classname="stores/LocalStorageStore should persist separately for different subpaths getWasLoggedIn" name="stores/LocalStorageStore should persist separately for different subpaths getWasLoggedIn" time="0.001">
    </testcase>
    <testcase classname="stores/LocalStorageStore should persist separately for different subpaths recentEmojis" name="stores/LocalStorageStore should persist separately for different subpaths recentEmojis" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/MarketplaceModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:11" time="0.369" tests="4">
    <testcase classname="components/MarketplaceModal should match the snapshot, no plugins installed" name="components/MarketplaceModal should match the snapshot, no plugins installed" time="0.004">
    </testcase>
    <testcase classname="components/MarketplaceModal should match the snapshot, with plugins installed" name="components/MarketplaceModal should match the snapshot, with plugins installed" time="0.002">
    </testcase>
    <testcase classname="components/MarketplaceModal should fetch marketplace plugins when plugin status is changed" name="components/MarketplaceModal should fetch marketplace plugins when plugin status is changed" time="0.002">
    </testcase>
    <testcase classname="components/MarketplaceModal should match the snapshot, error banner is shown" name="components/MarketplaceModal should match the snapshot, error banner is shown" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="comoponents/rhs_card/RhsCard" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:11" time="0.375" tests="4">
    <testcase classname="comoponents/rhs_card/RhsCard should match when no post is selected" name="comoponents/rhs_card/RhsCard should match when no post is selected" time="0.002">
    </testcase>
    <testcase classname="comoponents/rhs_card/RhsCard should match on post when no plugin defining card types" name="comoponents/rhs_card/RhsCard should match on post when no plugin defining card types" time="0.002">
    </testcase>
    <testcase classname="comoponents/rhs_card/RhsCard should match on post when plugin defining card types don&apos;t match with the post type" name="comoponents/rhs_card/RhsCard should match on post when plugin defining card types don&apos;t match with the post type" time="0.002">
    </testcase>
    <testcase classname="comoponents/rhs_card/RhsCard should match on post when plugin defining card types match with the post type" name="comoponents/rhs_card/RhsCard should match on post when plugin defining card types match with the post type" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/MarkdownImage" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:12" time="0.42" tests="8">
    <testcase classname="components/MarkdownImage should match snapshot" name="components/MarkdownImage should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/MarkdownImage should match snapshot for broken link" name="components/MarkdownImage should match snapshot for broken link" time="0.001">
    </testcase>
    <testcase classname="components/MarkdownImage should match snapshot for SizeAwareImage dimensions" name="components/MarkdownImage should match snapshot for SizeAwareImage dimensions" time="0.001">
    </testcase>
    <testcase classname="components/MarkdownImage should render a link if the source is unsafe" name="components/MarkdownImage should render a link if the source is unsafe" time="0.008">
    </testcase>
    <testcase classname="components/MarkdownImage should render an image with preview modal if the source is safe" name="components/MarkdownImage should render an image with preview modal if the source is safe" time="0.01">
    </testcase>
    <testcase classname="components/MarkdownImage should render an image with no preview if the source is safe and the image is a link" name="components/MarkdownImage should render an image with no preview if the source is safe and the image is a link" time="0.003">
    </testcase>
    <testcase classname="components/MarkdownImage should handle state properly" name="components/MarkdownImage should handle state properly" time="0.001">
    </testcase>
    <testcase classname="components/MarkdownImage should handle state properly in case the image is a link" name="components/MarkdownImage should handle state properly in case the image is a link" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="comoponents/EditChannelPurposeModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:12" time="0.435" tests="12">
    <testcase classname="comoponents/EditChannelPurposeModal should match on init" name="comoponents/EditChannelPurposeModal should match on init" time="0.005">
    </testcase>
    <testcase classname="comoponents/EditChannelPurposeModal should match with display name" name="comoponents/EditChannelPurposeModal should match with display name" time="0.002">
    </testcase>
    <testcase classname="comoponents/EditChannelPurposeModal should match for private channel" name="comoponents/EditChannelPurposeModal should match for private channel" time="0.002">
    </testcase>
    <testcase classname="comoponents/EditChannelPurposeModal should match submitted" name="comoponents/EditChannelPurposeModal should match submitted" time="0.002">
    </testcase>
    <testcase classname="comoponents/EditChannelPurposeModal match with modal error" name="comoponents/EditChannelPurposeModal match with modal error" time="0.002">
    </testcase>
    <testcase classname="comoponents/EditChannelPurposeModal match with modal error with fake id" name="comoponents/EditChannelPurposeModal match with modal error with fake id" time="0.002">
    </testcase>
    <testcase classname="comoponents/EditChannelPurposeModal clear error on next" name="comoponents/EditChannelPurposeModal clear error on next" time="0.003">
    </testcase>
    <testcase classname="comoponents/EditChannelPurposeModal update purpose state" name="comoponents/EditChannelPurposeModal update purpose state" time="0.002">
    </testcase>
    <testcase classname="comoponents/EditChannelPurposeModal hide on success" name="comoponents/EditChannelPurposeModal hide on success" time="0.001">
    </testcase>
    <testcase classname="comoponents/EditChannelPurposeModal submit on save button click" name="comoponents/EditChannelPurposeModal submit on save button click" time="0.01">
    </testcase>
    <testcase classname="comoponents/EditChannelPurposeModal submit on ctrl + enter" name="comoponents/EditChannelPurposeModal submit on ctrl + enter" time="0.002">
    </testcase>
    <testcase classname="comoponents/EditChannelPurposeModal submit on enter" name="comoponents/EditChannelPurposeModal submit on enter" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/PermalinkRedirector" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:13" time="0.423" tests="5">
    <testcase classname="components/PermalinkRedirector calls redirect for pl" name="components/PermalinkRedirector calls redirect for pl" time="0.002">
    </testcase>
    <testcase classname="components/PermalinkRedirector calls redirect for integrations" name="components/PermalinkRedirector calls redirect for integrations" time="0.001">
    </testcase>
    <testcase classname="components/PermalinkRedirector calls redirect for integrations/bots" name="components/PermalinkRedirector calls redirect for integrations/bots" time="0.001">
    </testcase>
    <testcase classname="components/PermalinkRedirector actions redirect to the default team" name="components/PermalinkRedirector actions redirect to the default team" time="0.001">
    </testcase>
    <testcase classname="components/PermalinkRedirector actions redirect error null team" name="components/PermalinkRedirector actions redirect error null team" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/team/TeamProfile" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:13" time="0.334" tests="1">
    <testcase classname="admin_console/team_channel_settings/team/TeamProfile should match snapshot" name="admin_console/team_channel_settings/team/TeamProfile should match snapshot" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Utils.Route" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:13" time="0.337" tests="2">
    <testcase classname="Utils.Route checkIfMFARequired mfa is enforced" name="Utils.Route checkIfMFARequired mfa is enforced" time="0">
    </testcase>
    <testcase classname="Utils.Route checkIfMFARequired mfa is not enforced or enabled" name="Utils.Route checkIfMFARequired mfa is not enforced or enabled" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/system_user_detail/team_list/TeamList" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:14" time="0.362" tests="2">
    <testcase classname="admin_console/system_user_detail/team_list/TeamList should match snapshot when no teams are found" name="admin_console/system_user_detail/team_list/TeamList should match snapshot when no teams are found" time="0.003">
    </testcase>
    <testcase classname="admin_console/system_user_detail/team_list/TeamList should match snapshot with teams populated" name="admin_console/system_user_detail/team_list/TeamList should match snapshot with teams populated" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="TextFormatting.Emails" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:14" time="0.372" tests="6">
    <testcase classname="TextFormatting.Emails Valid email addresses" name="TextFormatting.Emails Valid email addresses" time="0.005">
    </testcase>
    <testcase classname="TextFormatting.Emails Should be valid, but matching GitHub" name="TextFormatting.Emails Should be valid, but matching GitHub" time="0">
    </testcase>
    <testcase classname="TextFormatting.Emails Should be valid, but broken due to Markdown parsing happening before email autolinking" name="TextFormatting.Emails Should be valid, but broken due to Markdown parsing happening before email autolinking" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.Emails Not valid emails" name="TextFormatting.Emails Not valid emails" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.Emails Should be invalid, but matching GitHub" name="TextFormatting.Emails Should be invalid, but matching GitHub" time="0">
    </testcase>
    <testcase classname="TextFormatting.Emails Should be invalid, but broken" name="TextFormatting.Emails Should be invalid, but broken" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="channel view actions" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:14" time="0.551" tests="24">
    <testcase classname="channel view actions switchToChannel switch to public channel" name="channel view actions switchToChannel switch to public channel" time="0.001">
    </testcase>
    <testcase classname="channel view actions switchToChannel switch to fake direct channel" name="channel view actions switchToChannel switch to fake direct channel" time="0.002">
    </testcase>
    <testcase classname="channel view actions switchToChannel switch to gm channel" name="channel view actions switchToChannel switch to gm channel" time="0">
    </testcase>
    <testcase classname="channel view actions leaveChannel leave a channel successfully" name="channel view actions leaveChannel leave a channel successfully" time="0.003">
    </testcase>
    <testcase classname="channel view actions leaveChannel leave the last channel successfully" name="channel view actions leaveChannel leave the last channel successfully" time="0.001">
    </testcase>
    <testcase classname="channel view actions goToLastViewedChannel should switch to town square if last viewed channel is current channel" name="channel view actions goToLastViewedChannel should switch to town square if last viewed channel is current channel" time="0.001">
    </testcase>
    <testcase classname="channel view actions loadLatestPosts should call getPosts and return the results" name="channel view actions loadLatestPosts should call getPosts and return the results" time="0.002">
    </testcase>
    <testcase classname="channel view actions loadLatestPosts when oldest posts are recived" name="channel view actions loadLatestPosts when oldest posts are recived" time="0">
    </testcase>
    <testcase classname="channel view actions loadLatestPosts when latest posts are received" name="channel view actions loadLatestPosts when latest posts are received" time="0.002">
    </testcase>
    <testcase classname="channel view actions loadUnreads when there are no posts after and before the response" name="channel view actions loadUnreads when there are no posts after and before the response" time="0.001">
    </testcase>
    <testcase classname="channel view actions loadUnreads when there are posts before and after the response" name="channel view actions loadUnreads when there are posts before and after the response" time="0">
    </testcase>
    <testcase classname="channel view actions loadUnreads when there are no posts after RECEIVED_POSTS_FOR_CHANNEL_AT_TIME should be dispatched" name="channel view actions loadUnreads when there are no posts after RECEIVED_POSTS_FOR_CHANNEL_AT_TIME should be dispatched" time="0.001">
    </testcase>
    <testcase classname="channel view actions loadPostsAround should call getPostsAround and return the results" name="channel view actions loadPostsAround should call getPostsAround and return the results" time="0.002">
    </testcase>
    <testcase classname="channel view actions loadPostsAround when there are posts before and after reponse posts chunk" name="channel view actions loadPostsAround when there are posts before and after reponse posts chunk" time="0">
    </testcase>
    <testcase classname="channel view actions loadPostsAround when there are posts before the reponse posts chunk" name="channel view actions loadPostsAround when there are posts before the reponse posts chunk" time="0.001">
    </testcase>
    <testcase classname="channel view actions loadPostsAround when there are posts before the reponse posts chunk" name="channel view actions loadPostsAround when there are posts before the reponse posts chunk" time="0.001">
    </testcase>
    <testcase classname="channel view actions loadPostsAround when there are no posts before and after the posts chunk" name="channel view actions loadPostsAround when there are no posts before and after the posts chunk" time="0.001">
    </testcase>
    <testcase classname="channel view actions increasePostVisibility should dispatch the correct actions" name="channel view actions increasePostVisibility should dispatch the correct actions" time="0.001">
    </testcase>
    <testcase classname="channel view actions increasePostVisibility should increase post visibility when receiving posts" name="channel view actions increasePostVisibility should increase post visibility when receiving posts" time="0">
    </testcase>
    <testcase classname="channel view actions increasePostVisibility should return more to load when enough posts are received" name="channel view actions increasePostVisibility should return more to load when enough posts are received" time="0">
    </testcase>
    <testcase classname="channel view actions increasePostVisibility should not return more to load when not enough posts are received" name="channel view actions increasePostVisibility should not return more to load when not enough posts are received" time="0.001">
    </testcase>
    <testcase classname="channel view actions increasePostVisibility should return error from getPostsBefore" name="channel view actions increasePostVisibility should return error from getPostsBefore" time="0.001">
    </testcase>
    <testcase classname="channel view actions syncPostsInChannel should call getPostsSince with since argument time as last discconet was earlier than lastGetPosts" name="channel view actions syncPostsInChannel should call getPostsSince with since argument time as last discconet was earlier than lastGetPosts" time="0.001">
    </testcase>
    <testcase classname="channel view actions syncPostsInChannel should call getPostsSince with lastDisconnect time as last discconet was later than lastGetPosts" name="channel view actions syncPostsInChannel should call getPostsSince with lastDisconnect time as last discconet was later than lastGetPosts" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/LeaveTeamModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:15" time="0.371" tests="4">
    <testcase classname="components/LeaveTeamModal should render the leave team model" name="components/LeaveTeamModal should render the leave team model" time="0.003">
    </testcase>
    <testcase classname="components/LeaveTeamModal should call onHide when cancel is clicked" name="components/LeaveTeamModal should call onHide when cancel is clicked" time="0.003">
    </testcase>
    <testcase classname="components/LeaveTeamModal should call leaveTeam and toggleSideBarRightMenu when ok is clicked" name="components/LeaveTeamModal should call leaveTeam and toggleSideBarRightMenu when ok is clicked" time="0.002">
    </testcase>
    <testcase classname="components/LeaveTeamModal should call attach and remove event listeners" name="components/LeaveTeamModal should call attach and remove event listeners" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/channel_notifications_modal/CollapseView" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:15" time="0.339" tests="3">
    <testcase classname="components/channel_notifications_modal/CollapseView should match snapshot, DESKTOP on collapsed view" name="components/channel_notifications_modal/CollapseView should match snapshot, DESKTOP on collapsed view" time="0.003">
    </testcase>
    <testcase classname="components/channel_notifications_modal/CollapseView should match snapshot, PUSH on collapsed view" name="components/channel_notifications_modal/CollapseView should match snapshot, PUSH on collapsed view" time="0.001">
    </testcase>
    <testcase classname="components/channel_notifications_modal/CollapseView should match snapshot, MARK_UNREAD on collapsed view" name="components/channel_notifications_modal/CollapseView should match snapshot, MARK_UNREAD on collapsed view" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/AddOAuthApp" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:16" time="0.376" tests="1">
    <testcase classname="components/integrations/AddOAuthApp should match snapshot" name="components/integrations/AddOAuthApp should match snapshot" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/TeamSelectorModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:16" time="0.374" tests="1">
    <testcase classname="components/TeamSelectorModal should match snapshot" name="components/TeamSelectorModal should match snapshot" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/CustomTermsOfServiceSettings" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:17" time="0.404" tests="1">
    <testcase classname="components/admin_console/CustomTermsOfServiceSettings should match snapshot" name="components/admin_console/CustomTermsOfServiceSettings should match snapshot" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="component/file_preview/file_progress_preview" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:17" time="0.472" tests="2">
    <testcase classname="component/file_preview/file_progress_preview should match snapshot" name="component/file_preview/file_progress_preview should match snapshot" time="0.003">
    </testcase>
    <testcase classname="component/file_preview/file_progress_preview snapshot for percent value undefined" name="component/file_preview/file_progress_preview snapshot for percent value undefined" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/MessageExportSettings" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:17" time="0.433" tests="4">
    <testcase classname="components/MessageExportSettings should match snapshot, disabled, actiance" name="components/MessageExportSettings should match snapshot, disabled, actiance" time="0.01">
    </testcase>
    <testcase classname="components/MessageExportSettings should match snapshot, enabled, actiance" name="components/MessageExportSettings should match snapshot, enabled, actiance" time="0.015">
    </testcase>
    <testcase classname="components/MessageExportSettings should match snapshot, disabled, globalrelay" name="components/MessageExportSettings should match snapshot, disabled, globalrelay" time="0.011">
    </testcase>
    <testcase classname="components/MessageExportSettings should match snapshot, enabled, globalrelay" name="components/MessageExportSettings should match snapshot, enabled, globalrelay" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="components/AddGroupsToChannelModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:18" time="0.406" tests="9">
    <testcase classname="components/AddGroupsToChannelModal should match snapshot" name="components/AddGroupsToChannelModal should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/AddGroupsToChannelModal should have called onHide when handleExit is called" name="components/AddGroupsToChannelModal should have called onHide when handleExit is called" time="0.001">
    </testcase>
    <testcase classname="components/AddGroupsToChannelModal should match state when handleResponse is called" name="components/AddGroupsToChannelModal should match state when handleResponse is called" time="0.009">
    </testcase>
    <testcase classname="components/AddGroupsToChannelModal should match state when addValue is called" name="components/AddGroupsToChannelModal should match state when addValue is called" time="0.003">
    </testcase>
    <testcase classname="components/AddGroupsToChannelModal should match state when handlePageChange is called" name="components/AddGroupsToChannelModal should match state when handlePageChange is called" time="0.002">
    </testcase>
    <testcase classname="components/AddGroupsToChannelModal should match state when search is called" name="components/AddGroupsToChannelModal should match state when search is called" time="0.002">
    </testcase>
    <testcase classname="components/AddGroupsToChannelModal should match state when handleDelete is called" name="components/AddGroupsToChannelModal should match state when handleDelete is called" time="0.002">
    </testcase>
    <testcase classname="components/AddGroupsToChannelModal should match when renderOption is called" name="components/AddGroupsToChannelModal should match when renderOption is called" time="0.002">
    </testcase>
    <testcase classname="components/AddGroupsToChannelModal should match when renderValue is called" name="components/AddGroupsToChannelModal should match when renderValue is called" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/team-icon" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:18" time="0.348" tests="4">
    <testcase classname="components/widgets/team-icon basic icon" name="components/widgets/team-icon basic icon" time="0.003">
    </testcase>
    <testcase classname="components/widgets/team-icon image icon" name="components/widgets/team-icon image icon" time="0.001">
    </testcase>
    <testcase classname="components/widgets/team-icon small icon" name="components/widgets/team-icon small icon" time="0.001">
    </testcase>
    <testcase classname="components/widgets/team-icon icon with hover" name="components/widgets/team-icon icon with hover" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/invitation_modal/InvitationModalConfirmStepRow" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:19" time="0.381" tests="4">
    <testcase classname="components/invitation_modal/InvitationModalConfirmStepRow should match the snapshot for email invitation" name="components/invitation_modal/InvitationModalConfirmStepRow should match the snapshot for email invitation" time="0.008">
    </testcase>
    <testcase classname="components/invitation_modal/InvitationModalConfirmStepRow should match the snapshot for user invitation" name="components/invitation_modal/InvitationModalConfirmStepRow should match the snapshot for user invitation" time="0.001">
    </testcase>
    <testcase classname="components/invitation_modal/InvitationModalConfirmStepRow should match the snapshot for guest addition to channel" name="components/invitation_modal/InvitationModalConfirmStepRow should match the snapshot for guest addition to channel" time="0.002">
    </testcase>
    <testcase classname="components/invitation_modal/InvitationModalConfirmStepRow should match the snapshot for text failure" name="components/invitation_modal/InvitationModalConfirmStepRow should match the snapshot for text failure" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Selectors.Emojis" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:19" time="0.379" tests="1">
    <testcase classname="Selectors.Emojis getRecentEmojis" name="Selectors.Emojis getRecentEmojis" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/AddUserToChannelModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:19" time="0.577" tests="13">
    <testcase classname="components/AddUserToChannelModal should match snapshot" name="components/AddUserToChannelModal should match snapshot" time="0.027">
    </testcase>
    <testcase classname="components/AddUserToChannelModal should enable the add button when a channel is selected" name="components/AddUserToChannelModal should enable the add button when a channel is selected" time="0.033">
    </testcase>
    <testcase classname="components/AddUserToChannelModal should show invite error when an error message is captured" name="components/AddUserToChannelModal should show invite error when an error message is captured" time="0.003">
    </testcase>
    <testcase classname="components/AddUserToChannelModal should disable add button when membership is being checked" name="components/AddUserToChannelModal should disable add button when membership is being checked" time="0.002">
    </testcase>
    <testcase classname="components/AddUserToChannelModal should display error message if user is a member of the selected channel" name="components/AddUserToChannelModal should display error message if user is a member of the selected channel" time="0.003">
    </testcase>
    <testcase classname="components/AddUserToChannelModal should disable the add button when saving" name="components/AddUserToChannelModal should disable the add button when saving" time="0.002">
    </testcase>
    <testcase classname="components/AddUserToChannelModal didSelectChannel should fetch the selected user&apos;s membership for the selected channel" name="components/AddUserToChannelModal didSelectChannel should fetch the selected user&apos;s membership for the selected channel" time="0.002">
    </testcase>
    <testcase classname="components/AddUserToChannelModal didSelectChannel should match state on selection" name="components/AddUserToChannelModal didSelectChannel should match state on selection" time="0.005">
    </testcase>
    <testcase classname="components/AddUserToChannelModal handleSubmit should do nothing if no channel is selected" name="components/AddUserToChannelModal handleSubmit should do nothing if no channel is selected" time="0.001">
    </testcase>
    <testcase classname="components/AddUserToChannelModal handleSubmit should do nothing if user is a member of the selected channel" name="components/AddUserToChannelModal handleSubmit should do nothing if user is a member of the selected channel" time="0.002">
    </testcase>
    <testcase classname="components/AddUserToChannelModal handleSubmit should submit if user is not a member of the selected channel" name="components/AddUserToChannelModal handleSubmit should submit if user is not a member of the selected channel" time="0.002">
    </testcase>
    <testcase classname="components/AddUserToChannelModal handleSubmit should match state when save is successful" name="components/AddUserToChannelModal handleSubmit should match state when save is successful" time="0.004">
    </testcase>
    <testcase classname="components/AddUserToChannelModal handleSubmit should match state when save fails" name="components/AddUserToChannelModal handleSubmit should match state when save fails" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="TextFormatting.ChannelLinks" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:20" time="0.361" tests="7">
    <testcase classname="TextFormatting.ChannelLinks Not channel links" name="TextFormatting.ChannelLinks Not channel links" time="0.005">
    </testcase>
    <testcase classname="TextFormatting.ChannelLinks Channel links should link ~town-square" name="TextFormatting.ChannelLinks Channel links should link ~town-square" time="0.006">
    </testcase>
    <testcase classname="TextFormatting.ChannelLinks Channel links should link ~town-square followed by a period" name="TextFormatting.ChannelLinks Channel links should link ~town-square followed by a period" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.ChannelLinks Channel links should link ~town-square, with display_name an HTML string" name="TextFormatting.ChannelLinks Channel links should link ~town-square, with display_name an HTML string" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.ChannelLinks Channel links should link ~town-square, with a basename defined" name="TextFormatting.ChannelLinks Channel links should link ~town-square, with a basename defined" time="0.002">
    </testcase>
    <testcase classname="TextFormatting.ChannelLinks Channel links should link in brackets" name="TextFormatting.ChannelLinks Channel links should link in brackets" time="0">
    </testcase>
    <testcase classname="TextFormatting.ChannelLinks invalid channel links should not link when a ~ is in the middle of a word" name="TextFormatting.ChannelLinks invalid channel links should not link when a ~ is in the middle of a word" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/tutorial/tutorial_intro_screens/TutorialIntroScreens" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:20" time="0.377" tests="5">
    <testcase classname="components/tutorial/tutorial_intro_screens/TutorialIntroScreens should match snapshot" name="components/tutorial/tutorial_intro_screens/TutorialIntroScreens should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/tutorial/tutorial_intro_screens/TutorialIntroScreens should not call savePreferences when handleNext" name="components/tutorial/tutorial_intro_screens/TutorialIntroScreens should not call savePreferences when handleNext" time="0.003">
    </testcase>
    <testcase classname="components/tutorial/tutorial_intro_screens/TutorialIntroScreens should have called savePreferences when handleNext" name="components/tutorial/tutorial_intro_screens/TutorialIntroScreens should have called savePreferences when handleNext" time="0.002">
    </testcase>
    <testcase classname="components/tutorial/tutorial_intro_screens/TutorialIntroScreens should have called mockEvent.preventDefault when skipTutorial" name="components/tutorial/tutorial_intro_screens/TutorialIntroScreens should have called mockEvent.preventDefault when skipTutorial" time="0">
    </testcase>
    <testcase classname="components/tutorial/tutorial_intro_screens/TutorialIntroScreens should have called savePreferences when skipTutorial" name="components/tutorial/tutorial_intro_screens/TutorialIntroScreens should have called savePreferences when skipTutorial" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/admin_user_card/admin_user_card" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:21" time="0.376" tests="4">
    <testcase classname="components/admin_console/admin_user_card/admin_user_card should match default snapshot" name="components/admin_console/admin_user_card/admin_user_card should match default snapshot" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/admin_user_card/admin_user_card should match snapshot if no nickname is defined" name="components/admin_console/admin_user_card/admin_user_card should match snapshot if no nickname is defined" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/admin_user_card/admin_user_card should match snapshot if no first/last name is defined" name="components/admin_console/admin_user_card/admin_user_card should match snapshot if no first/last name is defined" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/admin_user_card/admin_user_card should match snapshot if no first/last name or nickname is defined" name="components/admin_console/admin_user_card/admin_user_card should match snapshot if no first/last name or nickname is defined" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="component/sidebar/SidebarTutorialTip" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:21" time="0.374" tests="4">
    <testcase classname="component/sidebar/SidebarTutorialTip should match snapshot, without townSquare and without offTopic" name="component/sidebar/SidebarTutorialTip should match snapshot, without townSquare and without offTopic" time="0.003">
    </testcase>
    <testcase classname="component/sidebar/SidebarTutorialTip should match snapshot, with townSquare and without offTopic" name="component/sidebar/SidebarTutorialTip should match snapshot, with townSquare and without offTopic" time="0.005">
    </testcase>
    <testcase classname="component/sidebar/SidebarTutorialTip should match snapshot, without townSquare and with offTopic" name="component/sidebar/SidebarTutorialTip should match snapshot, without townSquare and with offTopic" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/SidebarTutorialTip should match snapshot, with townSquare and with offTopic" name="component/sidebar/SidebarTutorialTip should match snapshot, with townSquare and with offTopic" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/SearchableChannelList" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:21" time="0.367" tests="2">
    <testcase classname="components/SearchableChannelList should match init snapshot" name="components/SearchableChannelList should match init snapshot" time="0.003">
    </testcase>
    <testcase classname="components/SearchableChannelList should set page to 0 when starting search" name="components/SearchableChannelList should set page to 0 when starting search" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/ShowMore" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:22" time="0.444" tests="7">
    <testcase classname="components/post_view/ShowMore should match snapshot" name="components/post_view/ShowMore should match snapshot" time="0.005">
    </testcase>
    <testcase classname="components/post_view/ShowMore should match snapshot, PostMessageView on collapsed view" name="components/post_view/ShowMore should match snapshot, PostMessageView on collapsed view" time="0.002">
    </testcase>
    <testcase classname="components/post_view/ShowMore should match snapshot, PostMessageView on expanded view" name="components/post_view/ShowMore should match snapshot, PostMessageView on expanded view" time="0.002">
    </testcase>
    <testcase classname="components/post_view/ShowMore should match snapshot, PostAttachment on collapsed view" name="components/post_view/ShowMore should match snapshot, PostAttachment on collapsed view" time="0.003">
    </testcase>
    <testcase classname="components/post_view/ShowMore should match snapshot, PostAttachment on expanded view" name="components/post_view/ShowMore should match snapshot, PostAttachment on expanded view" time="0.01">
    </testcase>
    <testcase classname="components/post_view/ShowMore should match snapshot, PostMessageView on expanded view with compactDisplay" name="components/post_view/ShowMore should match snapshot, PostMessageView on expanded view with compactDisplay" time="0.002">
    </testcase>
    <testcase classname="components/post_view/ShowMore should call checkTextOverflow" name="components/post_view/ShowMore should call checkTextOverflow" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="components/SettingItemMin" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:22" time="0.452" tests="13">
    <testcase classname="components/SettingItemMin should match snapshot, profile picture on source" name="components/SettingItemMin should match snapshot, profile picture on source" time="0.004">
    </testcase>
    <testcase classname="components/SettingItemMin should match snapshot, profile picture on file" name="components/SettingItemMin should match snapshot, profile picture on file" time="0.003">
    </testcase>
    <testcase classname="components/SettingItemMin should match snapshot, user icon on source" name="components/SettingItemMin should match snapshot, user icon on source" time="0.002">
    </testcase>
    <testcase classname="components/SettingItemMin should match snapshot, team icon on source" name="components/SettingItemMin should match snapshot, team icon on source" time="0.002">
    </testcase>
    <testcase classname="components/SettingItemMin should match snapshot, team icon on file" name="components/SettingItemMin should match snapshot, team icon on file" time="0.002">
    </testcase>
    <testcase classname="components/SettingItemMin should match snapshot, on loading picture" name="components/SettingItemMin should match snapshot, on loading picture" time="0.002">
    </testcase>
    <testcase classname="components/SettingItemMin should match snapshot with active Save button" name="components/SettingItemMin should match snapshot with active Save button" time="0.004">
    </testcase>
    <testcase classname="components/SettingItemMin should match state and call props.updateSection on handleCancel" name="components/SettingItemMin should match state and call props.updateSection on handleCancel" time="0.002">
    </testcase>
    <testcase classname="components/SettingItemMin should call props.onRemove on handleSave" name="components/SettingItemMin should call props.onRemove on handleSave" time="0.002">
    </testcase>
    <testcase classname="components/SettingItemMin should call props.onSetDefault on handleSave" name="components/SettingItemMin should call props.onSetDefault on handleSave" time="0.001">
    </testcase>
    <testcase classname="components/SettingItemMin should match state and call props.onSubmit on handleSave" name="components/SettingItemMin should match state and call props.onSubmit on handleSave" time="0.002">
    </testcase>
    <testcase classname="components/SettingItemMin should match state on handleRemoveSrc" name="components/SettingItemMin should match state on handleRemoveSrc" time="0.002">
    </testcase>
    <testcase classname="components/SettingItemMin should match state and call props.onFileChange on handleFileChange" name="components/SettingItemMin should match state and call props.onFileChange on handleFileChange" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="TextFormatting.Hashtags with default setting" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:23" time="0.36" tests="6">
    <testcase classname="TextFormatting.Hashtags with default setting Not hashtags" name="TextFormatting.Hashtags with default setting Not hashtags" time="0.005">
    </testcase>
    <testcase classname="TextFormatting.Hashtags with default setting Hashtags" name="TextFormatting.Hashtags with default setting Hashtags" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.Hashtags with default setting Formatted hashtags" name="TextFormatting.Hashtags with default setting Formatted hashtags" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.Hashtags with default setting Searching for hashtags" name="TextFormatting.Hashtags with default setting Searching for hashtags" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.Hashtags with default setting Potential hashtags with other entities nested" name="TextFormatting.Hashtags with default setting Potential hashtags with other entities nested" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.Hashtags with various settings Boundary of MinimumHashtagLength" name="TextFormatting.Hashtags with various settings Boundary of MinimumHashtagLength" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="components/TeamSettings" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:23" time="0.421" tests="13">
    <testcase classname="components/TeamSettings should handle bad updateTeamIcon function call" name="components/TeamSettings should handle bad updateTeamIcon function call" time="0.004">
    </testcase>
    <testcase classname="components/TeamSettings should handle invalid file selection" name="components/TeamSettings should handle invalid file selection" time="0.002">
    </testcase>
    <testcase classname="components/TeamSettings should handle too large files" name="components/TeamSettings should handle too large files" time="0.002">
    </testcase>
    <testcase classname="components/TeamSettings should call actions.setTeamIcon on handleTeamIconSubmit" name="components/TeamSettings should call actions.setTeamIcon on handleTeamIconSubmit" time="0.013">
    </testcase>
    <testcase classname="components/TeamSettings should call actions.removeTeamIcon on handleTeamIconRemove" name="components/TeamSettings should call actions.removeTeamIcon on handleTeamIconRemove" time="0.003">
    </testcase>
    <testcase classname="components/TeamSettings hide invite code if no permissions for team inviting" name="components/TeamSettings hide invite code if no permissions for team inviting" time="0.005">
    </testcase>
    <testcase classname="components/TeamSettings should call actions.patchTeam on handleAllowedDomainsSubmit" name="components/TeamSettings should call actions.patchTeam on handleAllowedDomainsSubmit" time="0.002">
    </testcase>
    <testcase classname="components/TeamSettings should call actions.patchTeam on handleOpenInviteSubmit" name="components/TeamSettings should call actions.patchTeam on handleOpenInviteSubmit" time="0.001">
    </testcase>
    <testcase classname="components/TeamSettings should call actions.patchTeam on handleNameSubmit" name="components/TeamSettings should call actions.patchTeam on handleNameSubmit" time="0.003">
    </testcase>
    <testcase classname="components/TeamSettings should call actions.patchTeam on handleInviteIdSubmit" name="components/TeamSettings should call actions.patchTeam on handleInviteIdSubmit" time="0.002">
    </testcase>
    <testcase classname="components/TeamSettings should call actions.patchTeam on handleDescriptionSubmit" name="components/TeamSettings should call actions.patchTeam on handleDescriptionSubmit" time="0.002">
    </testcase>
    <testcase classname="components/TeamSettings should match snapshot when team is group constrained" name="components/TeamSettings should match snapshot when team is group constrained" time="0.003">
    </testcase>
    <testcase classname="components/TeamSettings should call actions.getTeam on handleUpdateSection if invite_id is empty" name="components/TeamSettings should call actions.getTeam on handleUpdateSection if invite_id is empty" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/invitation_modal/InvitationModalConfirmStep" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:24" time="0.368" tests="5">
    <testcase classname="components/invitation_modal/InvitationModalConfirmStep should match the snapshot for guests with failures and successes" name="components/invitation_modal/InvitationModalConfirmStep should match the snapshot for guests with failures and successes" time="0.004">
    </testcase>
    <testcase classname="components/invitation_modal/InvitationModalConfirmStep should match the snapshot for members with failures and successes" name="components/invitation_modal/InvitationModalConfirmStep should match the snapshot for members with failures and successes" time="0.002">
    </testcase>
    <testcase classname="components/invitation_modal/InvitationModalConfirmStep should match the snapshot without successes" name="components/invitation_modal/InvitationModalConfirmStep should match the snapshot without successes" time="0.001">
    </testcase>
    <testcase classname="components/invitation_modal/InvitationModalConfirmStep should match the snapshot without failures" name="components/invitation_modal/InvitationModalConfirmStep should match the snapshot without failures" time="0.002">
    </testcase>
    <testcase classname="components/invitation_modal/InvitationModalConfirmStep should match the snapshot without failures or successes" name="components/invitation_modal/InvitationModalConfirmStep should match the snapshot without failures or successes" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/ChannelHeaderDropdown/MenuItem.LeaveChannel" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:24" time="0.389" tests="4">
    <testcase classname="components/ChannelHeaderDropdown/MenuItem.LeaveChannel should match snapshot" name="components/ChannelHeaderDropdown/MenuItem.LeaveChannel should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/ChannelHeaderDropdown/MenuItem.LeaveChannel should be hidden if the channel is default channel" name="components/ChannelHeaderDropdown/MenuItem.LeaveChannel should be hidden if the channel is default channel" time="0.002">
    </testcase>
    <testcase classname="components/ChannelHeaderDropdown/MenuItem.LeaveChannel should be hidden if the channel type is DM or GM" name="components/ChannelHeaderDropdown/MenuItem.LeaveChannel should be hidden if the channel type is DM or GM" time="0.001">
    </testcase>
    <testcase classname="components/ChannelHeaderDropdown/MenuItem.LeaveChannel should runs leaveChannel function on click only if the channel is not private" name="components/ChannelHeaderDropdown/MenuItem.LeaveChannel should runs leaveChannel function on click only if the channel is not private" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="components/SuggestionBox" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:24" time="0.47" tests="6">
    <testcase classname="components/SuggestionBox findOverlap" name="components/SuggestionBox findOverlap" time="0.002">
    </testcase>
    <testcase classname="components/SuggestionBox should avoid ref access on unmount race" name="components/SuggestionBox should avoid ref access on unmount race" time="0.012">
    </testcase>
    <testcase classname="components/SuggestionBox should match state and/or call function on handleFocusOut" name="components/SuggestionBox should match state and/or call function on handleFocusOut" time="0.002">
    </testcase>
    <testcase classname="components/SuggestionBox should force pretext change on context change" name="components/SuggestionBox should force pretext change on context change" time="0.002">
    </testcase>
    <testcase classname="components/SuggestionBox should force pretext change after text has been cleared by parent" name="components/SuggestionBox should force pretext change after text has been cleared by parent" time="0.002">
    </testcase>
    <testcase classname="components/SuggestionBox should force pretext change on composition update" name="components/SuggestionBox should force pretext change on composition update" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Markdown.Imgs" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:25" time="0.342" tests="6">
    <testcase classname="Markdown.Imgs Inline mage" name="Markdown.Imgs Inline mage" time="0.003">
    </testcase>
    <testcase classname="Markdown.Imgs Image with hover text" name="Markdown.Imgs Image with hover text" time="0">
    </testcase>
    <testcase classname="Markdown.Imgs Image with link" name="Markdown.Imgs Image with link" time="0.001">
    </testcase>
    <testcase classname="Markdown.Imgs Image with width and height" name="Markdown.Imgs Image with width and height" time="0">
    </testcase>
    <testcase classname="Markdown.Imgs Image with width" name="Markdown.Imgs Image with width" time="0.001">
    </testcase>
    <testcase classname="Text-formatted inline markdown images Not enclosed in a p tag" name="Text-formatted inline markdown images Not enclosed in a p tag" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Actions.Admin" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:25" time="0.372" tests="4">
    <testcase classname="Actions.Admin Register a plugin adds the plugin to the state" name="Actions.Admin Register a plugin adds the plugin to the state" time="0.003">
    </testcase>
    <testcase classname="Actions.Admin Unregister a plugin removes an existing plugin from the state" name="Actions.Admin Unregister a plugin removes an existing plugin from the state" time="0.003">
    </testcase>
    <testcase classname="Actions.Admin Unregister an unexisting plugin do nothing" name="Actions.Admin Unregister an unexisting plugin do nothing" time="0.004">
    </testcase>
    <testcase classname="Actions.Admin Register a custom plugin setting adds the component to the state" name="Actions.Admin Register a custom plugin setting adds the component to the state" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="components/GetPublicLinkModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:26" time="0.379" tests="6">
    <testcase classname="components/GetPublicLinkModal should match snapshot when link is empty" name="components/GetPublicLinkModal should match snapshot when link is empty" time="0.002">
    </testcase>
    <testcase classname="components/GetPublicLinkModal should match snapshot when link is undefined" name="components/GetPublicLinkModal should match snapshot when link is undefined" time="0.001">
    </testcase>
    <testcase classname="components/GetPublicLinkModal should match snapshot when link is not empty" name="components/GetPublicLinkModal should match snapshot when link is not empty" time="0.001">
    </testcase>
    <testcase classname="components/GetPublicLinkModal should call getFilePublicLink on GetPublicLinkModal&apos;s show" name="components/GetPublicLinkModal should call getFilePublicLink on GetPublicLinkModal&apos;s show" time="0.001">
    </testcase>
    <testcase classname="components/GetPublicLinkModal should not call getFilePublicLink on GetLinkModal&apos;s onHide" name="components/GetPublicLinkModal should not call getFilePublicLink on GetLinkModal&apos;s onHide" time="0.016">
    </testcase>
    <testcase classname="components/GetPublicLinkModal should call handleToggle on GetLinkModal&apos;s onHide" name="components/GetPublicLinkModal should call handleToggle on GetLinkModal&apos;s onHide" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/brand_image_setting" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:26" time="0.388" tests="1">
    <testcase classname="components/admin_console/brand_image_setting should have called deleteBrandImage or uploadBrandImage on save depending on component state" name="components/admin_console/brand_image_setting should have called deleteBrandImage or uploadBrandImage on save depending on component state" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="components/QuickSwitchModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:26" time="0.428" tests="6">
    <testcase classname="components/QuickSwitchModal should match snapshot" name="components/QuickSwitchModal should match snapshot" time="0.005">
    </testcase>
    <testcase classname="components/QuickSwitchModal handleSubmit should do nothing if nothing selected" name="components/QuickSwitchModal handleSubmit should do nothing if nothing selected" time="0.001">
    </testcase>
    <testcase classname="components/QuickSwitchModal handleSubmit should fail to switch to a channel" name="components/QuickSwitchModal handleSubmit should fail to switch to a channel" time="0.001">
    </testcase>
    <testcase classname="components/QuickSwitchModal handleSubmit should switch to a channel" name="components/QuickSwitchModal handleSubmit should switch to a channel" time="0.009">
    </testcase>
    <testcase classname="components/QuickSwitchModal handleSubmit should join the channel before switching" name="components/QuickSwitchModal handleSubmit should join the channel before switching" time="0.001">
    </testcase>
    <testcase classname="components/QuickSwitchModal handleSubmit should not join the channel before switching if channel is DM" name="components/QuickSwitchModal handleSubmit should not join the channel before switching if channel is DM" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/brand_image_setting/UploadButton" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:27" time="0.444" tests="2">
    <testcase classname="components/admin_console/brand_image_setting/UploadButton should match snapshot" name="components/admin_console/brand_image_setting/UploadButton should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/brand_image_setting/UploadButton should have called props.onClick on button click" name="components/admin_console/brand_image_setting/UploadButton should have called props.onClick on button click" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/AbstractIncomingWebhook" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:27" time="0.408" tests="10">
    <testcase classname="components/integrations/AbstractIncomingWebhook should match snapshot" name="components/integrations/AbstractIncomingWebhook should match snapshot" time="0.006">
    </testcase>
    <testcase classname="components/integrations/AbstractIncomingWebhook should match snapshot, on serverError" name="components/integrations/AbstractIncomingWebhook should match snapshot, on serverError" time="0.004">
    </testcase>
    <testcase classname="components/integrations/AbstractIncomingWebhook should match snapshot, displays client error when no initial hook" name="components/integrations/AbstractIncomingWebhook should match snapshot, displays client error when no initial hook" time="0.007">
    </testcase>
    <testcase classname="components/integrations/AbstractIncomingWebhook should match snapshot, hiding post username if not enabled" name="components/integrations/AbstractIncomingWebhook should match snapshot, hiding post username if not enabled" time="0.003">
    </testcase>
    <testcase classname="components/integrations/AbstractIncomingWebhook should match snapshot, hiding post icon url if not enabled" name="components/integrations/AbstractIncomingWebhook should match snapshot, hiding post icon url if not enabled" time="0.003">
    </testcase>
    <testcase classname="components/integrations/AbstractIncomingWebhook should call action function" name="components/integrations/AbstractIncomingWebhook should call action function" time="0.01">
    </testcase>
    <testcase classname="components/integrations/AbstractIncomingWebhook should update state.channelId when on channel change" name="components/integrations/AbstractIncomingWebhook should update state.channelId when on channel change" time="0.004">
    </testcase>
    <testcase classname="components/integrations/AbstractIncomingWebhook should update state.description when on description change" name="components/integrations/AbstractIncomingWebhook should update state.description when on description change" time="0.003">
    </testcase>
    <testcase classname="components/integrations/AbstractIncomingWebhook should update state.username on post username change" name="components/integrations/AbstractIncomingWebhook should update state.username on post username change" time="0.003">
    </testcase>
    <testcase classname="components/integrations/AbstractIncomingWebhook should update state.iconURL on post icon url change" name="components/integrations/AbstractIncomingWebhook should update state.iconURL on post icon url change" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/EditOAuthApp" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:28" time="0.419" tests="9">
    <testcase classname="components/integrations/EditOAuthApp should match snapshot, loading" name="components/integrations/EditOAuthApp should match snapshot, loading" time="0.003">
    </testcase>
    <testcase classname="components/integrations/EditOAuthApp should match snapshot" name="components/integrations/EditOAuthApp should match snapshot" time="0.002">
    </testcase>
    <testcase classname="components/integrations/EditOAuthApp should match snapshot when EnableOAuthServiceProvider is false" name="components/integrations/EditOAuthApp should match snapshot when EnableOAuthServiceProvider is false" time="0.001">
    </testcase>
    <testcase classname="components/integrations/EditOAuthApp should have match state when handleConfirmModal is called" name="components/integrations/EditOAuthApp should have match state when handleConfirmModal is called" time="0.001">
    </testcase>
    <testcase classname="components/integrations/EditOAuthApp should have match state when confirmModalDismissed is called" name="components/integrations/EditOAuthApp should have match state when confirmModalDismissed is called" time="0.001">
    </testcase>
    <testcase classname="components/integrations/EditOAuthApp should have match renderExtra" name="components/integrations/EditOAuthApp should have match renderExtra" time="0.001">
    </testcase>
    <testcase classname="components/integrations/EditOAuthApp should have match when editOAuthApp is called" name="components/integrations/EditOAuthApp should have match when editOAuthApp is called" time="0.001">
    </testcase>
    <testcase classname="components/integrations/EditOAuthApp should have match when submitOAuthApp is called on success" name="components/integrations/EditOAuthApp should have match when submitOAuthApp is called on success" time="0.001">
    </testcase>
    <testcase classname="components/integrations/EditOAuthApp should have match when submitOAuthApp is called on error" name="components/integrations/EditOAuthApp should have match when submitOAuthApp is called on error" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Actions" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:28" time="0.371" tests="9">
    <testcase classname="Actions goToChannelByChannelId switch to public channel we have locally but need to join" name="Actions goToChannelByChannelId switch to public channel we have locally but need to join" time="0.002">
    </testcase>
    <testcase classname="Actions goToChannelByChannelName switch to channel on different team with same name" name="Actions goToChannelByChannelName switch to channel on different team with same name" time="0.001">
    </testcase>
    <testcase classname="Actions goToChannelByChannelName switch to public channel we have locally but need to join" name="Actions goToChannelByChannelName switch to public channel we have locally but need to join" time="0.001">
    </testcase>
    <testcase classname="Actions goToDirectChannelByUserId switch to a direct channel by user id on the same team" name="Actions goToDirectChannelByUserId switch to a direct channel by user id on the same team" time="0.001">
    </testcase>
    <testcase classname="Actions goToDirectChannelByUserId switch to a direct channel by user id on different team" name="Actions goToDirectChannelByUserId switch to a direct channel by user id on different team" time="0">
    </testcase>
    <testcase classname="Actions goToDirectChannelByUserIds switch to a direct channel by name on the same team" name="Actions goToDirectChannelByUserIds switch to a direct channel by name on the same team" time="0.001">
    </testcase>
    <testcase classname="Actions goToDirectChannelByUserIds switch to a direct channel by name on different team" name="Actions goToDirectChannelByUserIds switch to a direct channel by name on different team" time="0.001">
    </testcase>
    <testcase classname="Actions goToDirectChannelByEmail switch to a direct channel by email with user already existing locally" name="Actions goToDirectChannelByEmail switch to a direct channel by email with user already existing locally" time="0.001">
    </testcase>
    <testcase classname="Actions goToDirectChannelByEmail switch to a direct channel by email with user not existing locally" name="Actions goToDirectChannelByEmail switch to a direct channel by email with user not existing locally" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/MenuItemBlockableLink" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:28" time="0.379" tests="1">
    <testcase classname="components/MenuItemBlockableLink should match snapshot" name="components/MenuItemBlockableLink should match snapshot" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="PostAttachmentOpenGraph" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:29" time="0.459" tests="17">
    <testcase classname="PostAttachmentOpenGraph should render nothing without any data" name="PostAttachmentOpenGraph should render nothing without any data" time="0.001">
    </testcase>
    <testcase classname="PostAttachmentOpenGraph should render nothing when link previews are disabled on the server" name="PostAttachmentOpenGraph should render nothing when link previews are disabled on the server" time="0.001">
    </testcase>
    <testcase classname="PostAttachmentOpenGraph should render nothing when link previews are disabled by the user" name="PostAttachmentOpenGraph should render nothing when link previews are disabled by the user" time="0.001">
    </testcase>
    <testcase classname="PostAttachmentOpenGraph isLargeImage should be a large image" name="PostAttachmentOpenGraph isLargeImage should be a large image" time="0.001">
    </testcase>
    <testcase classname="PostAttachmentOpenGraph isLargeImage should not be a large image" name="PostAttachmentOpenGraph isLargeImage should not be a large image" time="0.001">
    </testcase>
    <testcase classname="PostAttachmentOpenGraph image should use an ExternalImage for a small image" name="PostAttachmentOpenGraph image should use an ExternalImage for a small image" time="0.015">
    </testcase>
    <testcase classname="PostAttachmentOpenGraph image should render with large image and toggle" name="PostAttachmentOpenGraph image should render with large image and toggle" time="0.011">
    </testcase>
    <testcase classname="PostAttachmentOpenGraph remove preview button should not show button to remove preview for post made by another user" name="PostAttachmentOpenGraph remove preview button should not show button to remove preview for post made by another user" time="0.001">
    </testcase>
    <testcase classname="PostAttachmentOpenGraph remove preview button should show button to remove preview for post made by current user" name="PostAttachmentOpenGraph remove preview button should show button to remove preview for post made by current user" time="0.002">
    </testcase>
    <testcase classname="getBestImageUrl should return nothing with no OpenGraph metadata or dimensions" name="getBestImageUrl should return nothing with no OpenGraph metadata or dimensions" time="0">
    </testcase>
    <testcase classname="getBestImageUrl should return nothing with missing OpenGraph images" name="getBestImageUrl should return nothing with missing OpenGraph images" time="0.001">
    </testcase>
    <testcase classname="getBestImageUrl should return nothing with no OpenGraph images" name="getBestImageUrl should return nothing with no OpenGraph images" time="0">
    </testcase>
    <testcase classname="getBestImageUrl should return secure_url if specified" name="getBestImageUrl should return secure_url if specified" time="0.001">
    </testcase>
    <testcase classname="getBestImageUrl should return url if secure_url is not specified" name="getBestImageUrl should return url if secure_url is not specified" time="0">
    </testcase>
    <testcase classname="getBestImageUrl should pick the last image if no dimensions are specified" name="getBestImageUrl should pick the last image if no dimensions are specified" time="0.001">
    </testcase>
    <testcase classname="getBestImageUrl should prefer images with dimensions closer to 80 by 80" name="getBestImageUrl should prefer images with dimensions closer to 80 by 80" time="0.001">
    </testcase>
    <testcase classname="getBestImageUrl should use dimensions from post metadata if necessary" name="getBestImageUrl should use dimensions from post metadata if necessary" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/AtMention" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:29" time="0.457" tests="12">
    <testcase classname="components/AtMention should match snapshot when mentioning user" name="components/AtMention should match snapshot when mentioning user" time="0.002">
    </testcase>
    <testcase classname="components/AtMention should match snapshot when mentioning user with different teammate name display setting" name="components/AtMention should match snapshot when mentioning user with different teammate name display setting" time="0.007">
    </testcase>
    <testcase classname="components/AtMention should match snapshot when mentioning user followed by punctuation" name="components/AtMention should match snapshot when mentioning user followed by punctuation" time="0.002">
    </testcase>
    <testcase classname="components/AtMention should match snapshot when mentioning user containing punctuation" name="components/AtMention should match snapshot when mentioning user containing punctuation" time="0.001">
    </testcase>
    <testcase classname="components/AtMention should match snapshot when mentioning user containing and followed by punctuation" name="components/AtMention should match snapshot when mentioning user containing and followed by punctuation" time="0.001">
    </testcase>
    <testcase classname="components/AtMention should match snapshot when mentioning user with mixed case" name="components/AtMention should match snapshot when mentioning user with mixed case" time="0.001">
    </testcase>
    <testcase classname="components/AtMention should match snapshot when mentioning current user" name="components/AtMention should match snapshot when mentioning current user" time="0.001">
    </testcase>
    <testcase classname="components/AtMention should match snapshot when mentioning all" name="components/AtMention should match snapshot when mentioning all" time="0">
    </testcase>
    <testcase classname="components/AtMention should match snapshot when mentioning all with mixed case" name="components/AtMention should match snapshot when mentioning all with mixed case" time="0.001">
    </testcase>
    <testcase classname="components/AtMention should match snapshot when not mentioning a user" name="components/AtMention should match snapshot when not mentioning a user" time="0.001">
    </testcase>
    <testcase classname="components/AtMention should match snapshot when not mentioning a user with mixed case" name="components/AtMention should match snapshot when not mentioning a user with mixed case" time="0">
    </testcase>
    <testcase classname="components/AtMention should have placement state based on ref position of click handler" name="components/AtMention should have placement state based on ref position of click handler" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/AddGroupsToTeamModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:30" time="0.402" tests="9">
    <testcase classname="components/AddGroupsToTeamModal should match snapshot" name="components/AddGroupsToTeamModal should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/AddGroupsToTeamModal should have called onHide when handleExit is called" name="components/AddGroupsToTeamModal should have called onHide when handleExit is called" time="0.002">
    </testcase>
    <testcase classname="components/AddGroupsToTeamModal should match state when handleResponse is called" name="components/AddGroupsToTeamModal should match state when handleResponse is called" time="0.002">
    </testcase>
    <testcase classname="components/AddGroupsToTeamModal should match state when addValue is called" name="components/AddGroupsToTeamModal should match state when addValue is called" time="0.003">
    </testcase>
    <testcase classname="components/AddGroupsToTeamModal should match state when handlePageChange is called" name="components/AddGroupsToTeamModal should match state when handlePageChange is called" time="0.002">
    </testcase>
    <testcase classname="components/AddGroupsToTeamModal should match state when search is called" name="components/AddGroupsToTeamModal should match state when search is called" time="0.002">
    </testcase>
    <testcase classname="components/AddGroupsToTeamModal should match state when handleDelete is called" name="components/AddGroupsToTeamModal should match state when handleDelete is called" time="0.002">
    </testcase>
    <testcase classname="components/AddGroupsToTeamModal should match when renderOption is called" name="components/AddGroupsToTeamModal should match when renderOption is called" time="0.002">
    </testcase>
    <testcase classname="components/AddGroupsToTeamModal should match when renderValue is called" name="components/AddGroupsToTeamModal should match when renderValue is called" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/message_attachments/ActionMenu" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:30" time="0.341" tests="2">
    <testcase classname="components/post_view/message_attachments/ActionMenu should start with nothing selected" name="components/post_view/message_attachments/ActionMenu should start with nothing selected" time="0.002">
    </testcase>
    <testcase classname="components/post_view/message_attachments/ActionMenu should set selected based on default option" name="components/post_view/message_attachments/ActionMenu should set selected based on default option" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/group/GroupUsersRow" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:31" time="0.364" tests="2">
    <testcase classname="admin_console/team_channel_settings/group/GroupUsersRow should match snapshot" name="admin_console/team_channel_settings/group/GroupUsersRow should match snapshot" time="0.003">
    </testcase>
    <testcase classname="admin_console/team_channel_settings/group/GroupUsersRow should match snapshot with two groups" name="admin_console/team_channel_settings/group/GroupUsersRow should match snapshot with two groups" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/UserProfile" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:31" time="0.383" tests="2">
    <testcase classname="components/UserProfile should match snapshot" name="components/UserProfile should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/UserProfile should match snapshot, when popover is disabled" name="components/UserProfile should match snapshot, when popover is disabled" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/team/TeamList" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:31" time="0.441" tests="2">
    <testcase classname="admin_console/team_channel_settings/team/TeamList should match snapshot" name="admin_console/team_channel_settings/team/TeamList should match snapshot" time="0.003">
    </testcase>
    <testcase classname="admin_console/team_channel_settings/team/TeamList should match snapshot with paging" name="admin_console/team_channel_settings/team/TeamList should match snapshot with paging" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/settings/AutocompleteSelector" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:32" time="0.364" tests="3">
    <testcase classname="components/widgets/settings/AutocompleteSelector render component with required props" name="components/widgets/settings/AutocompleteSelector render component with required props" time="0.006">
    </testcase>
    <testcase classname="components/widgets/settings/AutocompleteSelector check snapshot with value prop and changing focus" name="components/widgets/settings/AutocompleteSelector check snapshot with value prop and changing focus" time="0.003">
    </testcase>
    <testcase classname="components/widgets/settings/AutocompleteSelector onSelected" name="components/widgets/settings/AutocompleteSelector onSelected" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/ChannelSelectorModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:32" time="0.356" tests="1">
    <testcase classname="components/ChannelSelectorModal should match snapshot" name="components/ChannelSelectorModal should match snapshot" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="components/activity_log_modal/ActivityLog" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:33" time="0.362" tests="5">
    <testcase classname="components/activity_log_modal/ActivityLog should match snapshot" name="components/activity_log_modal/ActivityLog should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/activity_log_modal/ActivityLog submitRevoke is called correctly" name="components/activity_log_modal/ActivityLog submitRevoke is called correctly" time="0.001">
    </testcase>
    <testcase classname="components/activity_log_modal/ActivityLog handleMoreInfo updates state correctly" name="components/activity_log_modal/ActivityLog handleMoreInfo updates state correctly" time="0.002">
    </testcase>
    <testcase classname="components/activity_log_modal/ActivityLog should match when isMobileSession is called" name="components/activity_log_modal/ActivityLog should match when isMobileSession is called" time="0.001">
    </testcase>
    <testcase classname="components/activity_log_modal/ActivityLog should match when mobileSessionInfo is called" name="components/activity_log_modal/ActivityLog should match when mobileSessionInfo is called" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/analytics/line_chart.tsx" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:33" time="0.379" tests="3">
    <testcase classname="components/analytics/line_chart.tsx should match snapshot, on loading" name="components/analytics/line_chart.tsx should match snapshot, on loading" time="0.004">
    </testcase>
    <testcase classname="components/analytics/line_chart.tsx should match snapshot, loaded without data" name="components/analytics/line_chart.tsx should match snapshot, loaded without data" time="0.001">
    </testcase>
    <testcase classname="components/analytics/line_chart.tsx should match snapshot, loaded with data" name="components/analytics/line_chart.tsx should match snapshot, loaded with data" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="actions/invite_actions" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:33" time="0.431" tests="12">
    <testcase classname="actions/invite_actions sendMembersInvites should generate and empty list if nothing is passed" name="actions/invite_actions sendMembersInvites should generate and empty list if nothing is passed" time="0.001">
    </testcase>
    <testcase classname="actions/invite_actions sendMembersInvites should generate list of success for emails" name="actions/invite_actions sendMembersInvites should generate list of success for emails" time="0.001">
    </testcase>
    <testcase classname="actions/invite_actions sendMembersInvites should generate list of failures for emails on invite fails" name="actions/invite_actions sendMembersInvites should generate list of failures for emails on invite fails" time="0.001">
    </testcase>
    <testcase classname="actions/invite_actions sendMembersInvites should generate list of failures and success for regular users and guests" name="actions/invite_actions sendMembersInvites should generate list of failures and success for regular users and guests" time="0">
    </testcase>
    <testcase classname="actions/invite_actions sendMembersInvites should generate a failure for problems adding a user" name="actions/invite_actions sendMembersInvites should generate a failure for problems adding a user" time="0">
    </testcase>
    <testcase classname="actions/invite_actions sendGuestsInvites should generate and empty list if nothing is passed" name="actions/invite_actions sendGuestsInvites should generate and empty list if nothing is passed" time="0.001">
    </testcase>
    <testcase classname="actions/invite_actions sendGuestsInvites should generate list of success for emails" name="actions/invite_actions sendGuestsInvites should generate list of success for emails" time="0.001">
    </testcase>
    <testcase classname="actions/invite_actions sendGuestsInvites should generate list of failures for emails on invite fails" name="actions/invite_actions sendGuestsInvites should generate list of failures for emails on invite fails" time="0">
    </testcase>
    <testcase classname="actions/invite_actions sendGuestsInvites should generate list of failures and success for regular users and guests" name="actions/invite_actions sendGuestsInvites should generate list of failures and success for regular users and guests" time="0.001">
    </testcase>
    <testcase classname="actions/invite_actions sendGuestsInvites should generate a failure for users that are part of all or some of the channels" name="actions/invite_actions sendGuestsInvites should generate a failure for users that are part of all or some of the channels" time="0.001">
    </testcase>
    <testcase classname="actions/invite_actions sendGuestsInvites should generate a failure for problems adding a user to team" name="actions/invite_actions sendGuestsInvites should generate a failure for problems adding a user to team" time="0.001">
    </testcase>
    <testcase classname="actions/invite_actions sendGuestsInvites should generate a failure for problems adding a user to channels" name="actions/invite_actions sendGuestsInvites should generate a failure for problems adding a user to channels" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/CustomPluginSettings" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:34" time="0.45" tests="3">
    <testcase classname="components/admin_console/CustomPluginSettings should match snapshot with settings and plugin" name="components/admin_console/CustomPluginSettings should match snapshot with settings and plugin" time="0.005">
    </testcase>
    <testcase classname="components/admin_console/CustomPluginSettings should match snapshot with settings and no plugin" name="components/admin_console/CustomPluginSettings should match snapshot with settings and no plugin" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/CustomPluginSettings should match snapshot with no settings and plugin" name="components/admin_console/CustomPluginSettings should match snapshot with no settings and plugin" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/invitation_modal/InvitationModalConfirmStepTable" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:34" time="0.337" tests="1">
    <testcase classname="components/invitation_modal/InvitationModalConfirmStepTable should match the snapshot" name="components/invitation_modal/InvitationModalConfirmStepTable should match the snapshot" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="actions/post_utils" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:35" time="0.361" tests="3">
    <testcase classname="actions/post_utils completePostReceive" name="actions/post_utils completePostReceive" time="0.002">
    </testcase>
    <testcase classname="actions/post_utils lastPostActions" name="actions/post_utils lastPostActions" time="0.001">
    </testcase>
    <testcase classname="actions/post_utils setChannelReadAndView" name="actions/post_utils setChannelReadAndView" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/team/TeamRow" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:35" time="0.342" tests="1">
    <testcase classname="admin_console/team_channel_settings/team/TeamRow should match snapshot" name="admin_console/team_channel_settings/team/TeamRow should match snapshot" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/interactive_dialog/DialogElement" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:35" time="0.456" tests="11">
    <testcase classname="components/interactive_dialog/DialogElement subtype blank" name="components/interactive_dialog/DialogElement subtype blank" time="0.002">
    </testcase>
    <testcase classname="components/interactive_dialog/DialogElement subtype email" name="components/interactive_dialog/DialogElement subtype email" time="0.002">
    </testcase>
    <testcase classname="components/interactive_dialog/DialogElement subtype invalid" name="components/interactive_dialog/DialogElement subtype invalid" time="0">
    </testcase>
    <testcase classname="components/interactive_dialog/DialogElement subtype password" name="components/interactive_dialog/DialogElement subtype password" time="0.001">
    </testcase>
    <testcase classname="components/interactive_dialog/DialogElement radioSetting RadioSetting is rendered when type is radio" name="components/interactive_dialog/DialogElement radioSetting RadioSetting is rendered when type is radio" time="0.004">
    </testcase>
    <testcase classname="components/interactive_dialog/DialogElement radioSetting RadioSetting is rendered when options are null" name="components/interactive_dialog/DialogElement radioSetting RadioSetting is rendered when options are null" time="0.002">
    </testcase>
    <testcase classname="components/interactive_dialog/DialogElement radioSetting RadioSetting is rendered when options are null and value is null" name="components/interactive_dialog/DialogElement radioSetting RadioSetting is rendered when options are null and value is null" time="0.002">
    </testcase>
    <testcase classname="components/interactive_dialog/DialogElement radioSetting RadioSetting is rendered when options are null and value is not null" name="components/interactive_dialog/DialogElement radioSetting RadioSetting is rendered when options are null and value is not null" time="0.001">
    </testcase>
    <testcase classname="components/interactive_dialog/DialogElement radioSetting RadioSetting is rendered when value is not one of the options" name="components/interactive_dialog/DialogElement radioSetting RadioSetting is rendered when value is not one of the options" time="0.002">
    </testcase>
    <testcase classname="components/interactive_dialog/DialogElement radioSetting No default value is selected from the radio button list" name="components/interactive_dialog/DialogElement radioSetting No default value is selected from the radio button list" time="0.007">
    </testcase>
    <testcase classname="components/interactive_dialog/DialogElement radioSetting The default value can be specified from the list" name="components/interactive_dialog/DialogElement radioSetting The default value can be specified from the list" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Actions.Posts" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:36" time="0.428" tests="13">
    <testcase classname="Actions.Posts handleNewPost" name="Actions.Posts handleNewPost" time="0.001">
    </testcase>
    <testcase classname="Actions.Posts setEditingPost" name="Actions.Posts setEditingPost" time="0.002">
    </testcase>
    <testcase classname="Actions.Posts hideEditPostModal" name="Actions.Posts hideEditPostModal" time="0.001">
    </testcase>
    <testcase classname="Actions.Posts searchForTerm" name="Actions.Posts searchForTerm" time="0.002">
    </testcase>
    <testcase classname="Actions.Posts createPost no emojis" name="Actions.Posts createPost no emojis" time="0.003">
    </testcase>
    <testcase classname="Actions.Posts createPost with single shorthand emoji" name="Actions.Posts createPost with single shorthand emoji" time="0.006">
    </testcase>
    <testcase classname="Actions.Posts createPost with single named emoji" name="Actions.Posts createPost with single named emoji" time="0.001">
    </testcase>
    <testcase classname="Actions.Posts createPost with multiple emoji" name="Actions.Posts createPost with multiple emoji" time="0">
    </testcase>
    <testcase classname="Actions.Posts addReaction" name="Actions.Posts addReaction" time="0.001">
    </testcase>
    <testcase classname="Actions.Posts flagPost" name="Actions.Posts flagPost" time="0.001">
    </testcase>
    <testcase classname="Actions.Posts unflagPost" name="Actions.Posts unflagPost" time="0.001">
    </testcase>
    <testcase classname="Actions.Posts pinPost" name="Actions.Posts pinPost" time="0.001">
    </testcase>
    <testcase classname="Actions.Posts unpinPost" name="Actions.Posts unpinPost" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/emoji/components/AddEmoji" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:36" time="0.468" tests="4">
    <testcase classname="components/emoji/components/AddEmoji should match snapshot" name="components/emoji/components/AddEmoji should match snapshot" time="0.01">
    </testcase>
    <testcase classname="components/emoji/components/AddEmoji should update emoji name and match snapshot" name="components/emoji/components/AddEmoji should update emoji name and match snapshot" time="0.005">
    </testcase>
    <testcase classname="components/emoji/components/AddEmoji should select a file and match snapshot" name="components/emoji/components/AddEmoji should select a file and match snapshot" time="0.009">
    </testcase>
    <testcase classname="components/emoji/components/AddEmoji should submit the new added emoji" name="components/emoji/components/AddEmoji should submit the new added emoji" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="components/channel_members_dropdown" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:37" time="0.395" tests="8">
    <testcase classname="components/channel_members_dropdown should match snapshot for dropdown with guest user" name="components/channel_members_dropdown should match snapshot for dropdown with guest user" time="0.003">
    </testcase>
    <testcase classname="components/channel_members_dropdown should match snapshot for not dropdown with guest user" name="components/channel_members_dropdown should match snapshot for not dropdown with guest user" time="0.002">
    </testcase>
    <testcase classname="components/channel_members_dropdown should match snapshot for channel_members_dropdown" name="components/channel_members_dropdown should match snapshot for channel_members_dropdown" time="0.001">
    </testcase>
    <testcase classname="components/channel_members_dropdown should match snapshot opening dropdown upwards" name="components/channel_members_dropdown should match snapshot opening dropdown upwards" time="0.001">
    </testcase>
    <testcase classname="components/channel_members_dropdown If a removal is in progress do not execute another removal" name="components/channel_members_dropdown If a removal is in progress do not execute another removal" time="0.002">
    </testcase>
    <testcase classname="components/channel_members_dropdown should fail to remove channel member" name="components/channel_members_dropdown should fail to remove channel member" time="0.002">
    </testcase>
    <testcase classname="components/channel_members_dropdown should remove the channel member" name="components/channel_members_dropdown should remove the channel member" time="0.002">
    </testcase>
    <testcase classname="components/channel_members_dropdown should match snapshot for group_constrained channel" name="components/channel_members_dropdown should match snapshot for group_constrained channel" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/AdminConsole/CustomUrlSchemeSetting" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:37" time="0.394" tests="10">
    <testcase classname="components/AdminConsole/CustomUrlSchemeSetting initial state with no items" name="components/AdminConsole/CustomUrlSchemeSetting initial state with no items" time="0.004">
    </testcase>
    <testcase classname="components/AdminConsole/CustomUrlSchemeSetting initial state with one item" name="components/AdminConsole/CustomUrlSchemeSetting initial state with one item" time="0.001">
    </testcase>
    <testcase classname="components/AdminConsole/CustomUrlSchemeSetting initial state with multiple items" name="components/AdminConsole/CustomUrlSchemeSetting initial state with multiple items" time="0.001">
    </testcase>
    <testcase classname="components/AdminConsole/CustomUrlSchemeSetting onChange called on change to empty" name="components/AdminConsole/CustomUrlSchemeSetting onChange called on change to empty" time="0.003">
    </testcase>
    <testcase classname="components/AdminConsole/CustomUrlSchemeSetting onChange called on change to one item" name="components/AdminConsole/CustomUrlSchemeSetting onChange called on change to one item" time="0.002">
    </testcase>
    <testcase classname="components/AdminConsole/CustomUrlSchemeSetting onChange called on change to two items" name="components/AdminConsole/CustomUrlSchemeSetting onChange called on change to two items" time="0.001">
    </testcase>
    <testcase classname="components/AdminConsole/CustomUrlSchemeSetting onChange called on change to more items" name="components/AdminConsole/CustomUrlSchemeSetting onChange called on change to more items" time="0.002">
    </testcase>
    <testcase classname="components/AdminConsole/CustomUrlSchemeSetting onChange called on change with extra commas" name="components/AdminConsole/CustomUrlSchemeSetting onChange called on change with extra commas" time="0.008">
    </testcase>
    <testcase classname="components/AdminConsole/CustomUrlSchemeSetting renders properly when disabled" name="components/AdminConsole/CustomUrlSchemeSetting renders properly when disabled" time="0.001">
    </testcase>
    <testcase classname="components/AdminConsole/CustomUrlSchemeSetting renders properly when set by environment variable" name="components/AdminConsole/CustomUrlSchemeSetting renders properly when set by environment variable" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/integrations/EditCommand" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:37" time="0.476" tests="7">
    <testcase classname="components/integrations/EditCommand should match snapshot" name="components/integrations/EditCommand should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/integrations/EditCommand should match snapshot, loading" name="components/integrations/EditCommand should match snapshot, loading" time="0.002">
    </testcase>
    <testcase classname="components/integrations/EditCommand should match snapshot when EnableCommands is false" name="components/integrations/EditCommand should match snapshot when EnableCommands is false" time="0.001">
    </testcase>
    <testcase classname="components/integrations/EditCommand should have match state when handleConfirmModal is called" name="components/integrations/EditCommand should have match state when handleConfirmModal is called" time="0.003">
    </testcase>
    <testcase classname="components/integrations/EditCommand should have match state when confirmModalDismissed is called" name="components/integrations/EditCommand should have match state when confirmModalDismissed is called" time="0.001">
    </testcase>
    <testcase classname="components/integrations/EditCommand should have match renderExtra" name="components/integrations/EditCommand should have match renderExtra" time="0.002">
    </testcase>
    <testcase classname="components/integrations/EditCommand should have match when editCommand is called" name="components/integrations/EditCommand should have match when editCommand is called" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/SettingItemMin" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:38" time="0.39" tests="4">
    <testcase classname="components/SettingItemMin should match snapshot" name="components/SettingItemMin should match snapshot" time="0.007">
    </testcase>
    <testcase classname="components/SettingItemMin should match snapshot, on disableOpen to true" name="components/SettingItemMin should match snapshot, on disableOpen to true" time="0.001">
    </testcase>
    <testcase classname="components/SettingItemMin should have called updateSection on handleUpdateSection with section" name="components/SettingItemMin should have called updateSection on handleUpdateSection with section" time="0.001">
    </testcase>
    <testcase classname="components/SettingItemMin should have called updateSection on handleUpdateSection with empty string" name="components/SettingItemMin should have called updateSection on handleUpdateSection with empty string" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="stripMarkdown | RemoveMarkdown" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:38" time="0.401" tests="53">
    <testcase classname="stripMarkdown | RemoveMarkdown emoji: same" name="stripMarkdown | RemoveMarkdown emoji: same" time="0.002">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown at-mention: same" name="stripMarkdown | RemoveMarkdown at-mention: same" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown channel-link: same" name="stripMarkdown | RemoveMarkdown channel-link: same" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown codespan: single backtick" name="stripMarkdown | RemoveMarkdown codespan: single backtick" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown codespan: double backtick" name="stripMarkdown | RemoveMarkdown codespan: double backtick" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown codespan: triple backtick" name="stripMarkdown | RemoveMarkdown codespan: triple backtick" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown codespan: inline code" name="stripMarkdown | RemoveMarkdown codespan: inline code" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown code block: single line code block" name="stripMarkdown | RemoveMarkdown code block: single line code block" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown code block: multiline code block 2" name="stripMarkdown | RemoveMarkdown code block: multiline code block 2" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown code block: language highlighting" name="stripMarkdown | RemoveMarkdown code block: language highlighting" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown blockquote:" name="stripMarkdown | RemoveMarkdown blockquote:" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown blockquote: multiline" name="stripMarkdown | RemoveMarkdown blockquote: multiline" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: # H1 header" name="stripMarkdown | RemoveMarkdown heading: # H1 header" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: heading with @user" name="stripMarkdown | RemoveMarkdown heading: heading with @user" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: ## H2 header" name="stripMarkdown | RemoveMarkdown heading: ## H2 header" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: ### H3 header" name="stripMarkdown | RemoveMarkdown heading: ### H3 header" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: #### H4 header" name="stripMarkdown | RemoveMarkdown heading: #### H4 header" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: ##### H5 header" name="stripMarkdown | RemoveMarkdown heading: ##### H5 header" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: ###### H6 header" name="stripMarkdown | RemoveMarkdown heading: ###### H6 header" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: multiline with header and paragraph" name="stripMarkdown | RemoveMarkdown heading: multiline with header and paragraph" time="0.006">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: multiline with header and list items" name="stripMarkdown | RemoveMarkdown heading: multiline with header and list items" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: multiline with header and links" name="stripMarkdown | RemoveMarkdown heading: multiline with header and links" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown list: 1. First ordered list item" name="stripMarkdown | RemoveMarkdown list: 1. First ordered list item" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown list: 2. Another item" name="stripMarkdown | RemoveMarkdown list: 2. Another item" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown list: * Unordered sub-list." name="stripMarkdown | RemoveMarkdown list: * Unordered sub-list." time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown list: - Or minuses" name="stripMarkdown | RemoveMarkdown list: - Or minuses" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown list: + Or pluses" name="stripMarkdown | RemoveMarkdown list: + Or pluses" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown list: multiline" name="stripMarkdown | RemoveMarkdown list: multiline" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown tablerow:)" name="stripMarkdown | RemoveMarkdown tablerow:)" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown table:" name="stripMarkdown | RemoveMarkdown table:" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown strong: Bold with **asterisks** or __underscores__." name="stripMarkdown | RemoveMarkdown strong: Bold with **asterisks** or __underscores__." time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown strong &amp; em: Bold and italics with **asterisks and _underscores_**." name="stripMarkdown | RemoveMarkdown strong &amp; em: Bold and italics with **asterisks and _underscores_**." time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown em: Italics with *asterisks* or _underscores_." name="stripMarkdown | RemoveMarkdown em: Italics with *asterisks* or _underscores_." time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown del: Strikethrough ~~strike this.~~" name="stripMarkdown | RemoveMarkdown del: Strikethrough ~~strike this.~~" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown links: [inline-style link](http://localhost:8065)" name="stripMarkdown | RemoveMarkdown links: [inline-style link](http://localhost:8065)" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown image: ![image link](http://localhost:8065/image)" name="stripMarkdown | RemoveMarkdown image: ![image link](http://localhost:8065/image)" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: plain" name="stripMarkdown | RemoveMarkdown text: plain" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: multiline" name="stripMarkdown | RemoveMarkdown text: multiline" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: &amp;amp; entity" name="stripMarkdown | RemoveMarkdown text: &amp;amp; entity" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: &amp;lt; entity" name="stripMarkdown | RemoveMarkdown text: &amp;lt; entity" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: &amp;gt; entity" name="stripMarkdown | RemoveMarkdown text: &amp;gt; entity" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: &amp;#39; entity" name="stripMarkdown | RemoveMarkdown text: &amp;#39; entity" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: &amp;quot; entity" name="stripMarkdown | RemoveMarkdown text: &amp;quot; entity" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: multiple entities" name="stripMarkdown | RemoveMarkdown text: multiple entities" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: multiple entities" name="stripMarkdown | RemoveMarkdown text: multiple entities" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: multiple entities" name="stripMarkdown | RemoveMarkdown text: multiple entities" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: multiple entities" name="stripMarkdown | RemoveMarkdown text: multiple entities" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: multiple entities" name="stripMarkdown | RemoveMarkdown text: multiple entities" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: empty string" name="stripMarkdown | RemoveMarkdown text: empty string" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: null" name="stripMarkdown | RemoveMarkdown text: null" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: {}" name="stripMarkdown | RemoveMarkdown text: {}" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: []" name="stripMarkdown | RemoveMarkdown text: []" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: node" name="stripMarkdown | RemoveMarkdown text: node" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/DialogIntroductionText" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:39" time="0.339" tests="2">
    <testcase classname="components/DialogIntroductionText should render message with supported values" name="components/DialogIntroductionText should render message with supported values" time="0.011">
    </testcase>
    <testcase classname="components/DialogIntroductionText should not fail on empty value" name="components/DialogIntroductionText should not fail on empty value" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/FileInfoPreview" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:39" time="0.35" tests="2">
    <testcase classname="components/FileInfoPreview should match snapshot, can download files" name="components/FileInfoPreview should match snapshot, can download files" time="0.003">
    </testcase>
    <testcase classname="components/FileInfoPreview should match snapshot, cannot download files" name="components/FileInfoPreview should match snapshot, cannot download files" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="root view actions" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:39" time="0.341" tests="2">
    <testcase classname="root view actions loadMeAndConfig, without user logged in" name="root view actions loadMeAndConfig, without user logged in" time="0.002">
    </testcase>
    <testcase classname="root view actions loadMeAndConfig, with user logged in" name="root view actions loadMeAndConfig, with user logged in" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="selectors/i18n" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:40" time="0.368" tests="6">
    <testcase classname="selectors/i18n getCurrentLocale not logged in" name="selectors/i18n getCurrentLocale not logged in" time="0.002">
    </testcase>
    <testcase classname="selectors/i18n getCurrentLocale not logged in" name="selectors/i18n getCurrentLocale not logged in" time="0.001">
    </testcase>
    <testcase classname="selectors/i18n getCurrentLocale returns default locale when invalid user locale specified" name="selectors/i18n getCurrentLocale returns default locale when invalid user locale specified" time="0.001">
    </testcase>
    <testcase classname="selectors/i18n getTranslations returns loaded translations" name="selectors/i18n getTranslations returns loaded translations" time="0">
    </testcase>
    <testcase classname="selectors/i18n getTranslations returns null for unloaded translations" name="selectors/i18n getTranslations returns null for unloaded translations" time="0.002">
    </testcase>
    <testcase classname="selectors/i18n getTranslations returns English translations for unsupported locale" name="selectors/i18n getTranslations returns English translations for unsupported locale" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="formatText" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:40" time="0.444" tests="29">
    <testcase classname="formatText jumbo emoji should be able to handle up to 3 spaces before the emoji character" name="formatText jumbo emoji should be able to handle up to 3 spaces before the emoji character" time="0.005">
    </testcase>
    <testcase classname="autolinkAtMentions @channel, @all, @here should highlight properly with no leading or trailing content" name="autolinkAtMentions @channel, @all, @here should highlight properly with no leading or trailing content" time="0.001">
    </testcase>
    <testcase classname="autolinkAtMentions @channel, @all, @here should highlight properly with a leading space" name="autolinkAtMentions @channel, @all, @here should highlight properly with a leading space" time="0.007">
    </testcase>
    <testcase classname="autolinkAtMentions @channel, @all, @here should highlight properly with a trailing space" name="autolinkAtMentions @channel, @all, @here should highlight properly with a trailing space" time="0.001">
    </testcase>
    <testcase classname="autolinkAtMentions @channel, @all, @here should highlight properly with a leading period" name="autolinkAtMentions @channel, @all, @here should highlight properly with a leading period" time="0.001">
    </testcase>
    <testcase classname="autolinkAtMentions @channel, @all, @here should highlight properly with a trailing period" name="autolinkAtMentions @channel, @all, @here should highlight properly with a trailing period" time="0.001">
    </testcase>
    <testcase classname="autolinkAtMentions @channel, @all, @here should highlight properly with a leading dash" name="autolinkAtMentions @channel, @all, @here should highlight properly with a leading dash" time="0.001">
    </testcase>
    <testcase classname="autolinkAtMentions @channel, @all, @here should highlight properly with a trailing dash" name="autolinkAtMentions @channel, @all, @here should highlight properly with a trailing dash" time="0.001">
    </testcase>
    <testcase classname="autolinkAtMentions @channel, @all, @here should highlight properly within a typical sentance" name="autolinkAtMentions @channel, @all, @here should highlight properly within a typical sentance" time="0">
    </testcase>
    <testcase classname="autolinkAtMentions @channel, @all, @here should not highlight with a leading underscore" name="autolinkAtMentions @channel, @all, @here should not highlight with a leading underscore" time="0.001">
    </testcase>
    <testcase classname="autolinkAtMentions @channel, @all, @here should not highlight when the last part of a word" name="autolinkAtMentions @channel, @all, @here should not highlight when the last part of a word" time="0.001">
    </testcase>
    <testcase classname="autolinkAtMentions @channel, @all, @here should not highlight when in the middle of a word" name="autolinkAtMentions @channel, @all, @here should not highlight when in the middle of a word" time="0">
    </testcase>
    <testcase classname="highlightSearchTerms hashtags should highlight case-insensitively" name="highlightSearchTerms hashtags should highlight case-insensitively" time="0.001">
    </testcase>
    <testcase classname="handleUnicodeEmoji unicode emoji with image support should get replaced with an image" name="handleUnicodeEmoji unicode emoji with image support should get replaced with an image" time="0.001">
    </testcase>
    <testcase classname="handleUnicodeEmoji unicode emoji without image support should get wrapped in a span tag" name="handleUnicodeEmoji unicode emoji without image support should get wrapped in a span tag" time="0">
    </testcase>
    <testcase classname="linkOnlyMarkdown link without a title" name="linkOnlyMarkdown link without a title" time="0">
    </testcase>
    <testcase classname="linkOnlyMarkdown link with a title" name="linkOnlyMarkdown link with a title" time="0.001">
    </testcase>
    <testcase classname="linkOnlyMarkdown link with header signs to skip" name="linkOnlyMarkdown link with header signs to skip" time="0.001">
    </testcase>
    <testcase classname="parseSearchTerms no input" name="parseSearchTerms no input" time="0">
    </testcase>
    <testcase classname="parseSearchTerms empty input" name="parseSearchTerms empty input" time="0.001">
    </testcase>
    <testcase classname="parseSearchTerms simple word" name="parseSearchTerms simple word" time="0.001">
    </testcase>
    <testcase classname="parseSearchTerms simple phrase" name="parseSearchTerms simple phrase" time="0">
    </testcase>
    <testcase classname="parseSearchTerms empty phrase" name="parseSearchTerms empty phrase" time="0">
    </testcase>
    <testcase classname="parseSearchTerms phrase before word" name="parseSearchTerms phrase before word" time="0.001">
    </testcase>
    <testcase classname="parseSearchTerms word before phrase" name="parseSearchTerms word before phrase" time="0">
    </testcase>
    <testcase classname="parseSearchTerms words and phrases" name="parseSearchTerms words and phrases" time="0.001">
    </testcase>
    <testcase classname="parseSearchTerms with search flags after" name="parseSearchTerms with search flags after" time="0">
    </testcase>
    <testcase classname="parseSearchTerms with search flags before" name="parseSearchTerms with search flags before" time="0.001">
    </testcase>
    <testcase classname="parseSearchTerms with search flags before and after" name="parseSearchTerms with search flags before and after" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/group_settings/GroupSettings" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:41" time="0.327" tests="1">
    <testcase classname="components/admin_console/group_settings/GroupSettings should match snapshot" name="components/admin_console/group_settings/GroupSettings should match snapshot" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="component/AudioVideoPreview" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:41" time="0.333" tests="2">
    <testcase classname="component/AudioVideoPreview should match snapshot without children" name="component/AudioVideoPreview should match snapshot without children" time="0.003">
    </testcase>
    <testcase classname="component/AudioVideoPreview should match snapshot, cannot play" name="component/AudioVideoPreview should match snapshot, cannot play" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="formatWithRenderer | LinkOnlyRenderer" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:41" time="0.406" tests="53">
    <testcase classname="formatWithRenderer | LinkOnlyRenderer emoji: same" name="formatWithRenderer | LinkOnlyRenderer emoji: same" time="0.002">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer at-mention: same" name="formatWithRenderer | LinkOnlyRenderer at-mention: same" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer channel-link: same" name="formatWithRenderer | LinkOnlyRenderer channel-link: same" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer codespan: single backtick" name="formatWithRenderer | LinkOnlyRenderer codespan: single backtick" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer codespan: double backtick" name="formatWithRenderer | LinkOnlyRenderer codespan: double backtick" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer codespan: triple backtick" name="formatWithRenderer | LinkOnlyRenderer codespan: triple backtick" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer codespan: inline code" name="formatWithRenderer | LinkOnlyRenderer codespan: inline code" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer code block: single line code block" name="formatWithRenderer | LinkOnlyRenderer code block: single line code block" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer code block: multiline code block 2" name="formatWithRenderer | LinkOnlyRenderer code block: multiline code block 2" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer code block: language highlighting" name="formatWithRenderer | LinkOnlyRenderer code block: language highlighting" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer blockquote:" name="formatWithRenderer | LinkOnlyRenderer blockquote:" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer blockquote: multiline" name="formatWithRenderer | LinkOnlyRenderer blockquote: multiline" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer heading: # H1 header" name="formatWithRenderer | LinkOnlyRenderer heading: # H1 header" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer heading: heading with @user" name="formatWithRenderer | LinkOnlyRenderer heading: heading with @user" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer heading: ## H2 header" name="formatWithRenderer | LinkOnlyRenderer heading: ## H2 header" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer heading: ### H3 header" name="formatWithRenderer | LinkOnlyRenderer heading: ### H3 header" time="0.006">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer heading: #### H4 header" name="formatWithRenderer | LinkOnlyRenderer heading: #### H4 header" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer heading: ##### H5 header" name="formatWithRenderer | LinkOnlyRenderer heading: ##### H5 header" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer heading: ###### H6 header" name="formatWithRenderer | LinkOnlyRenderer heading: ###### H6 header" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer heading: multiline with header and paragraph" name="formatWithRenderer | LinkOnlyRenderer heading: multiline with header and paragraph" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer heading: multiline with header and list items" name="formatWithRenderer | LinkOnlyRenderer heading: multiline with header and list items" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer heading: multiline with header and links" name="formatWithRenderer | LinkOnlyRenderer heading: multiline with header and links" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer list: 1. First ordered list item" name="formatWithRenderer | LinkOnlyRenderer list: 1. First ordered list item" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer list: 2. Another item" name="formatWithRenderer | LinkOnlyRenderer list: 2. Another item" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer list: * Unordered sub-list." name="formatWithRenderer | LinkOnlyRenderer list: * Unordered sub-list." time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer list: - Or minuses" name="formatWithRenderer | LinkOnlyRenderer list: - Or minuses" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer list: + Or pluses" name="formatWithRenderer | LinkOnlyRenderer list: + Or pluses" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer list: multiline" name="formatWithRenderer | LinkOnlyRenderer list: multiline" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer tablerow:)" name="formatWithRenderer | LinkOnlyRenderer tablerow:)" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer table:" name="formatWithRenderer | LinkOnlyRenderer table:" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer strong: Bold with **asterisks** or __underscores__." name="formatWithRenderer | LinkOnlyRenderer strong: Bold with **asterisks** or __underscores__." time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer strong &amp; em: Bold and italics with **asterisks and _underscores_**." name="formatWithRenderer | LinkOnlyRenderer strong &amp; em: Bold and italics with **asterisks and _underscores_**." time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer em: Italics with *asterisks* or _underscores_." name="formatWithRenderer | LinkOnlyRenderer em: Italics with *asterisks* or _underscores_." time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer del: Strikethrough ~~strike this.~~" name="formatWithRenderer | LinkOnlyRenderer del: Strikethrough ~~strike this.~~" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer links: [inline-style link](http://localhost:8065)" name="formatWithRenderer | LinkOnlyRenderer links: [inline-style link](http://localhost:8065)" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer image: ![image link](http://localhost:8065/image)" name="formatWithRenderer | LinkOnlyRenderer image: ![image link](http://localhost:8065/image)" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer text: plain" name="formatWithRenderer | LinkOnlyRenderer text: plain" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer text: multiline" name="formatWithRenderer | LinkOnlyRenderer text: multiline" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer text: &amp;amp; entity" name="formatWithRenderer | LinkOnlyRenderer text: &amp;amp; entity" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer text: &amp;lt; entity" name="formatWithRenderer | LinkOnlyRenderer text: &amp;lt; entity" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer text: &amp;gt; entity" name="formatWithRenderer | LinkOnlyRenderer text: &amp;gt; entity" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer text: &amp;#39; entity" name="formatWithRenderer | LinkOnlyRenderer text: &amp;#39; entity" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer text: &amp;quot; entity" name="formatWithRenderer | LinkOnlyRenderer text: &amp;quot; entity" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer text: multiple entities" name="formatWithRenderer | LinkOnlyRenderer text: multiple entities" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer text: multiple entities" name="formatWithRenderer | LinkOnlyRenderer text: multiple entities" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer text: multiple entities" name="formatWithRenderer | LinkOnlyRenderer text: multiple entities" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer text: multiple entities" name="formatWithRenderer | LinkOnlyRenderer text: multiple entities" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer text: multiple entities" name="formatWithRenderer | LinkOnlyRenderer text: multiple entities" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer text: empty string" name="formatWithRenderer | LinkOnlyRenderer text: empty string" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer link: link without a scheme" name="formatWithRenderer | LinkOnlyRenderer link: link without a scheme" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer link: link with a scheme" name="formatWithRenderer | LinkOnlyRenderer link: link with a scheme" time="0.001">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer link: link with a title" name="formatWithRenderer | LinkOnlyRenderer link: link with a title" time="0">
    </testcase>
    <testcase classname="formatWithRenderer | LinkOnlyRenderer link: link with curly brackets" name="formatWithRenderer | LinkOnlyRenderer link: link with curly brackets" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/MenuWrapper" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:42" time="0.408" tests="4">
    <testcase classname="components/MenuWrapper should match snapshot" name="components/MenuWrapper should match snapshot" time="0.002">
    </testcase>
    <testcase classname="components/MenuWrapper should match snapshot with state false" name="components/MenuWrapper should match snapshot with state false" time="0.002">
    </testcase>
    <testcase classname="components/MenuWrapper should toggle the state on click" name="components/MenuWrapper should toggle the state on click" time="0.001">
    </testcase>
    <testcase classname="components/MenuWrapper should raise an exception on more or less than 2 children" name="components/MenuWrapper should raise an exception on more or less than 2 children" time="0.044">
    </testcase>
  </testsuite>
  <testsuite name="components/emoji_picker/EmojiPicker" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:42" time="0.411" tests="11">
    <testcase classname="components/emoji_picker/EmojiPicker &apos;smile&apos; should return &apos;smile&apos;" name="components/emoji_picker/EmojiPicker &apos;smile&apos; should return &apos;smile&apos;" time="0.001">
    </testcase>
    <testcase classname="components/emoji_picker/EmojiPicker &apos;SMILE&apos; should return &apos;smile&apos;" name="components/emoji_picker/EmojiPicker &apos;SMILE&apos; should return &apos;smile&apos;" time="0.001">
    </testcase>
    <testcase classname="components/emoji_picker/EmojiPicker &apos;:smile&apos; should return &apos;smile&apos;" name="components/emoji_picker/EmojiPicker &apos;:smile&apos; should return &apos;smile&apos;" time="0.001">
    </testcase>
    <testcase classname="components/emoji_picker/EmojiPicker &apos;:SMILE&apos; should return &apos;smile&apos;" name="components/emoji_picker/EmojiPicker &apos;:SMILE&apos; should return &apos;smile&apos;" time="0">
    </testcase>
    <testcase classname="components/emoji_picker/EmojiPicker &apos;smile:&apos; should return &apos;smile&apos;" name="components/emoji_picker/EmojiPicker &apos;smile:&apos; should return &apos;smile&apos;" time="0.001">
    </testcase>
    <testcase classname="components/emoji_picker/EmojiPicker &apos;SMILE:&apos; should return &apos;smile&apos;" name="components/emoji_picker/EmojiPicker &apos;SMILE:&apos; should return &apos;smile&apos;" time="0.001">
    </testcase>
    <testcase classname="components/emoji_picker/EmojiPicker &apos;:smile:&apos; should return &apos;smile&apos;" name="components/emoji_picker/EmojiPicker &apos;:smile:&apos; should return &apos;smile&apos;" time="0.006">
    </testcase>
    <testcase classname="components/emoji_picker/EmojiPicker &apos;:SMILE:&apos; should return &apos;smile&apos;" name="components/emoji_picker/EmojiPicker &apos;:SMILE:&apos; should return &apos;smile&apos;" time="0.001">
    </testcase>
    <testcase classname="components/emoji_picker/EmojiPicker Recent category should not exist if there are no recent emojis" name="components/emoji_picker/EmojiPicker Recent category should not exist if there are no recent emojis" time="0.056">
    </testcase>
    <testcase classname="components/emoji_picker/EmojiPicker Recent category should exist if there are recent emojis" name="components/emoji_picker/EmojiPicker Recent category should exist if there are recent emojis" time="0.044">
    </testcase>
    <testcase classname="components/emoji_picker/EmojiPicker Update should have for all categories" name="components/emoji_picker/EmojiPicker Update should have for all categories" time="0.137">
    </testcase>
  </testsuite>
  <testsuite name="components/delete_post_modal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:43" time="0.241" tests="9">
    <testcase classname="components/delete_post_modal should match snapshot for delete_post_modal with 0 comments" name="components/delete_post_modal should match snapshot for delete_post_modal with 0 comments" time="0.003">
    </testcase>
    <testcase classname="components/delete_post_modal should match snapshot for delete_post_modal with 1 comment" name="components/delete_post_modal should match snapshot for delete_post_modal with 1 comment" time="0.002">
    </testcase>
    <testcase classname="components/delete_post_modal should match snapshot for post with 1 commentCount and is not rootPost" name="components/delete_post_modal should match snapshot for post with 1 commentCount and is not rootPost" time="0.002">
    </testcase>
    <testcase classname="components/delete_post_modal should focus delete button on enter" name="components/delete_post_modal should focus delete button on enter" time="0.001">
    </testcase>
    <testcase classname="components/delete_post_modal should match state when onHide is called" name="components/delete_post_modal should match state when onHide is called" time="0.002">
    </testcase>
    <testcase classname="components/delete_post_modal should match state when the cancel button is clicked" name="components/delete_post_modal should match state when the cancel button is clicked" time="0.002">
    </testcase>
    <testcase classname="components/delete_post_modal should have called actions.deleteAndRemovePost when handleDelete is called" name="components/delete_post_modal should have called actions.deleteAndRemovePost when handleDelete is called" time="0.002">
    </testcase>
    <testcase classname="components/delete_post_modal should call browserHistory.push on handleDelete with post.id === focusedPostId &amp;&amp; channelName" name="components/delete_post_modal should call browserHistory.push on handleDelete with post.id === focusedPostId &amp;&amp; channelName" time="0.001">
    </testcase>
    <testcase classname="components/delete_post_modal should have called props.onHide when Modal.onExited is called" name="components/delete_post_modal should have called props.onHide when Modal.onExited is called" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="TextFormatting.searchHighlighting" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:43" time="0.375" tests="18">
    <testcase classname="TextFormatting.searchHighlighting no search highlighting" name="TextFormatting.searchHighlighting no search highlighting" time="0.004">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting" name="TextFormatting.searchHighlighting search term highlighting" time="0.002">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting with quoted phrase" name="TextFormatting.searchHighlighting search term highlighting with quoted phrase" time="0">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting with empty quoted phrase" name="TextFormatting.searchHighlighting search term highlighting with empty quoted phrase" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting with flags" name="TextFormatting.searchHighlighting search term highlighting with flags" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting with at mentions" name="TextFormatting.searchHighlighting search term highlighting with at mentions" time="0">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting in a code span" name="TextFormatting.searchHighlighting search term highlighting in a code span" time="0">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting in a code block" name="TextFormatting.searchHighlighting search term highlighting in a code block" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting in link text" name="TextFormatting.searchHighlighting search term highlighting in link text" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting in link url" name="TextFormatting.searchHighlighting search term highlighting in link url" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search match highlighting" name="TextFormatting.searchHighlighting search match highlighting" time="0">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search match highlighting with quoted phrase" name="TextFormatting.searchHighlighting search match highlighting with quoted phrase" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search match highlighting with at mentions" name="TextFormatting.searchHighlighting search match highlighting with at mentions" time="0">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search match highlighting in a code span" name="TextFormatting.searchHighlighting search match highlighting in a code span" time="0">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search match highlighting in a code block" name="TextFormatting.searchHighlighting search match highlighting in a code block" time="0.007">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search match highlighting in link text" name="TextFormatting.searchHighlighting search match highlighting in link text" time="0">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search match highlighting in link url" name="TextFormatting.searchHighlighting search match highlighting in link url" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting wildcard highlighting" name="TextFormatting.searchHighlighting wildcard highlighting" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Notifications.showNotification" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:43" time="0.228" tests="8">
    <testcase classname="Notifications.showNotification should throw an exception if Notification is not defined on window" name="Notifications.showNotification should throw an exception if Notification is not defined on window" time="0.017">
    </testcase>
    <testcase classname="Notifications.showNotification should throw an exception if Notification.requestPermission is not defined" name="Notifications.showNotification should throw an exception if Notification.requestPermission is not defined" time="0.019">
    </testcase>
    <testcase classname="Notifications.showNotification should throw an exception if Notification.requestPermission is not a function" name="Notifications.showNotification should throw an exception if Notification.requestPermission is not a function" time="0.013">
    </testcase>
    <testcase classname="Notifications.showNotification should request permissions, promise style, if not previously requested, handling rejection" name="Notifications.showNotification should request permissions, promise style, if not previously requested, handling rejection" time="0.014">
    </testcase>
    <testcase classname="Notifications.showNotification should request permissions, callback style, if not previously requested, handling rejection" name="Notifications.showNotification should request permissions, callback style, if not previously requested, handling rejection" time="0.013">
    </testcase>
    <testcase classname="Notifications.showNotification should request permissions, promise style, if not previously requested, handling success" name="Notifications.showNotification should request permissions, promise style, if not previously requested, handling success" time="0.016">
    </testcase>
    <testcase classname="Notifications.showNotification should request permissions, callback style, if not previously requested, handling success" name="Notifications.showNotification should request permissions, callback style, if not previously requested, handling success" time="0.013">
    </testcase>
    <testcase classname="Notifications.showNotification should do nothing if permissions previously requested but not granted" name="Notifications.showNotification should do nothing if permissions previously requested but not granted" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/group_settings/group_details/GroupUsers" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:43" time="0.19" tests="9">
    <testcase classname="components/admin_console/group_settings/group_details/GroupUsers should match snapshot, on loading without data" name="components/admin_console/group_settings/group_details/GroupUsers should match snapshot, on loading without data" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupUsers should match snapshot, on loading with data" name="components/admin_console/group_settings/group_details/GroupUsers should match snapshot, on loading with data" time="0.005">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupUsers should match snapshot, loaded without data" name="components/admin_console/group_settings/group_details/GroupUsers should match snapshot, loaded without data" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupUsers should match snapshot, loaded with data" name="components/admin_console/group_settings/group_details/GroupUsers should match snapshot, loaded with data" time="0.005">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupUsers should match snapshot, loaded with one page" name="components/admin_console/group_settings/group_details/GroupUsers should match snapshot, loaded with one page" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupUsers should match snapshot, loaded with multiple pages" name="components/admin_console/group_settings/group_details/GroupUsers should match snapshot, loaded with multiple pages" time="0.01">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupUsers should get the members on mount" name="components/admin_console/group_settings/group_details/GroupUsers should get the members on mount" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupUsers should change the page and get the members on previous click" name="components/admin_console/group_settings/group_details/GroupUsers should change the page and get the members on previous click" time="0.014">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupUsers should change the page and get the members on next click" name="components/admin_console/group_settings/group_details/GroupUsers should change the page and get the members on next click" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="components/EmoticonProvider" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:44" time="0.2" tests="9">
    <testcase classname="components/EmoticonProvider should not suggest emojis when partial name &lt; MIN_EMOTICON_LENGTH" name="components/EmoticonProvider should not suggest emojis when partial name &lt; MIN_EMOTICON_LENGTH" time="0.002">
    </testcase>
    <testcase classname="components/EmoticonProvider should suggest emojis when partial name &gt;= MIN_EMOTICON_LENGTH" name="components/EmoticonProvider should suggest emojis when partial name &gt;= MIN_EMOTICON_LENGTH" time="0.006">
    </testcase>
    <testcase classname="components/EmoticonProvider should order suggested emojis" name="components/EmoticonProvider should order suggested emojis" time="0.003">
    </testcase>
    <testcase classname="components/EmoticonProvider should not suggest emojis if no match" name="components/EmoticonProvider should not suggest emojis if no match" time="0.007">
    </testcase>
    <testcase classname="components/EmoticonProvider should exclude blackisted emojis from suggested emojis" name="components/EmoticonProvider should exclude blackisted emojis from suggested emojis" time="0.001">
    </testcase>
    <testcase classname="components/EmoticonProvider should suggest emojis ordered by recently used first (system only)" name="components/EmoticonProvider should suggest emojis ordered by recently used first (system only)" time="0.005">
    </testcase>
    <testcase classname="components/EmoticonProvider should suggest emojis ordered by recently used first (custom only)" name="components/EmoticonProvider should suggest emojis ordered by recently used first (custom only)" time="0.002">
    </testcase>
    <testcase classname="components/EmoticonProvider should suggest emojis ordered by recently used first (custom and system)" name="components/EmoticonProvider should suggest emojis ordered by recently used first (custom and system)" time="0.002">
    </testcase>
    <testcase classname="components/EmoticonProvider should suggest emojis ordered by recently used first with partial name match" name="components/EmoticonProvider should suggest emojis ordered by recently used first with partial name match" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TextFormatting.AtMentions" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:44" time="0.343" tests="4">
    <testcase classname="TextFormatting.AtMentions At mentions" name="TextFormatting.AtMentions At mentions" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.AtMentions Not at mentions" name="TextFormatting.AtMentions Not at mentions" time="0">
    </testcase>
    <testcase classname="TextFormatting.AtMentions Highlighted at mentions" name="TextFormatting.AtMentions Highlighted at mentions" time="0.002">
    </testcase>
    <testcase classname="TextFormatting.AtMentions Mix highlight at mentions" name="TextFormatting.AtMentions Mix highlight at mentions" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Actions.Storage" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:44" time="0.192" tests="9">
    <testcase classname="Actions.Storage setItem" name="Actions.Storage setItem" time="0.004">
    </testcase>
    <testcase classname="Actions.Storage removeItem" name="Actions.Storage removeItem" time="0.003">
    </testcase>
    <testcase classname="Actions.Storage setGlobalItem" name="Actions.Storage setGlobalItem" time="0.003">
    </testcase>
    <testcase classname="Actions.Storage removeGlobalItem" name="Actions.Storage removeGlobalItem" time="0.002">
    </testcase>
    <testcase classname="Actions.Storage actionOnGlobalItemsWithPrefix" name="Actions.Storage actionOnGlobalItemsWithPrefix" time="0.003">
    </testcase>
    <testcase classname="Actions.Storage actionOnItemsWithPrefix" name="Actions.Storage actionOnItemsWithPrefix" time="0.003">
    </testcase>
    <testcase classname="Actions.Storage clear" name="Actions.Storage clear" time="0.003">
    </testcase>
    <testcase classname="Actions.Storage rehydrate" name="Actions.Storage rehydrate" time="0.002">
    </testcase>
    <testcase classname="Actions.Storage rehydrate-with-timestamp" name="Actions.Storage rehydrate-with-timestamp" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/user_settings/display/UserSettingsDisplay" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:44" time="0.172" tests="4">
    <testcase classname="components/user_settings/display/UserSettingsDisplay UNSAFE_componentWillMount() should have called getOAuthAppInfo" name="components/user_settings/display/UserSettingsDisplay UNSAFE_componentWillMount() should have called getOAuthAppInfo" time="0.003">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay UNSAFE_componentWillMount() should have updated state.app" name="components/user_settings/display/UserSettingsDisplay UNSAFE_componentWillMount() should have updated state.app" time="0.001">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay handleAllow() should have called allowOAuth2" name="components/user_settings/display/UserSettingsDisplay handleAllow() should have called allowOAuth2" time="0.001">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay handleAllow() should updated state.error" name="components/user_settings/display/UserSettingsDisplay handleAllow() should updated state.error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Selectors.Lhs" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:45" time="0.103" tests="2">
    <testcase classname="Selectors.Lhs should return the open state of the sidebar menu when open is true" name="Selectors.Lhs should return the open state of the sidebar menu when open is true" time="0">
    </testcase>
    <testcase classname="Selectors.Lhs should return the open state of the sidebar menu when open is false" name="Selectors.Lhs should return the open state of the sidebar menu when open is false" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="actions/integration_actions" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:45" time="0.193" tests="12">
    <testcase classname="actions/integration_actions loadProfilesForIncomingHooks load profiles for hooks including user we already have" name="actions/integration_actions loadProfilesForIncomingHooks load profiles for hooks including user we already have" time="0.001">
    </testcase>
    <testcase classname="actions/integration_actions loadProfilesForIncomingHooks load profiles for hooks including only users we don&apos;t have" name="actions/integration_actions loadProfilesForIncomingHooks load profiles for hooks including only users we don&apos;t have" time="0.001">
    </testcase>
    <testcase classname="actions/integration_actions loadProfilesForIncomingHooks load profiles for empty hooks" name="actions/integration_actions loadProfilesForIncomingHooks load profiles for empty hooks" time="0">
    </testcase>
    <testcase classname="actions/integration_actions loadProfilesForOutgoingHooks load profiles for hooks including user we already have" name="actions/integration_actions loadProfilesForOutgoingHooks load profiles for hooks including user we already have" time="0.001">
    </testcase>
    <testcase classname="actions/integration_actions loadProfilesForOutgoingHooks load profiles for hooks including only users we don&apos;t have" name="actions/integration_actions loadProfilesForOutgoingHooks load profiles for hooks including only users we don&apos;t have" time="0.001">
    </testcase>
    <testcase classname="actions/integration_actions loadProfilesForOutgoingHooks load profiles for empty hooks" name="actions/integration_actions loadProfilesForOutgoingHooks load profiles for empty hooks" time="0">
    </testcase>
    <testcase classname="actions/integration_actions loadProfilesForCommands load profiles for commands including user we already have" name="actions/integration_actions loadProfilesForCommands load profiles for commands including user we already have" time="0.001">
    </testcase>
    <testcase classname="actions/integration_actions loadProfilesForCommands load profiles for commands including only users we don&apos;t have" name="actions/integration_actions loadProfilesForCommands load profiles for commands including only users we don&apos;t have" time="0">
    </testcase>
    <testcase classname="actions/integration_actions loadProfilesForCommands load profiles for empty commands" name="actions/integration_actions loadProfilesForCommands load profiles for empty commands" time="0.001">
    </testcase>
    <testcase classname="actions/integration_actions loadProfilesForOAuthApps load profiles for apps including user we already have" name="actions/integration_actions loadProfilesForOAuthApps load profiles for apps including user we already have" time="0.007">
    </testcase>
    <testcase classname="actions/integration_actions loadProfilesForOAuthApps load profiles for apps including only users we don&apos;t have" name="actions/integration_actions loadProfilesForOAuthApps load profiles for apps including only users we don&apos;t have" time="0.001">
    </testcase>
    <testcase classname="actions/integration_actions loadProfilesForOAuthApps load profiles for empty apps" name="actions/integration_actions loadProfilesForOAuthApps load profiles for empty apps" time="0">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/channel/ChannelSettings" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:45" time="0.133" tests="1">
    <testcase classname="admin_console/team_channel_settings/channel/ChannelSettings should match snapshot" name="admin_console/team_channel_settings/channel/ChannelSettings should match snapshot" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/SearchChannelWithPermissionsProvider" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:45" time="0.154" tests="5">
    <testcase classname="components/SearchChannelWithPermissionsProvider should show public channels if user has public channel manage permission" name="components/SearchChannelWithPermissionsProvider should show public channels if user has public channel manage permission" time="0.003">
    </testcase>
    <testcase classname="components/SearchChannelWithPermissionsProvider should show private channels if user has private channel manage permission" name="components/SearchChannelWithPermissionsProvider should show private channels if user has private channel manage permission" time="0.001">
    </testcase>
    <testcase classname="components/SearchChannelWithPermissionsProvider should show both public and private channels if user has public and private channel manage permission" name="components/SearchChannelWithPermissionsProvider should show both public and private channels if user has public and private channel manage permission" time="0.001">
    </testcase>
    <testcase classname="components/SearchChannelWithPermissionsProvider should show nothing if the user does not have permissions to manage channels" name="components/SearchChannelWithPermissionsProvider should show nothing if the user does not have permissions to manage channels" time="0">
    </testcase>
    <testcase classname="components/SearchChannelWithPermissionsProvider should show nothing if the search does not match" name="components/SearchChannelWithPermissionsProvider should show nothing if the search does not match" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="PolicyRolesAdapter" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:45" time="0.154" tests="10">
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping unknown value throws an exception" name="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping unknown value throws an exception" time="0.005">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping ignores unknown keys" name="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping ignores unknown keys" time="0">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping mock data setup" name="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping mock data setup" time="0.001">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping enableTeamCreation true" name="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping enableTeamCreation true" time="0.001">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping enableTeamCreation false" name="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping enableTeamCreation false" time="0.001">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping enableOnlyAdminIntegrations true" name="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping enableOnlyAdminIntegrations true" time="0.001">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping enableOnlyAdminIntegrations false" name="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping enableOnlyAdminIntegrations false" time="0.001">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping it only returns the updated roles" name="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping it only returns the updated roles" time="0.001">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.mappingValueFromRoles enableTeamCreation returns the expected policy value for a enableTeamCreation policy" name="PolicyRolesAdapter PolicyRolesAdapter.mappingValueFromRoles enableTeamCreation returns the expected policy value for a enableTeamCreation policy" time="0.002">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.mappingValueFromRoles enableOnlyAdminIntegrations returns the expected policy value for a enableOnlyAdminIntegrations policy" name="PolicyRolesAdapter PolicyRolesAdapter.mappingValueFromRoles enableOnlyAdminIntegrations returns the expected policy value for a enableOnlyAdminIntegrations policy" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/permissions_gates" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:45" time="0.157" tests="10">
    <testcase classname="components/permissions_gates ChannelPermissionGate should match snapshot when user have permission" name="components/permissions_gates ChannelPermissionGate should match snapshot when user have permission" time="0.01">
    </testcase>
    <testcase classname="components/permissions_gates ChannelPermissionGate should match snapshot when user have at least on of the permissions" name="components/permissions_gates ChannelPermissionGate should match snapshot when user have at least on of the permissions" time="0.002">
    </testcase>
    <testcase classname="components/permissions_gates ChannelPermissionGate should match snapshot when user have permission and use invert" name="components/permissions_gates ChannelPermissionGate should match snapshot when user have permission and use invert" time="0.001">
    </testcase>
    <testcase classname="components/permissions_gates ChannelPermissionGate should match snapshot when user not have permission and use invert" name="components/permissions_gates ChannelPermissionGate should match snapshot when user not have permission and use invert" time="0.002">
    </testcase>
    <testcase classname="components/permissions_gates ChannelPermissionGate should match snapshot when user haven&apos;t permission" name="components/permissions_gates ChannelPermissionGate should match snapshot when user haven&apos;t permission" time="0.001">
    </testcase>
    <testcase classname="components/permissions_gates ChannelPermissionGate should match snapshot when the channel doesn&apos;t exists" name="components/permissions_gates ChannelPermissionGate should match snapshot when the channel doesn&apos;t exists" time="0.002">
    </testcase>
    <testcase classname="components/permissions_gates ChannelPermissionGate should match snapshot when user have permission team wide" name="components/permissions_gates ChannelPermissionGate should match snapshot when user have permission team wide" time="0.001">
    </testcase>
    <testcase classname="components/permissions_gates ChannelPermissionGate should match snapshot when user have permission system wide" name="components/permissions_gates ChannelPermissionGate should match snapshot when user have permission system wide" time="0.002">
    </testcase>
    <testcase classname="components/permissions_gates ChannelPermissionGate should match snapshot when user have permissions in DM and GM" name="components/permissions_gates ChannelPermissionGate should match snapshot when user have permissions in DM and GM" time="0.002">
    </testcase>
    <testcase classname="components/permissions_gates ChannelPermissionGate should match snapshot when user does not have permissions in DM and GM" name="components/permissions_gates ChannelPermissionGate should match snapshot when user does not have permissions in DM and GM" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="actions/status_actions" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:45" time="0.173" tests="9">
    <testcase classname="actions/status_actions loadStatusesForChannelAndSidebar load statuses with posts in channel and user in sidebar" name="actions/status_actions loadStatusesForChannelAndSidebar load statuses with posts in channel and user in sidebar" time="0.003">
    </testcase>
    <testcase classname="actions/status_actions loadStatusesForChannelAndSidebar load statuses with empty channel and user in sidebar" name="actions/status_actions loadStatusesForChannelAndSidebar load statuses with empty channel and user in sidebar" time="0">
    </testcase>
    <testcase classname="actions/status_actions loadStatusesForChannelAndSidebar load statuses with empty channel and no users in sidebar" name="actions/status_actions loadStatusesForChannelAndSidebar load statuses with empty channel and no users in sidebar" time="0.001">
    </testcase>
    <testcase classname="actions/status_actions loadStatusesForProfilesList load statuses for users array" name="actions/status_actions loadStatusesForProfilesList load statuses for users array" time="0.001">
    </testcase>
    <testcase classname="actions/status_actions loadStatusesForProfilesList load statuses for empty users array" name="actions/status_actions loadStatusesForProfilesList load statuses for empty users array" time="0.001">
    </testcase>
    <testcase classname="actions/status_actions loadStatusesForProfilesList load statuses for null users array" name="actions/status_actions loadStatusesForProfilesList load statuses for null users array" time="0">
    </testcase>
    <testcase classname="actions/status_actions loadStatusesForProfilesMap load statuses for users map" name="actions/status_actions loadStatusesForProfilesMap load statuses for users map" time="0.001">
    </testcase>
    <testcase classname="actions/status_actions loadStatusesForProfilesMap load statuses for empty users map" name="actions/status_actions loadStatusesForProfilesMap load statuses for empty users map" time="0.001">
    </testcase>
    <testcase classname="actions/status_actions loadStatusesForProfilesMap load statuses for null users map" name="actions/status_actions loadStatusesForProfilesMap load statuses for null users map" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/system_users/list/selectors" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:46" time="0.155" tests="13">
    <testcase classname="components/admin_console/system_users/list/selectors should return no users when loading" name="components/admin_console/system_users/list/selectors should return no users when loading" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/system_users/list/selectors should search by term over all profiles returning users users" name="components/admin_console/system_users/list/selectors should search by term over all profiles returning users users" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/system_users/list/selectors should search by term over all profiles falling back to fetching user by id and the user is found" name="components/admin_console/system_users/list/selectors should search by term over all profiles falling back to fetching user by id and the user is found" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/system_users/list/selectors should search by term over all profiles falling back to fetching user by id and the user is not found" name="components/admin_console/system_users/list/selectors should search by term over all profiles falling back to fetching user by id and the user is not found" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/system_users/list/selectors should search by term and team id returning users users found in team" name="components/admin_console/system_users/list/selectors should search by term and team id returning users users found in team" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/system_users/list/selectors should search by term and team id falling back to fetching user by id and the user is found" name="components/admin_console/system_users/list/selectors should search by term and team id falling back to fetching user by id and the user is found" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/system_users/list/selectors should search by term and team id falling back to fetching user by id and the user is not found" name="components/admin_console/system_users/list/selectors should search by term and team id falling back to fetching user by id and the user is not found" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/system_users/list/selectors should return all profiles" name="components/admin_console/system_users/list/selectors should return all profiles" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/system_users/list/selectors should return profiles without a team" name="components/admin_console/system_users/list/selectors should return profiles without a team" time="0">
    </testcase>
    <testcase classname="components/admin_console/system_users/list/selectors should return profiles for the given team" name="components/admin_console/system_users/list/selectors should return profiles for the given team" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/system_users/list/selectors filters all profiles with system admin" name="components/admin_console/system_users/list/selectors filters all profiles with system admin" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/system_users/list/selectors filters inactive profiles without a team" name="components/admin_console/system_users/list/selectors filters inactive profiles without a team" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/system_users/list/selectors filters system admin profiles for the given team" name="components/admin_console/system_users/list/selectors filters system admin profiles for the given team" time="0">
    </testcase>
  </testsuite>
  <testsuite name="runMessageWillBePostedHooks" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:46" time="0.247" tests="12">
    <testcase classname="runMessageWillBePostedHooks should do nothing when no hooks are registered" name="runMessageWillBePostedHooks should do nothing when no hooks are registered" time="0.002">
    </testcase>
    <testcase classname="runMessageWillBePostedHooks should pass the post through every hook" name="runMessageWillBePostedHooks should pass the post through every hook" time="0.001">
    </testcase>
    <testcase classname="runMessageWillBePostedHooks should return an error when a hook rejects the post" name="runMessageWillBePostedHooks should return an error when a hook rejects the post" time="0.001">
    </testcase>
    <testcase classname="runMessageWillBePostedHooks should pass the result of each hook to the next" name="runMessageWillBePostedHooks should pass the result of each hook to the next" time="0.002">
    </testcase>
    <testcase classname="runMessageWillBePostedHooks should wait for async hooks" name="runMessageWillBePostedHooks should wait for async hooks" time="0.001">
    </testcase>
    <testcase classname="runMessageWillBePostedHooks should assume post is unchanged if a hook returns undefined" name="runMessageWillBePostedHooks should assume post is unchanged if a hook returns undefined" time="0">
    </testcase>
    <testcase classname="runSlashCommandWillBePostedHooks should do nothing when no hooks are registered" name="runSlashCommandWillBePostedHooks should do nothing when no hooks are registered" time="0">
    </testcase>
    <testcase classname="runSlashCommandWillBePostedHooks should pass the command through every hook" name="runSlashCommandWillBePostedHooks should pass the command through every hook" time="0.002">
    </testcase>
    <testcase classname="runSlashCommandWillBePostedHooks should return an error when a hook rejects the command" name="runSlashCommandWillBePostedHooks should return an error when a hook rejects the command" time="0">
    </testcase>
    <testcase classname="runSlashCommandWillBePostedHooks should pass the result of each hook to the next" name="runSlashCommandWillBePostedHooks should pass the result of each hook to the next" time="0.002">
    </testcase>
    <testcase classname="runSlashCommandWillBePostedHooks should wait for async hooks" name="runSlashCommandWillBePostedHooks should wait for async hooks" time="0.001">
    </testcase>
    <testcase classname="runSlashCommandWillBePostedHooks should assume command is unchanged if a hook returns undefined" name="runSlashCommandWillBePostedHooks should assume command is unchanged if a hook returns undefined" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/AnnouncementBar" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:46" time="0.191" tests="5">
    <testcase classname="components/AnnouncementBar should match snapshot, bar showing" name="components/AnnouncementBar should match snapshot, bar showing" time="0.003">
    </testcase>
    <testcase classname="components/AnnouncementBar should match snapshot, bar not showing" name="components/AnnouncementBar should match snapshot, bar not showing" time="0.002">
    </testcase>
    <testcase classname="components/AnnouncementBar should match snapshot, bar showing, no dismissal" name="components/AnnouncementBar should match snapshot, bar showing, no dismissal" time="0.001">
    </testcase>
    <testcase classname="components/AnnouncementBar should match snapshot, props change" name="components/AnnouncementBar should match snapshot, props change" time="0.003">
    </testcase>
    <testcase classname="components/AnnouncementBar should match snapshot, dismissal" name="components/AnnouncementBar should match snapshot, dismissal" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/ModalController" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:46" time="0.173" tests="2">
    <testcase classname="components/ModalController component should match snapshot without any modals" name="components/ModalController component should match snapshot without any modals" time="0.013">
    </testcase>
    <testcase classname="components/ModalController test model should be open" name="components/ModalController test model should be open" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Reducers.RHS" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:46" time="0.16" tests="19">
    <testcase classname="Reducers.RHS Initial state" name="Reducers.RHS Initial state" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should match RHS state to pin" name="Reducers.RHS should match RHS state to pin" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should match RHS state to plugin id" name="Reducers.RHS should match RHS state to plugin id" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should wipe selectedPostId on UPDATE_RHS_STATE" name="Reducers.RHS should wipe selectedPostId on UPDATE_RHS_STATE" time="0">
    </testcase>
    <testcase classname="Reducers.RHS should wipe selectedPostCardId on UPDATE_RHS_STATE" name="Reducers.RHS should wipe selectedPostCardId on UPDATE_RHS_STATE" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should match isSearchingFlaggedPost state to true" name="Reducers.RHS should match isSearchingFlaggedPost state to true" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should match isSearchingFlaggedPost state to false" name="Reducers.RHS should match isSearchingFlaggedPost state to false" time="0">
    </testcase>
    <testcase classname="Reducers.RHS should match searchTerms state" name="Reducers.RHS should match searchTerms state" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should match select_post state" name="Reducers.RHS should match select_post state" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should match select_post_card state" name="Reducers.RHS should match select_post_card state" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should wipe rhsState on SELECT_POST" name="Reducers.RHS should wipe rhsState on SELECT_POST" time="0">
    </testcase>
    <testcase classname="Reducers.RHS should wipe rhsState on SELECT_POST_CARD" name="Reducers.RHS should wipe rhsState on SELECT_POST_CARD" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should open menu, closing sidebar on TOGGLE_RHS_MENU" name="Reducers.RHS should open menu, closing sidebar on TOGGLE_RHS_MENU" time="0">
    </testcase>
    <testcase classname="Reducers.RHS should close menu on TOGGLE_RHS_MENU" name="Reducers.RHS should close menu on TOGGLE_RHS_MENU" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should open menu, closing sidebar on OPEN_RHS_MENU" name="Reducers.RHS should open menu, closing sidebar on OPEN_RHS_MENU" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should close menu on CLOSE_RHS_MENU" name="Reducers.RHS should close menu on CLOSE_RHS_MENU" time="0">
    </testcase>
    <testcase classname="Reducers.RHS should close menu and sidebar on TOGGLE_LHS" name="Reducers.RHS should close menu and sidebar on TOGGLE_LHS" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should close menu and sidebar on OPEN_LHS" name="Reducers.RHS should close menu and sidebar on OPEN_LHS" time="0">
    </testcase>
    <testcase classname="Reducers.RHS should close menu and sidebar on SELECT_TEAM" name="Reducers.RHS should close menu and sidebar on SELECT_TEAM" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/settings/RadioSetting" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:47" time="0.104" tests="2">
    <testcase classname="components/widgets/settings/RadioSetting render component with required props" name="components/widgets/settings/RadioSetting render component with required props" time="0.003">
    </testcase>
    <testcase classname="components/widgets/settings/RadioSetting onChange" name="components/widgets/settings/RadioSetting onChange" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/permissions_gates" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:47" time="0.194" tests="8">
    <testcase classname="components/permissions_gates TeamPermissionGate should match snapshot when user have permission" name="components/permissions_gates TeamPermissionGate should match snapshot when user have permission" time="0.014">
    </testcase>
    <testcase classname="components/permissions_gates TeamPermissionGate should match snapshot when user have the permission in other team" name="components/permissions_gates TeamPermissionGate should match snapshot when user have the permission in other team" time="0.002">
    </testcase>
    <testcase classname="components/permissions_gates TeamPermissionGate should match snapshot when user have at least one of the permissions" name="components/permissions_gates TeamPermissionGate should match snapshot when user have at least one of the permissions" time="0.001">
    </testcase>
    <testcase classname="components/permissions_gates TeamPermissionGate should match snapshot when user have permission and use invert" name="components/permissions_gates TeamPermissionGate should match snapshot when user have permission and use invert" time="0.002">
    </testcase>
    <testcase classname="components/permissions_gates TeamPermissionGate should match snapshot when user not have permission and use invert" name="components/permissions_gates TeamPermissionGate should match snapshot when user not have permission and use invert" time="0.001">
    </testcase>
    <testcase classname="components/permissions_gates TeamPermissionGate should match snapshot when user have the permission in other team and use invert" name="components/permissions_gates TeamPermissionGate should match snapshot when user have the permission in other team and use invert" time="0.002">
    </testcase>
    <testcase classname="components/permissions_gates TeamPermissionGate should match snapshot when user doesn&apos;t have permission" name="components/permissions_gates TeamPermissionGate should match snapshot when user doesn&apos;t have permission" time="0.001">
    </testcase>
    <testcase classname="components/permissions_gates TeamPermissionGate should match snapshot when user have permission system wide" name="components/permissions_gates TeamPermissionGate should match snapshot when user have permission system wide" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/LeavePrivateChannelModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:47" time="0.145" tests="4">
    <testcase classname="components/LeavePrivateChannelModal should match snapshot, init" name="components/LeavePrivateChannelModal should match snapshot, init" time="0.004">
    </testcase>
    <testcase classname="components/LeavePrivateChannelModal should show and hide the modal dialog" name="components/LeavePrivateChannelModal should show and hide the modal dialog" time="0.001">
    </testcase>
    <testcase classname="components/LeavePrivateChannelModal should fail to leave channel" name="components/LeavePrivateChannelModal should fail to leave channel" time="0.002">
    </testcase>
    <testcase classname="components/LeavePrivateChannelModal should leave channel when pressing the enter key browse to default channel" name="components/LeavePrivateChannelModal should leave channel when pressing the enter key browse to default channel" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/delete_channel_modal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:47" time="0.149" tests="4">
    <testcase classname="components/delete_channel_modal should match snapshot for delete_channel_modal" name="components/delete_channel_modal should match snapshot for delete_channel_modal" time="0.003">
    </testcase>
    <testcase classname="components/delete_channel_modal should match state when onHide is called" name="components/delete_channel_modal should match state when onHide is called" time="0.001">
    </testcase>
    <testcase classname="components/delete_channel_modal should have called actions.deleteChannel when handleDelete is called" name="components/delete_channel_modal should have called actions.deleteChannel when handleDelete is called" time="0.002">
    </testcase>
    <testcase classname="components/delete_channel_modal should have called props.onHide when Modal.onExited is called" name="components/delete_channel_modal should have called props.onHide when Modal.onExited is called" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="actions/views/login" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:47" time="0.184" tests="6">
    <testcase classname="actions/views/login login should return successful when login is successful" name="actions/views/login login should return successful when login is successful" time="0.004">
    </testcase>
    <testcase classname="actions/views/login login should return successful even if MFA is required" name="actions/views/login login should return successful even if MFA is required" time="0.002">
    </testcase>
    <testcase classname="actions/views/login login should return error when when login fails" name="actions/views/login login should return error when when login fails" time="0.003">
    </testcase>
    <testcase classname="actions/views/login loginById should return successful when login is successful" name="actions/views/login loginById should return successful when login is successful" time="0.002">
    </testcase>
    <testcase classname="actions/views/login loginById should return successful even if MFA is required" name="actions/views/login loginById should return successful even if MFA is required" time="0.002">
    </testcase>
    <testcase classname="actions/views/login loginById should return error when when login fails" name="actions/views/login loginById should return error when when login fails" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkCloseButton" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:47" time="0.14" tests="7">
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkCloseButton should be null, on close button without handleClose" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkCloseButton should be null, on close button without handleClose" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkCloseButton should be null, on close button with badge" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkCloseButton should be null, on close button with badge" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkCloseButton should match snapshot, on close button with public channel" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkCloseButton should match snapshot, on close button with public channel" time="0.002">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkCloseButton should match snapshot, on close button with private channel" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkCloseButton should match snapshot, on close button with private channel" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkCloseButton should match snapshot, on close button with direct message" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkCloseButton should match snapshot, on close button with direct message" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkCloseButton should match snapshot, on close button with group message" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkCloseButton should match snapshot, on close button with group message" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkCloseButton should call handleClose, on button clicked" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkCloseButton should call handleClose, on button clicked" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/permissions_gates" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:48" time="0.134" tests="7">
    <testcase classname="components/permissions_gates TeamPermissionGate should match snapshot when user have permission" name="components/permissions_gates TeamPermissionGate should match snapshot when user have permission" time="0.009">
    </testcase>
    <testcase classname="components/permissions_gates TeamPermissionGate should match snapshot when user have at least on of the permissions" name="components/permissions_gates TeamPermissionGate should match snapshot when user have at least on of the permissions" time="0.002">
    </testcase>
    <testcase classname="components/permissions_gates TeamPermissionGate should match snapshot when user have permission and use invert" name="components/permissions_gates TeamPermissionGate should match snapshot when user have permission and use invert" time="0.001">
    </testcase>
    <testcase classname="components/permissions_gates TeamPermissionGate should match snapshot when user not have permission and use invert" name="components/permissions_gates TeamPermissionGate should match snapshot when user not have permission and use invert" time="0.002">
    </testcase>
    <testcase classname="components/permissions_gates TeamPermissionGate should match snapshot when user haven&apos;t permission" name="components/permissions_gates TeamPermissionGate should match snapshot when user haven&apos;t permission" time="0.001">
    </testcase>
    <testcase classname="components/permissions_gates TeamPermissionGate should match snapshot when the team doesn&apos;t exists" name="components/permissions_gates TeamPermissionGate should match snapshot when the team doesn&apos;t exists" time="0.002">
    </testcase>
    <testcase classname="components/permissions_gates TeamPermissionGate should match snapshot when user have permission system wide" name="components/permissions_gates TeamPermissionGate should match snapshot when user have permission system wide" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/VersionBar" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:48" time="0.139" tests="1">
    <testcase classname="components/VersionBar should match snapshot - bar rendered after server version change" name="components/VersionBar should match snapshot - bar rendered after server version change" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/badges/GuestBadge" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:48" time="0.102" tests="1">
    <testcase classname="components/widgets/badges/GuestBadge should match the snapshot" name="components/widgets/badges/GuestBadge should match the snapshot" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/group_settings/group_details/GroupTeamsAndChannels" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:48" time="0.147" tests="6">
    <testcase classname="components/admin_console/group_settings/group_details/GroupTeamsAndChannels should match snapshot, with teams, with channels and loading" name="components/admin_console/group_settings/group_details/GroupTeamsAndChannels should match snapshot, with teams, with channels and loading" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupTeamsAndChannels should match snapshot, with teams, with channels and loaded" name="components/admin_console/group_settings/group_details/GroupTeamsAndChannels should match snapshot, with teams, with channels and loaded" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupTeamsAndChannels should match snapshot, without teams, without channels and loading" name="components/admin_console/group_settings/group_details/GroupTeamsAndChannels should match snapshot, without teams, without channels and loading" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupTeamsAndChannels should match snapshot, without teams, without channels and loaded" name="components/admin_console/group_settings/group_details/GroupTeamsAndChannels should match snapshot, without teams, without channels and loaded" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupTeamsAndChannels should toggle the collapse for an element" name="components/admin_console/group_settings/group_details/GroupTeamsAndChannels should toggle the collapse for an element" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupTeamsAndChannels should remove the item based on the item type" name="components/admin_console/group_settings/group_details/GroupTeamsAndChannels should remove the item based on the item type" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="getNearestPoint" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:48" time="0.1" tests="1">
    <testcase classname="getNearestPoint should return nearest point" name="getNearestPoint should return nearest point" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/ChannelHeaderMobile/UnmuteChannelButton" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:48" time="0.115" tests="2">
    <testcase classname="components/ChannelHeaderMobile/UnmuteChannelButton should match snapshot" name="components/ChannelHeaderMobile/UnmuteChannelButton should match snapshot" time="0.002">
    </testcase>
    <testcase classname="components/ChannelHeaderMobile/UnmuteChannelButton should runs updateChannelNotifyProps on click" name="components/ChannelHeaderMobile/UnmuteChannelButton should runs updateChannelNotifyProps on click" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/activity_log_modal/MoreInfo" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:48" time="0.111" tests="2">
    <testcase classname="components/activity_log_modal/MoreInfo should match snapshot extra info toggled off" name="components/activity_log_modal/MoreInfo should match snapshot extra info toggled off" time="0.002">
    </testcase>
    <testcase classname="components/activity_log_modal/MoreInfo should match snapshot, extra info toggled on" name="components/activity_log_modal/MoreInfo should match snapshot, extra info toggled on" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/ListModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:49" time="0.149" tests="6">
    <testcase classname="components/ListModal should match snapshot" name="components/ListModal should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/ListModal should update numPerPage" name="components/ListModal should update numPerPage" time="0.002">
    </testcase>
    <testcase classname="components/ListModal should match snapshot with title bar button" name="components/ListModal should match snapshot with title bar button" time="0.002">
    </testcase>
    <testcase classname="components/ListModal should have called onHide when handleExit is called" name="components/ListModal should have called onHide when handleExit is called" time="0.002">
    </testcase>
    <testcase classname="components/ListModal paging loads new items" name="components/ListModal paging loads new items" time="0.002">
    </testcase>
    <testcase classname="components/ListModal search input" name="components/ListModal search input" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:49" time="0.145" tests="8">
    <testcase classname="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow should match snapshot, for public-team" name="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow should match snapshot, for public-team" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow should match snapshot, for private-team" name="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow should match snapshot, for private-team" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow should match snapshot, for public-channel" name="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow should match snapshot, for public-channel" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow should match snapshot, for private-channel" name="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow should match snapshot, for private-channel" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow should match snapshot, when has children" name="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow should match snapshot, when has children" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow should match snapshot, when has children and is collapsed" name="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow should match snapshot, when has children and is collapsed" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow should call onToggleCollapse on caret click" name="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow should call onToggleCollapse on caret click" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow should call onRemoveItem on remove link click" name="components/admin_console/group_settings/group_details/GroupTeamsAndChannelsRow should call onRemoveItem on remove link click" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/channel_notifications_modal/NotificationSection" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:49" time="0.132" tests="5">
    <testcase classname="components/channel_notifications_modal/NotificationSection should match snapshot, on global DEFAULT" name="components/channel_notifications_modal/NotificationSection should match snapshot, on global DEFAULT" time="0.002">
    </testcase>
    <testcase classname="components/channel_notifications_modal/NotificationSection should match snapshot, on MENTION" name="components/channel_notifications_modal/NotificationSection should match snapshot, on MENTION" time="0.001">
    </testcase>
    <testcase classname="components/channel_notifications_modal/NotificationSection should match snapshot, on DESKTOP/PUSH &amp; ALL" name="components/channel_notifications_modal/NotificationSection should match snapshot, on DESKTOP/PUSH &amp; ALL" time="0.001">
    </testcase>
    <testcase classname="components/channel_notifications_modal/NotificationSection should match snapshot, on MARK_UNREAD &amp; ALL" name="components/channel_notifications_modal/NotificationSection should match snapshot, on MARK_UNREAD &amp; ALL" time="0.001">
    </testcase>
    <testcase classname="components/channel_notifications_modal/NotificationSection should match snapshot, on NONE" name="components/channel_notifications_modal/NotificationSection should match snapshot, on NONE" time="0">
    </testcase>
  </testsuite>
  <testsuite name="plugins/MobileChannelHeaderPlug" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:49" time="0.15" tests="7">
    <testcase classname="plugins/MobileChannelHeaderPlug should match snapshot with no extended component" name="plugins/MobileChannelHeaderPlug should match snapshot with no extended component" time="0.008">
    </testcase>
    <testcase classname="plugins/MobileChannelHeaderPlug should match snapshot with one extended component" name="plugins/MobileChannelHeaderPlug should match snapshot with one extended component" time="0.01">
    </testcase>
    <testcase classname="plugins/MobileChannelHeaderPlug should match snapshot with two extended components" name="plugins/MobileChannelHeaderPlug should match snapshot with two extended components" time="0.002">
    </testcase>
    <testcase classname="plugins/MobileChannelHeaderPlug should match snapshot with no extended component, in dropdown" name="plugins/MobileChannelHeaderPlug should match snapshot with no extended component, in dropdown" time="0.002">
    </testcase>
    <testcase classname="plugins/MobileChannelHeaderPlug should match snapshot with one extended component, in dropdown" name="plugins/MobileChannelHeaderPlug should match snapshot with one extended component, in dropdown" time="0.002">
    </testcase>
    <testcase classname="plugins/MobileChannelHeaderPlug should match snapshot with two extended components, in dropdown" name="plugins/MobileChannelHeaderPlug should match snapshot with two extended components, in dropdown" time="0.003">
    </testcase>
    <testcase classname="plugins/MobileChannelHeaderPlug should call plugin.action on fireAction" name="plugins/MobileChannelHeaderPlug should call plugin.action on fireAction" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/ShouldVerifyEmail" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:49" time="0.151" tests="2">
    <testcase classname="components/ShouldVerifyEmail should match snapshot" name="components/ShouldVerifyEmail should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/ShouldVerifyEmail should call the sendVerificationEmail() action on click the button" name="components/ShouldVerifyEmail should call the sendVerificationEmail() action on click the button" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkIcon" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:49" time="0.127" tests="7">
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkIcon should match snapshot, on direct message" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkIcon should match snapshot, on direct message" time="0.002">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkIcon should match snapshot, on archive direct message" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkIcon should match snapshot, on archive direct message" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkIcon should match snapshot, on group direct message" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkIcon should match snapshot, on group direct message" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkIcon should match snapshot, on private channel" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkIcon should match snapshot, on private channel" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkIcon should match snapshot, on public channel" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkIcon should match snapshot, on public channel" time="0">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkIcon should match snapshot, on archived public channel" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkIcon should match snapshot, on archived public channel" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkIcon should match snapshot, with draft in public channel" name="component/sidebar/sidebar_channel_button_or_link/SidebarChannelButtonOrLinkIcon should match snapshot, with draft in public channel" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/view_image/ImagePreview" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:49" time="0.117" tests="4">
    <testcase classname="components/view_image/ImagePreview should match snapshot, without preview" name="components/view_image/ImagePreview should match snapshot, without preview" time="0.001">
    </testcase>
    <testcase classname="components/view_image/ImagePreview should match snapshot, with preview" name="components/view_image/ImagePreview should match snapshot, with preview" time="0.001">
    </testcase>
    <testcase classname="components/view_image/ImagePreview should match snapshot, without preview, cannot download" name="components/view_image/ImagePreview should match snapshot, without preview, cannot download" time="0.001">
    </testcase>
    <testcase classname="components/view_image/ImagePreview should match snapshot, with preview, cannot download" name="components/view_image/ImagePreview should match snapshot, with preview, cannot download" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="modals view actions" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:50" time="0.14" tests="2">
    <testcase classname="modals view actions MODAL_OPEN" name="modals view actions MODAL_OPEN" time="0.001">
    </testcase>
    <testcase classname="modals view actions MODAL_CLOSE" name="modals view actions MODAL_CLOSE" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="utils.dragster" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:50" time="0.116" tests="6">
    <testcase classname="utils.dragster should dispatch dragenter event" name="utils.dragster should dispatch dragenter event" time="0.001">
    </testcase>
    <testcase classname="utils.dragster should dispatch dragleave event" name="utils.dragster should dispatch dragleave event" time="0.001">
    </testcase>
    <testcase classname="utils.dragster should dispatch dragover event" name="utils.dragster should dispatch dragover event" time="0">
    </testcase>
    <testcase classname="utils.dragster should dispatch drop event" name="utils.dragster should dispatch drop event" time="0.001">
    </testcase>
    <testcase classname="utils.dragster should dispatch dragenter event again" name="utils.dragster should dispatch dragenter event again" time="0.001">
    </testcase>
    <testcase classname="utils.dragster should dispatch dragenter event once if dispatched 2 times" name="utils.dragster should dispatch dragenter event once if dispatched 2 times" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/team/TeamModes" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:50" time="0.103" tests="1">
    <testcase classname="admin_console/team_channel_settings/team/TeamModes should match snapshot" name="admin_console/team_channel_settings/team/TeamModes should match snapshot" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/ColorInput" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:50" time="0.212" tests="6">
    <testcase classname="components/ColorInput should match snapshot, init" name="components/ColorInput should match snapshot, init" time="0.003">
    </testcase>
    <testcase classname="components/ColorInput should match snapshot, opened" name="components/ColorInput should match snapshot, opened" time="0.003">
    </testcase>
    <testcase classname="components/ColorInput should match snapshot, toggle picker" name="components/ColorInput should match snapshot, toggle picker" time="0.003">
    </testcase>
    <testcase classname="components/ColorInput should match snapshot, click on picker" name="components/ColorInput should match snapshot, click on picker" time="0.002">
    </testcase>
    <testcase classname="components/ColorInput should have match state on togglePicker" name="components/ColorInput should have match state on togglePicker" time="0.003">
    </testcase>
    <testcase classname="components/ColorInput should have called onChange prop" name="components/ColorInput should have called onChange prop" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/admin_console/AdminPanelWithLink" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:50" time="0.119" tests="2">
    <testcase classname="components/widgets/admin_console/AdminPanelWithLink should match snapshot" name="components/widgets/admin_console/AdminPanelWithLink should match snapshot" time="0.002">
    </testcase>
    <testcase classname="components/widgets/admin_console/AdminPanelWithLink should match snapshot when disabled" name="components/widgets/admin_console/AdminPanelWithLink should match snapshot when disabled" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/admin_console/AdminPanelTogglable" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:50" time="0.111" tests="2">
    <testcase classname="components/widgets/admin_console/AdminPanelTogglable should match snapshot" name="components/widgets/admin_console/AdminPanelTogglable should match snapshot" time="0.002">
    </testcase>
    <testcase classname="components/widgets/admin_console/AdminPanelTogglable should match snapshot closed" name="components/widgets/admin_console/AdminPanelTogglable should match snapshot closed" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/UnreadChannelIndicator" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:50" time="0.113" tests="5">
    <testcase classname="components/UnreadChannelIndicator should match snapshot" name="components/UnreadChannelIndicator should match snapshot" time="0.002">
    </testcase>
    <testcase classname="components/UnreadChannelIndicator should match snapshot when show is set" name="components/UnreadChannelIndicator should match snapshot when show is set" time="0.001">
    </testcase>
    <testcase classname="components/UnreadChannelIndicator should match snapshot when content is text" name="components/UnreadChannelIndicator should match snapshot when content is text" time="0.001">
    </testcase>
    <testcase classname="components/UnreadChannelIndicator should match snapshot when content is an element" name="components/UnreadChannelIndicator should match snapshot when content is an element" time="0.001">
    </testcase>
    <testcase classname="components/UnreadChannelIndicator should have called onClick" name="components/UnreadChannelIndicator should have called onClick" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Reducers.Storage" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:50" time="0.133" tests="8">
    <testcase classname="Reducers.Storage Storage.SET_ITEM" name="Reducers.Storage Storage.SET_ITEM" time="0">
    </testcase>
    <testcase classname="Reducers.Storage Storage.SET_GLOBAL_ITEM" name="Reducers.Storage Storage.SET_GLOBAL_ITEM" time="0.001">
    </testcase>
    <testcase classname="Reducers.Storage Storage.REMOVE_ITEM" name="Reducers.Storage Storage.REMOVE_ITEM" time="0">
    </testcase>
    <testcase classname="Reducers.Storage Storage.REMOVE_GLOBAL_ITEM" name="Reducers.Storage Storage.REMOVE_GLOBAL_ITEM" time="0">
    </testcase>
    <testcase classname="Reducers.Storage Storage.CLEAR" name="Reducers.Storage Storage.CLEAR" time="0.001">
    </testcase>
    <testcase classname="Reducers.Storage Storage.ACTION_ON_ITEMS_WITH_PREFIX" name="Reducers.Storage Storage.ACTION_ON_ITEMS_WITH_PREFIX" time="0">
    </testcase>
    <testcase classname="Reducers.Storage Storage.ACTION_ON_GLOBAL_ITEMS_WITH_PREFIX" name="Reducers.Storage Storage.ACTION_ON_GLOBAL_ITEMS_WITH_PREFIX" time="0.001">
    </testcase>
    <testcase classname="Reducers.Storage Storage.STORAGE_REHYDRATE" name="Reducers.Storage Storage.STORAGE_REHYDRATE" time="0">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/channel/ChannelList" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:51" time="0.12" tests="2">
    <testcase classname="admin_console/team_channel_settings/channel/ChannelList should match snapshot" name="admin_console/team_channel_settings/channel/ChannelList should match snapshot" time="0.002">
    </testcase>
    <testcase classname="admin_console/team_channel_settings/channel/ChannelList should match snapshot with paging" name="admin_console/team_channel_settings/channel/ChannelList should match snapshot with paging" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="makeCountUnreadsBelow" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:51" time="0.122" tests="3">
    <testcase classname="makeCountUnreadsBelow should only count new posts" name="makeCountUnreadsBelow should only count new posts" time="0.001">
    </testcase>
    <testcase classname="makeCountUnreadsBelow should not count deleted posts" name="makeCountUnreadsBelow should not count deleted posts" time="0.001">
    </testcase>
    <testcase classname="makeCountUnreadsBelow should not count posts made by the current user" name="makeCountUnreadsBelow should not count posts made by the current user" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Utils.URL" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:51" time="0.108" tests="6">
    <testcase classname="Utils.URL getRelativeChannelURL" name="Utils.URL getRelativeChannelURL" time="0.001">
    </testcase>
    <testcase classname="Utils.URL getSiteURL origin" name="Utils.URL getSiteURL origin" time="0.001">
    </testcase>
    <testcase classname="Utils.URL getSiteURL origin, trailing slash" name="Utils.URL getSiteURL origin, trailing slash" time="0">
    </testcase>
    <testcase classname="Utils.URL getSiteURL origin, with basename" name="Utils.URL getSiteURL origin, with basename" time="0.001">
    </testcase>
    <testcase classname="Utils.URL getSiteURL no origin" name="Utils.URL getSiteURL no origin" time="0">
    </testcase>
    <testcase classname="Utils.URL getSiteURL no origin, with basename" name="Utils.URL getSiteURL no origin, with basename" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Reducers.Browser" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:51" time="0.118" tests="3">
    <testcase classname="Reducers.Browser Initial state" name="Reducers.Browser Initial state" time="0.001">
    </testcase>
    <testcase classname="Reducers.Browser should lose focus on BROWSER_CHANGE_FOCUS" name="Reducers.Browser should lose focus on BROWSER_CHANGE_FOCUS" time="0">
    </testcase>
    <testcase classname="Reducers.Browser should gain focus on BROWSER_CHANGE_FOCUS" name="Reducers.Browser should gain focus on BROWSER_CHANGE_FOCUS" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/channel_notifications_modal/ExtraInfo" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:51" time="0.127" tests="3">
    <testcase classname="components/channel_notifications_modal/ExtraInfo should match snapshot, on DESKTOP" name="components/channel_notifications_modal/ExtraInfo should match snapshot, on DESKTOP" time="0.002">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ExtraInfo should match snapshot, on PUSH" name="components/channel_notifications_modal/ExtraInfo should match snapshot, on PUSH" time="0.001">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ExtraInfo should match snapshot, on MARK_UNREAD" name="components/channel_notifications_modal/ExtraInfo should match snapshot, on MARK_UNREAD" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/admin_console/AdminPanel" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:51" time="0.112" tests="3">
    <testcase classname="components/widgets/admin_console/AdminPanel should match snapshot" name="components/widgets/admin_console/AdminPanel should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/widgets/admin_console/AdminPanel should match snapshot with button" name="components/widgets/admin_console/AdminPanel should match snapshot with button" time="0.001">
    </testcase>
    <testcase classname="components/widgets/admin_console/AdminPanel should match snapshot with onHeaderClick" name="components/widgets/admin_console/AdminPanel should match snapshot with onHeaderClick" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/HeaderFooterTemplate" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:51" time="0.171" tests="9">
    <testcase classname="components/HeaderFooterTemplate should match snapshot without children" name="components/HeaderFooterTemplate should match snapshot without children" time="0.002">
    </testcase>
    <testcase classname="components/HeaderFooterTemplate should match snapshot with children" name="components/HeaderFooterTemplate should match snapshot with children" time="0.002">
    </testcase>
    <testcase classname="components/HeaderFooterTemplate should match snapshot with help link" name="components/HeaderFooterTemplate should match snapshot with help link" time="0.002">
    </testcase>
    <testcase classname="components/HeaderFooterTemplate should match snapshot with term of service link" name="components/HeaderFooterTemplate should match snapshot with term of service link" time="0.002">
    </testcase>
    <testcase classname="components/HeaderFooterTemplate should match snapshot with privacy policy link" name="components/HeaderFooterTemplate should match snapshot with privacy policy link" time="0.002">
    </testcase>
    <testcase classname="components/HeaderFooterTemplate should match snapshot with about link" name="components/HeaderFooterTemplate should match snapshot with about link" time="0.001">
    </testcase>
    <testcase classname="components/HeaderFooterTemplate should match snapshot with all links" name="components/HeaderFooterTemplate should match snapshot with all links" time="0.002">
    </testcase>
    <testcase classname="components/HeaderFooterTemplate should set classes on body and #root on mount" name="components/HeaderFooterTemplate should set classes on body and #root on mount" time="0.002">
    </testcase>
    <testcase classname="components/HeaderFooterTemplate should unset classes on body and #root on unmount" name="components/HeaderFooterTemplate should unset classes on body and #root on unmount" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/channel_notifications_modal/ExtraInfo" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:52" time="0.125" tests="3">
    <testcase classname="components/channel_notifications_modal/ExtraInfo should match snapshot, on DESKTOP" name="components/channel_notifications_modal/ExtraInfo should match snapshot, on DESKTOP" time="0.002">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ExtraInfo should match snapshot, on PUSH" name="components/channel_notifications_modal/ExtraInfo should match snapshot, on PUSH" time="0.001">
    </testcase>
    <testcase classname="components/channel_notifications_modal/ExtraInfo should match snapshot, on MARK_UNREAD" name="components/channel_notifications_modal/ExtraInfo should match snapshot, on MARK_UNREAD" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/channel/ChannelRow" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:52" time="0.115" tests="1">
    <testcase classname="admin_console/team_channel_settings/channel/ChannelRow should match snapshot" name="admin_console/team_channel_settings/channel/ChannelRow should match snapshot" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/CommentedOnFilesMessage" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:52" time="0.113" tests="3">
    <testcase classname="components/CommentedOnFilesMessage Snapshot when no files" name="components/CommentedOnFilesMessage Snapshot when no files" time="0.002">
    </testcase>
    <testcase classname="components/CommentedOnFilesMessage should match snapshot for single file" name="components/CommentedOnFilesMessage should match snapshot for single file" time="0.001">
    </testcase>
    <testcase classname="components/CommentedOnFilesMessage should match snapshot for multiple files" name="components/CommentedOnFilesMessage should match snapshot for multiple files" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="/components/common/SiteNameAndDescription" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:52" time="0.115" tests="2">
    <testcase classname="/components/common/SiteNameAndDescription should match snapshot, default" name="/components/common/SiteNameAndDescription should match snapshot, default" time="0.005">
    </testcase>
    <testcase classname="/components/common/SiteNameAndDescription should match snapshot, with custom site name and description" name="/components/common/SiteNameAndDescription should match snapshot, with custom site name and description" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="SchemaText" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:52" time="0.121" tests="6">
    <testcase classname="SchemaText should render plain text correctly" name="SchemaText should render plain text correctly" time="0.002">
    </testcase>
    <testcase classname="SchemaText should render markdown text correctly" name="SchemaText should render markdown text correctly" time="0.003">
    </testcase>
    <testcase classname="SchemaText should render translated text correctly" name="SchemaText should render translated text correctly" time="0.001">
    </testcase>
    <testcase classname="SchemaText should render translated markdown text correctly" name="SchemaText should render translated markdown text correctly" time="0.001">
    </testcase>
    <testcase classname="SchemaText should open most links in the current window like FormattedMarkdownMessage" name="SchemaText should open most links in the current window like FormattedMarkdownMessage" time="0.001">
    </testcase>
    <testcase classname="SchemaText should support explicit external links like FormattedMarkdownMessage" name="SchemaText should support explicit external links like FormattedMarkdownMessage" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CommandSuggestion" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:52" time="0.14" tests="1">
    <testcase classname="CommandSuggestion should match snapshot" name="CommandSuggestion should match snapshot" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="filter_users" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:52" time="0.119" tests="8">
    <testcase classname="filter_users getUserOptionsFromFilter should return empty options in case of empty filter" name="filter_users getUserOptionsFromFilter should return empty options in case of empty filter" time="0.001">
    </testcase>
    <testcase classname="filter_users getUserOptionsFromFilter should return empty options in case of undefined" name="filter_users getUserOptionsFromFilter should return empty options in case of undefined" time="0.001">
    </testcase>
    <testcase classname="filter_users getUserOptionsFromFilter should return role options in case of system_admin" name="filter_users getUserOptionsFromFilter should return role options in case of system_admin" time="0.001">
    </testcase>
    <testcase classname="filter_users getUserOptionsFromFilter should return inactive option in case of inactive" name="filter_users getUserOptionsFromFilter should return inactive option in case of inactive" time="0">
    </testcase>
    <testcase classname="filter_users searchUserOptionsFromFilter should return empty options in case of empty filter" name="filter_users searchUserOptionsFromFilter should return empty options in case of empty filter" time="0.001">
    </testcase>
    <testcase classname="filter_users searchUserOptionsFromFilter should return empty options in case of undefined" name="filter_users searchUserOptionsFromFilter should return empty options in case of undefined" time="0">
    </testcase>
    <testcase classname="filter_users searchUserOptionsFromFilter should return role options in case of system_admin" name="filter_users searchUserOptionsFromFilter should return role options in case of system_admin" time="0.001">
    </testcase>
    <testcase classname="filter_users searchUserOptionsFromFilter should return allow_inactive option in case of inactive" name="filter_users searchUserOptionsFromFilter should return allow_inactive option in case of inactive" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/FlagPostSearchHint" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:52" time="0.115" tests="2">
    <testcase classname="components/FlagPostSearchHint should match snapshot, with data retention" name="components/FlagPostSearchHint should match snapshot, with data retention" time="0.002">
    </testcase>
    <testcase classname="components/FlagPostSearchHint should match snapshot, without data retention" name="components/FlagPostSearchHint should match snapshot, without data retention" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/group/GroupRow" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:53" time="0.106" tests="1">
    <testcase classname="admin_console/team_channel_settings/group/GroupRow should match snapshot" name="admin_console/team_channel_settings/group/GroupRow should match snapshot" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="utils/server_version/equalServerVersions" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:53" time="0.136" tests="20">
    <testcase classname="utils/server_version/equalServerVersions should consider two empty versions as equal" name="utils/server_version/equalServerVersions should consider two empty versions as equal" time="0.001">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should consider different strings without components as equal" name="utils/server_version/equalServerVersions should consider different strings without components as equal" time="0">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should consider different malformed versions as equal ignoring the last two components" name="utils/server_version/equalServerVersions should consider different malformed versions as equal ignoring the last two components" time="0.001">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should consider an empty version different from a non-empty one" name="utils/server_version/equalServerVersions should consider an empty version different from a non-empty one" time="0">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should consider the same versions equal" name="utils/server_version/equalServerVersions should consider the same versions equal" time="0.001">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should consider different release versions unequal" name="utils/server_version/equalServerVersions should consider different release versions unequal" time="0">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should consider different build numbers unequal" name="utils/server_version/equalServerVersions should consider different build numbers unequal" time="0.001">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should ignore different config hashes" name="utils/server_version/equalServerVersions should ignore different config hashes" time="0">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should ignore different licensed statuses" name="utils/server_version/equalServerVersions should ignore different licensed statuses" time="0.001">
    </testcase>
    <testcase classname="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider two empty versions as equal" name="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider two empty versions as equal" time="0.001">
    </testcase>
    <testcase classname="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider different strings without components as equal" name="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider different strings without components as equal" time="0">
    </testcase>
    <testcase classname="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider different malformed versions normally (not greater than case)" name="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider different malformed versions normally (not greater than case)" time="0.001">
    </testcase>
    <testcase classname="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider different malformed versions normally (greater than case)" name="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider different malformed versions normally (greater than case)" time="0">
    </testcase>
    <testcase classname="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider an empty version as not greater than or equal" name="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider an empty version as not greater than or equal" time="0.001">
    </testcase>
    <testcase classname="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider the same versions equal" name="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider the same versions equal" time="0">
    </testcase>
    <testcase classname="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider different release versions (not greater than case)" name="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider different release versions (not greater than case)" time="0.001">
    </testcase>
    <testcase classname="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider different release versions (greater than case)" name="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider different release versions (greater than case)" time="0">
    </testcase>
    <testcase classname="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider different build numbers unequal" name="utils/server_version/isServerVersionGreaterThanOrEqualTo should consider different build numbers unequal" time="0.001">
    </testcase>
    <testcase classname="utils/server_version/isServerVersionGreaterThanOrEqualTo should ignore different config hashes" name="utils/server_version/isServerVersionGreaterThanOrEqualTo should ignore different config hashes" time="0">
    </testcase>
    <testcase classname="utils/server_version/isServerVersionGreaterThanOrEqualTo should ignore different licensed statuses" name="utils/server_version/isServerVersionGreaterThanOrEqualTo should ignore different licensed statuses" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Emoji" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:53" time="0.11" tests="3">
    <testcase classname="Emoji compareEmojis should sort an array of emojis alphabetically" name="Emoji compareEmojis should sort an array of emojis alphabetically" time="0.001">
    </testcase>
    <testcase classname="Emoji compareEmojis should have partiall matched emoji first" name="Emoji compareEmojis should have partiall matched emoji first" time="0.001">
    </testcase>
    <testcase classname="Emoji compareEmojis should be able to sort on aliases" name="Emoji compareEmojis should be able to sort on aliases" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/MenuItemToggleModalRedux" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:53" time="0.12" tests="1">
    <testcase classname="components/MenuItemToggleModalRedux should match snapshot" name="components/MenuItemToggleModalRedux should match snapshot" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/SpinnerButton" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:53" time="0.117" tests="4">
    <testcase classname="components/SpinnerButton should match snapshot with required props" name="components/SpinnerButton should match snapshot with required props" time="0.002">
    </testcase>
    <testcase classname="components/SpinnerButton should match snapshot with spinning" name="components/SpinnerButton should match snapshot with spinning" time="0.001">
    </testcase>
    <testcase classname="components/SpinnerButton should match snapshot with children" name="components/SpinnerButton should match snapshot with children" time="0.001">
    </testcase>
    <testcase classname="components/SpinnerButton should handle onClick" name="components/SpinnerButton should handle onClick" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="components/emoji_picker/components/EmojiPickerHeader" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:53" time="0.11" tests="2">
    <testcase classname="components/emoji_picker/components/EmojiPickerHeader should match snapshot, " name="components/emoji_picker/components/EmojiPickerHeader should match snapshot, " time="0.002">
    </testcase>
    <testcase classname="components/emoji_picker/components/EmojiPickerHeader handleEmojiPickerClose, should have called props.handleEmojiPickerClose" name="components/emoji_picker/components/EmojiPickerHeader handleEmojiPickerClose, should have called props.handleEmojiPickerClose" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="lhs view actions" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:53" time="0.118" tests="3">
    <testcase classname="lhs view actions toggle dispatches the right action" name="lhs view actions toggle dispatches the right action" time="0.001">
    </testcase>
    <testcase classname="lhs view actions open dispatches the right action" name="lhs view actions open dispatches the right action" time="0.001">
    </testcase>
    <testcase classname="lhs view actions close dispatches the right action" name="lhs view actions close dispatches the right action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Paste.getTable" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:53" time="0.117" tests="5">
    <testcase classname="Paste.getTable returns false without html in the clipboard" name="Paste.getTable returns false without html in the clipboard" time="0.001">
    </testcase>
    <testcase classname="Paste.getTable returns false without table in the clipboard" name="Paste.getTable returns false without table in the clipboard" time="0.001">
    </testcase>
    <testcase classname="Paste.getTable returns table from valid clipboard data" name="Paste.getTable returns table from valid clipboard data" time="0.001">
    </testcase>
    <testcase classname="Paste.formatMarkdownTableMessage returns a markdown table when valid html table provided" name="Paste.formatMarkdownTableMessage returns a markdown table when valid html table provided" time="0.001">
    </testcase>
    <testcase classname="Paste.formatMarkdownTableMessage returns a markdown table under a message when one is provided" name="Paste.formatMarkdownTableMessage returns a markdown table under a message when one is provided" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/user_settings/display/ColorChooser" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:54" time="0.1" tests="1">
    <testcase classname="components/user_settings/display/ColorChooser should match, init" name="components/user_settings/display/ColorChooser should match, init" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/new_message_separator" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:54" time="0.1" tests="1">
    <testcase classname="components/post_view/new_message_separator should render new_message_separator" name="components/post_view/new_message_separator should render new_message_separator" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Reducers.Search" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:54" time="0.115" tests="2">
    <testcase classname="Reducers.Search Initial state" name="Reducers.Search Initial state" time="0.001">
    </testcase>
    <testcase classname="Reducers.Search should trim the search term for SET_MODAL_SEARCH" name="Reducers.Search should trim the search term for SET_MODAL_SEARCH" time="0">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/channel/ChannelModes" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:54" time="0.181" tests="1">
    <testcase classname="admin_console/team_channel_settings/channel/ChannelModes should match snapshot" name="admin_console/team_channel_settings/channel/ChannelModes should match snapshot" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Actions.Team" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:54" time="0.134" tests="4">
    <testcase classname="Actions.Team switchTeam" name="Actions.Team switchTeam" time="0.001">
    </testcase>
    <testcase classname="Actions.Team addUsersToTeam" name="Actions.Team addUsersToTeam" time="0.001">
    </testcase>
    <testcase classname="Actions.Team removeUserFromTeamAndGetStats" name="Actions.Team removeUserFromTeamAndGetStats" time="0.001">
    </testcase>
    <testcase classname="Actions.Team addUserToTeam" name="Actions.Team addUserToTeam" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:54" time="0.097" tests="1">
    <testcase classname=" Should return placement position for overlay based on bounds, space required and innerHeight" name=" Should return placement position for overlay based on bounds, space required and innerHeight" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/group_settings/group_details/GroupProfile" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:54" time="0.102" tests="1">
    <testcase classname="components/admin_console/group_settings/group_details/GroupProfile should match snapshot" name="components/admin_console/group_settings/group_details/GroupProfile should match snapshot" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/FailedPostOptions" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:54" time="0.116" tests="3">
    <testcase classname="components/post_view/FailedPostOptions should match snapshot" name="components/post_view/FailedPostOptions should match snapshot" time="0.002">
    </testcase>
    <testcase classname="components/post_view/FailedPostOptions should create post on retry" name="components/post_view/FailedPostOptions should create post on retry" time="0.003">
    </testcase>
    <testcase classname="components/post_view/FailedPostOptions should remove post on cancel" name="components/post_view/FailedPostOptions should remove post on cancel" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/NoResultSearchHint" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:55" time="0.105" tests="2">
    <testcase classname="components/NoResultSearchHint should match snapshot, with data retention" name="components/NoResultSearchHint should match snapshot, with data retention" time="0.002">
    </testcase>
    <testcase classname="components/NoResultSearchHint should match snapshot, without data retention" name="components/NoResultSearchHint should match snapshot, without data retention" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/ColorSetting" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:55" time="0.126" tests="4">
    <testcase classname="components/ColorSetting should match snapshot, all" name="components/ColorSetting should match snapshot, all" time="0.002">
    </testcase>
    <testcase classname="components/ColorSetting should match snapshot, no help text" name="components/ColorSetting should match snapshot, no help text" time="0.001">
    </testcase>
    <testcase classname="components/ColorSetting should match snapshot, disabled" name="components/ColorSetting should match snapshot, disabled" time="0.004">
    </testcase>
    <testcase classname="components/ColorSetting should match snapshot, clicked on color setting" name="components/ColorSetting should match snapshot, clicked on color setting" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Reducers.LHS" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:55" time="0.129" tests="8">
    <testcase classname="Reducers.LHS Initial state" name="Reducers.LHS Initial state" time="0.001">
    </testcase>
    <testcase classname="Reducers.LHS should close on TOGGLE_LHS" name="Reducers.LHS should close on TOGGLE_LHS" time="0">
    </testcase>
    <testcase classname="Reducers.LHS should open on TOGGLE_LHS" name="Reducers.LHS should open on TOGGLE_LHS" time="0.001">
    </testcase>
    <testcase classname="Reducers.LHS should open on OPEN_LHS" name="Reducers.LHS should open on OPEN_LHS" time="0">
    </testcase>
    <testcase classname="Reducers.LHS should close on CLOSE_LHS" name="Reducers.LHS should close on CLOSE_LHS" time="0.001">
    </testcase>
    <testcase classname="Reducers.LHS should close on TOGGLE_RHS_MENU" name="Reducers.LHS should close on TOGGLE_RHS_MENU" time="0.001">
    </testcase>
    <testcase classname="Reducers.LHS should close on OPEN_RHS_MENU" name="Reducers.LHS should close on OPEN_RHS_MENU" time="0">
    </testcase>
    <testcase classname="Reducers.LHS should close on SELECT_TEAM" name="Reducers.LHS should close on SELECT_TEAM" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/analytics/statistic_count.tsx" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:55" time="0.107" tests="2">
    <testcase classname="components/analytics/statistic_count.tsx should match snapshot, on loading" name="components/analytics/statistic_count.tsx should match snapshot, on loading" time="0.003">
    </testcase>
    <testcase classname="components/analytics/statistic_count.tsx should match snapshot, loaded" name="components/analytics/statistic_count.tsx should match snapshot, loaded" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="actions/views/mfa" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:55" time="0.125" tests="3">
    <testcase classname="actions/views/mfa activateMfa should call updateUserMfa to enable MFA for the current user" name="actions/views/mfa activateMfa should call updateUserMfa to enable MFA for the current user" time="0.001">
    </testcase>
    <testcase classname="actions/views/mfa deactivateMfa should call updateUserMfa to disable MFA for the current user" name="actions/views/mfa deactivateMfa should call updateUserMfa to disable MFA for the current user" time="0.001">
    </testcase>
    <testcase classname="actions/views/mfa generateMfaSecret should call generateMfaSecret for the current user" name="actions/views/mfa generateMfaSecret should call generateMfaSecret for the current user" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="FileUtils.trimFilename" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:55" time="0.138" tests="14">
    <testcase classname="FileUtils.trimFilename trimFilename" name="FileUtils.trimFilename trimFilename" time="0.001">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles is false when file attachments are disabled" name="FileUtils.canUploadFiles is false when file attachments are disabled" time="0.007">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles is true when file attachments are enabled and not on mobile" name="FileUtils.canUploadFiles is true when file attachments are enabled and not on mobile" time="0">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles is true when file attachments are enabled and on mobile with mobile file upload enabled" name="FileUtils.canUploadFiles is true when file attachments are enabled and on mobile with mobile file upload enabled" time="0.001">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles is true when file attachments are enabled unless on mobile with mobile file upload disabled" name="FileUtils.canUploadFiles is true when file attachments are enabled unless on mobile with mobile file upload disabled" time="0">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for videos" name="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for videos" time="0">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for audio" name="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for audio" time="0.001">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for image" name="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for image" time="0">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for pdf" name="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for pdf" time="0">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for spreadsheet" name="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for spreadsheet" time="0.001">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for presentation" name="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for presentation" time="0">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for word" name="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for word" time="0.001">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for unknown file format" name="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for unknown file format" time="0">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for no suffix" name="FileUtils.canUploadFiles get filetypes based on mime interpreted from browsers mime type for no suffix" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/MenuItemExternalLink" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:55" time="0.1" tests="1">
    <testcase classname="components/MenuItemExternalLink should match snapshot" name="components/MenuItemExternalLink should match snapshot" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/MenuItemLink" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:55" time="0.105" tests="1">
    <testcase classname="components/MenuItemLink should match snapshot" name="components/MenuItemLink should match snapshot" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Reducers.Modals" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:56" time="0.134" tests="3">
    <testcase classname="Reducers.Modals Initial state" name="Reducers.Modals Initial state" time="0">
    </testcase>
    <testcase classname="Reducers.Modals MODAL_OPEN" name="Reducers.Modals MODAL_OPEN" time="0">
    </testcase>
    <testcase classname="Reducers.Modals MODAL_CLOSE" name="Reducers.Modals MODAL_CLOSE" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TeamUtils.filterAndSortTeamsByDisplayName" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:56" time="0.108" tests="1">
    <testcase classname="TeamUtils.filterAndSortTeamsByDisplayName should return correct sorted teams" name="TeamUtils.filterAndSortTeamsByDisplayName should return correct sorted teams" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="components/view_image/popover_bar/PopoverBar" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:56" time="0.127" tests="7">
    <testcase classname="components/view_image/popover_bar/PopoverBar should match snapshot with public links disabled" name="components/view_image/popover_bar/PopoverBar should match snapshot with public links disabled" time="0.002">
    </testcase>
    <testcase classname="components/view_image/popover_bar/PopoverBar should match snapshot with public links enabled" name="components/view_image/popover_bar/PopoverBar should match snapshot with public links enabled" time="0.003">
    </testcase>
    <testcase classname="components/view_image/popover_bar/PopoverBar should call public link callback" name="components/view_image/popover_bar/PopoverBar should call public link callback" time="0.001">
    </testcase>
    <testcase classname="components/view_image/popover_bar/PopoverBar should match snapshot for downloadable file when externally hosted" name="components/view_image/popover_bar/PopoverBar should match snapshot for downloadable file when externally hosted" time="0.002">
    </testcase>
    <testcase classname="components/view_image/popover_bar/PopoverBar should match snapshot for downloadable file when externally hosted and on the desktop app" name="components/view_image/popover_bar/PopoverBar should match snapshot for downloadable file when externally hosted and on the desktop app" time="0.001">
    </testcase>
    <testcase classname="components/view_image/popover_bar/PopoverBar should match snapshot for downloadable file when internally hosted" name="components/view_image/popover_bar/PopoverBar should match snapshot for downloadable file when internally hosted" time="0.001">
    </testcase>
    <testcase classname="components/view_image/popover_bar/PopoverBar should match snapshot for downloadable file when internally hosted and on the desktop app" name="components/view_image/popover_bar/PopoverBar should match snapshot for downloadable file when internally hosted and on the desktop app" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/DataRetentionHint" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:56" time="0.104" tests="1">
    <testcase classname="components/DataRetentionHint should match snapshot" name="components/DataRetentionHint should match snapshot" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/analytics/table_chart.tsx" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:56" time="0.139" tests="2">
    <testcase classname="components/analytics/table_chart.tsx should match snapshot, loaded without data" name="components/analytics/table_chart.tsx should match snapshot, loaded without data" time="0.002">
    </testcase>
    <testcase classname="components/analytics/table_chart.tsx should match snapshot, loaded with data" name="components/analytics/table_chart.tsx should match snapshot, loaded with data" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/group_settings/group_details/GroupUsersRow" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:56" time="0.106" tests="1">
    <testcase classname="components/admin_console/group_settings/group_details/GroupUsersRow should match snapshot" name="components/admin_console/group_settings/group_details/GroupUsersRow should match snapshot" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/more_direct_channels/GroupMessageOption" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:56" time="0.118" tests="4">
    <testcase classname="components/more_direct_channels/GroupMessageOption should render the option" name="components/more_direct_channels/GroupMessageOption should render the option" time="0.002">
    </testcase>
    <testcase classname="components/more_direct_channels/GroupMessageOption should have rendered the concatenated user ids as the option" name="components/more_direct_channels/GroupMessageOption should have rendered the concatenated user ids as the option" time="0.002">
    </testcase>
    <testcase classname="components/more_direct_channels/GroupMessageOption should have the right number in the icon" name="components/more_direct_channels/GroupMessageOption should have the right number in the icon" time="0.002">
    </testcase>
    <testcase classname="components/more_direct_channels/GroupMessageOption should call the onClick event with an array of users" name="components/more_direct_channels/GroupMessageOption should call the onClick event with an array of users" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/MsgTyping" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:56" time="0.114" tests="3">
    <testcase classname="components/MsgTyping should match snapshot, on nobody typing" name="components/MsgTyping should match snapshot, on nobody typing" time="0.001">
    </testcase>
    <testcase classname="components/MsgTyping should match snapshot, on one user typing" name="components/MsgTyping should match snapshot, on one user typing" time="0.002">
    </testcase>
    <testcase classname="components/MsgTyping should match snapshot, on multiple users typing" name="components/MsgTyping should match snapshot, on multiple users typing" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/permission_schemes_settings/permission_checkbox" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:57" time="0.111" tests="4">
    <testcase classname="components/admin_console/permission_schemes_settings/permission_checkbox should match snapshot on no value" name="components/admin_console/permission_schemes_settings/permission_checkbox should match snapshot on no value" time="0.002">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_checkbox should match snapshot on value &quot;checked&quot;" name="components/admin_console/permission_schemes_settings/permission_checkbox should match snapshot on value &quot;checked&quot;" time="0.001">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_checkbox should match snapshot on value &quot;intermediate&quot;" name="components/admin_console/permission_schemes_settings/permission_checkbox should match snapshot on value &quot;intermediate&quot;" time="0">
    </testcase>
    <testcase classname="components/admin_console/permission_schemes_settings/permission_checkbox should match snapshot on other value" name="components/admin_console/permission_schemes_settings/permission_checkbox should match snapshot on other value" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="components/PinPostSearchHint" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:57" time="0.106" tests="2">
    <testcase classname="components/PinPostSearchHint should match snapshot, with data retention" name="components/PinPostSearchHint should match snapshot, with data retention" time="0.006">
    </testcase>
    <testcase classname="components/PinPostSearchHint should match snapshot, without data retention" name="components/PinPostSearchHint should match snapshot, without data retention" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="admin_console/team_channel_settings/group/GroupList" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:57" time="0.109" tests="2">
    <testcase classname="admin_console/team_channel_settings/group/GroupList should match snapshot" name="admin_console/team_channel_settings/group/GroupList should match snapshot" time="0.002">
    </testcase>
    <testcase classname="admin_console/team_channel_settings/group/GroupList should match snapshot with paging" name="admin_console/team_channel_settings/group/GroupList should match snapshot with paging" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/MenuItem" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:57" time="0.103" tests="2">
    <testcase classname="components/MenuItem should match snapshot with default divider" name="components/MenuItem should match snapshot with default divider" time="0.002">
    </testcase>
    <testcase classname="components/MenuItem should match snapshot with custom divider" name="components/MenuItem should match snapshot with custom divider" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/modals/FullScreenModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:57" time="0.114" tests="4">
    <testcase classname="components/widgets/modals/FullScreenModal showing content" name="components/widgets/modals/FullScreenModal showing content" time="0.002">
    </testcase>
    <testcase classname="components/widgets/modals/FullScreenModal not showing content" name="components/widgets/modals/FullScreenModal not showing content" time="0.001">
    </testcase>
    <testcase classname="components/widgets/modals/FullScreenModal close on close icon click" name="components/widgets/modals/FullScreenModal close on close icon click" time="0.003">
    </testcase>
    <testcase classname="components/widgets/modals/FullScreenModal close on esc keypress" name="components/widgets/modals/FullScreenModal close on esc keypress" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="RemoveFromTeamButton" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:57" time="0.109" tests="2">
    <testcase classname="RemoveFromTeamButton should match snapshot init" name="RemoveFromTeamButton should match snapshot init" time="0.002">
    </testcase>
    <testcase classname="RemoveFromTeamButton should call handleRemoveUserFromTeam on button click" name="RemoveFromTeamButton should call handleRemoveUserFromTeam on button click" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/MenuItem" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:57" time="0.113" tests="3">
    <testcase classname="components/MenuItem should match snapshot not shown" name="components/MenuItem should match snapshot not shown" time="0.002">
    </testcase>
    <testcase classname="components/MenuItem should match snapshot shown with icon" name="components/MenuItem should match snapshot shown with icon" time="0.001">
    </testcase>
    <testcase classname="components/MenuItem should match snapshot shown without icon" name="components/MenuItem should match snapshot shown without icon" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/settings/TextSetting" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:57" time="0.174" tests="3">
    <testcase classname="components/widgets/settings/TextSetting render component with required props" name="components/widgets/settings/TextSetting render component with required props" time="0.002">
    </testcase>
    <testcase classname="components/widgets/settings/TextSetting render with textarea type" name="components/widgets/settings/TextSetting render with textarea type" time="0.001">
    </testcase>
    <testcase classname="components/widgets/settings/TextSetting onChange" name="components/widgets/settings/TextSetting onChange" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Utils.YOUTUBE" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:58" time="0.108" tests="1">
    <testcase classname="Utils.YOUTUBE should correctly parse youtube start time formats" name="Utils.YOUTUBE should correctly parse youtube start time formats" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Selectors.Storage" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:58" time="0.107" tests="3">
    <testcase classname="Selectors.Storage getPrefix" name="Selectors.Storage getPrefix" time="0.001">
    </testcase>
    <testcase classname="Selectors.Storage makeGetGlobalItem" name="Selectors.Storage makeGetGlobalItem" time="0">
    </testcase>
    <testcase classname="Selectors.Storage makeGetItem" name="Selectors.Storage makeGetItem" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/admin_console/AdminPanelWithButton" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:58" time="0.115" tests="2">
    <testcase classname="components/widgets/admin_console/AdminPanelWithButton should match snapshot" name="components/widgets/admin_console/AdminPanelWithButton should match snapshot" time="0.007">
    </testcase>
    <testcase classname="components/widgets/admin_console/AdminPanelWithButton should match snapshot when disabled" name="components/widgets/admin_console/AdminPanelWithButton should match snapshot when disabled" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/admin_console/AdminHeader" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:58" time="0.098" tests="1">
    <testcase classname="components/widgets/admin_console/AdminHeader render component with child" name="components/widgets/admin_console/AdminHeader render component with child" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Latinise" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:58" time="0.102" tests="3">
    <testcase classname="Latinise should return ascii version of Dév Spé" name="Latinise should return ascii version of Dév Spé" time="0.004">
    </testcase>
    <testcase classname="Latinise should not replace any characters" name="Latinise should not replace any characters" time="0.001">
    </testcase>
    <testcase classname="Latinise should replace characters with diacritics with ascii equivalents" name="Latinise should replace characters with diacritics with ascii equivalents" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/settings/BoolSetting" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:58" time="0.106" tests="2">
    <testcase classname="components/widgets/settings/BoolSetting render component with required props" name="components/widgets/settings/BoolSetting render component with required props" time="0.002">
    </testcase>
    <testcase classname="components/widgets/settings/BoolSetting onChange" name="components/widgets/settings/BoolSetting onChange" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/separator" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:58" time="0.105" tests="3">
    <testcase classname="components/widgets/separator date separator with text" name="components/widgets/separator date separator with text" time="0.001">
    </testcase>
    <testcase classname="components/widgets/separator notification message separator without text" name="components/widgets/separator notification message separator without text" time="0.001">
    </testcase>
    <testcase classname="components/widgets/separator notification message separator with text" name="components/widgets/separator notification message separator with text" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/permissions_gates" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:58" time="0.128" tests="5">
    <testcase classname="components/permissions_gates SystemPermissionGate should match snapshot when user have permission" name="components/permissions_gates SystemPermissionGate should match snapshot when user have permission" time="0.009">
    </testcase>
    <testcase classname="components/permissions_gates SystemPermissionGate should match snapshot when user have at least on of the permissions" name="components/permissions_gates SystemPermissionGate should match snapshot when user have at least on of the permissions" time="0.002">
    </testcase>
    <testcase classname="components/permissions_gates SystemPermissionGate should match snapshot when user have permission and use invert" name="components/permissions_gates SystemPermissionGate should match snapshot when user have permission and use invert" time="0.001">
    </testcase>
    <testcase classname="components/permissions_gates SystemPermissionGate should match snapshot when user not have permission and use invert" name="components/permissions_gates SystemPermissionGate should match snapshot when user not have permission and use invert" time="0.002">
    </testcase>
    <testcase classname="components/permissions_gates SystemPermissionGate should match snapshot when user haven&apos;t permission" name="components/permissions_gates SystemPermissionGate should match snapshot when user haven&apos;t permission" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/badges/Badge" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:58" time="0.103" tests="2">
    <testcase classname="components/widgets/badges/Badge should match the snapshot on show" name="components/widgets/badges/Badge should match the snapshot on show" time="0.001">
    </testcase>
    <testcase classname="components/widgets/badges/Badge should match the snapshot on hide" name="components/widgets/badges/Badge should match the snapshot on hide" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/badges/BotBadge" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:59" time="0.104" tests="1">
    <testcase classname="components/widgets/badges/BotBadge should match the snapshot" name="components/widgets/badges/BotBadge should match the snapshot" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/MenuItemAction" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:59" time="0.106" tests="2">
    <testcase classname="components/MenuItemAction should match snapshot" name="components/MenuItemAction should match snapshot" time="0.001">
    </testcase>
    <testcase classname="components/MenuItemAction should match snapshot with extra text" name="components/MenuItemAction should match snapshot with extra text" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/users/Avatar" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:59" time="0.103" tests="2">
    <testcase classname="components/widgets/users/Avatar should match the snapshot" name="components/widgets/users/Avatar should match the snapshot" time="0.001">
    </testcase>
    <testcase classname="components/widgets/users/Avatar should match the snapshot only with url" name="components/widgets/users/Avatar should match the snapshot only with url" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="PostEmoji" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:59" time="0.104" tests="2">
    <testcase classname="PostEmoji should render image when imageUrl is provided" name="PostEmoji should render image when imageUrl is provided" time="0.002">
    </testcase>
    <testcase classname="PostEmoji should render original text when imageUrl is empty" name="PostEmoji should render original text when imageUrl is empty" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="modals selector" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:59" time="0.098" tests="2">
    <testcase classname="modals selector should return the isOpen value from the state for the given modalId" name="modals selector should return the isOpen value from the state for the given modalId" time="0">
    </testcase>
    <testcase classname="modals selector should return false when the given ModalId is not in state" name="modals selector should return false when the given ModalId is not in state" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/backstage/components/BackstageHeader" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:59" time="0.151" tests="2">
    <testcase classname="components/backstage/components/BackstageHeader should match snapshot without children" name="components/backstage/components/BackstageHeader should match snapshot without children" time="0.002">
    </testcase>
    <testcase classname="components/backstage/components/BackstageHeader should match snapshot with children" name="components/backstage/components/BackstageHeader should match snapshot with children" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="AdminConsoleIndex.generateIndex" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:49:59" time="0.639" tests="3">
    <testcase classname="AdminConsoleIndex.generateIndex should generate a index where I can search" name="AdminConsoleIndex.generateIndex should generate a index where I can search" time="0.083">
    </testcase>
    <testcase classname="AdminConsoleIndex.generateIndex should generate a index where I can search in other language" name="AdminConsoleIndex.generateIndex should generate a index where I can search in other language" time="0.071">
    </testcase>
    <testcase classname="AdminConsoleIndex.generateIndex should generate a index including the plugin settings" name="AdminConsoleIndex.generateIndex should generate a index including the plugin settings" time="0.053">
    </testcase>
  </testsuite>
  <testsuite name="components/ToggleModalButtonRedux" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:00" time="0.151" tests="1">
    <testcase classname="components/ToggleModalButtonRedux component should match snapshot" name="components/ToggleModalButtonRedux component should match snapshot" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="FileAttachment" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:00" time="0.473" tests="10">
    <testcase classname="FileAttachment should match snapshot, regular file" name="FileAttachment should match snapshot, regular file" time="0.003">
    </testcase>
    <testcase classname="FileAttachment should match snapshot, regular image" name="FileAttachment should match snapshot, regular image" time="0.002">
    </testcase>
    <testcase classname="FileAttachment should match snapshot, small image" name="FileAttachment should match snapshot, small image" time="0.002">
    </testcase>
    <testcase classname="FileAttachment should match snapshot, svg image" name="FileAttachment should match snapshot, svg image" time="0.002">
    </testcase>
    <testcase classname="FileAttachment should match snapshot, after change from file to image" name="FileAttachment should match snapshot, after change from file to image" time="0.002">
    </testcase>
    <testcase classname="FileAttachment should match snapshot, with compact display" name="FileAttachment should match snapshot, with compact display" time="0.001">
    </testcase>
    <testcase classname="FileAttachment should match snapshot, without compact display and without can download" name="FileAttachment should match snapshot, without compact display and without can download" time="0.001">
    </testcase>
    <testcase classname="FileAttachment should match snapshot, file with long name" name="FileAttachment should match snapshot, file with long name" time="0.002">
    </testcase>
    <testcase classname="FileAttachment should match snapshot, when file is not loaded" name="FileAttachment should match snapshot, when file is not loaded" time="0.001">
    </testcase>
    <testcase classname="FileAttachment should blur file attachment link after click" name="FileAttachment should blur file attachment link after click" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="components/RhsRootPost" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:01" time="0.424" tests="4">
    <testcase classname="components/RhsRootPost should match snapshot" name="components/RhsRootPost should match snapshot" time="0.009">
    </testcase>
    <testcase classname="components/RhsRootPost should match snapshot when flagged" name="components/RhsRootPost should match snapshot when flagged" time="0.003">
    </testcase>
    <testcase classname="components/RhsRootPost should match snapshot on deleted post" name="components/RhsRootPost should match snapshot on deleted post" time="0.003">
    </testcase>
    <testcase classname="components/RhsRootPost should match snapshot on flagged, deleted post" name="components/RhsRootPost should match snapshot on flagged, deleted post" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/RenameChannelModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:01" time="0.426" tests="10">
    <testcase classname="components/RenameChannelModal should match snapshot" name="components/RenameChannelModal should match snapshot" time="0.005">
    </testcase>
    <testcase classname="components/RenameChannelModal should submit form" name="components/RenameChannelModal should submit form" time="0.006">
    </testcase>
    <testcase classname="components/RenameChannelModal should not call patchChannel as channel.name.length &gt; Constants.MAX_CHANNELNAME_LENGTH (64)" name="components/RenameChannelModal should not call patchChannel as channel.name.length &gt; Constants.MAX_CHANNELNAME_LENGTH (64)" time="0.004">
    </testcase>
    <testcase classname="components/RenameChannelModal should change state when display_name is edited" name="components/RenameChannelModal should change state when display_name is edited" time="0.004">
    </testcase>
    <testcase classname="components/RenameChannelModal should call setError function" name="components/RenameChannelModal should call setError function" time="0.001">
    </testcase>
    <testcase classname="components/RenameChannelModal should call unsetError function" name="components/RenameChannelModal should call unsetError function" time="0.006">
    </testcase>
    <testcase classname="components/RenameChannelModal should call handleSubmit function" name="components/RenameChannelModal should call handleSubmit function" time="0.004">
    </testcase>
    <testcase classname="components/RenameChannelModal should call handleCancel" name="components/RenameChannelModal should call handleCancel" time="0.003">
    </testcase>
    <testcase classname="components/RenameChannelModal should call handleHide function" name="components/RenameChannelModal should call handleHide function" time="0.009">
    </testcase>
    <testcase classname="components/RenameChannelModal should call onNameChange function" name="components/RenameChannelModal should call onNameChange function" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/EditPostModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:01" time="0.706" tests="28">
    <testcase classname="components/EditPostModal should match with default config" name="components/EditPostModal should match with default config" time="0.006">
    </testcase>
    <testcase classname="components/EditPostModal should match without emoji picker" name="components/EditPostModal should match without emoji picker" time="0.002">
    </testcase>
    <testcase classname="components/EditPostModal should not call openModal on empty edited message but with attachment" name="components/EditPostModal should not call openModal on empty edited message but with attachment" time="0.002">
    </testcase>
    <testcase classname="components/EditPostModal should call editPost, addMessageIntoHistory and hideEditPostModal on save" name="components/EditPostModal should call editPost, addMessageIntoHistory and hideEditPostModal on save" time="0.004">
    </testcase>
    <testcase classname="components/EditPostModal should show emojis on emojis click" name="components/EditPostModal should show emojis on emojis click" time="0.011">
    </testcase>
    <testcase classname="components/EditPostModal should set the postError state when error happens" name="components/EditPostModal should set the postError state when error happens" time="0.003">
    </testcase>
    <testcase classname="components/EditPostModal should show errors when it is set in the state" name="components/EditPostModal should show errors when it is set in the state" time="0.003">
    </testcase>
    <testcase classname="components/EditPostModal should set the errorClass to animate when try to edit with an error" name="components/EditPostModal should set the errorClass to animate when try to edit with an error" time="0.005">
    </testcase>
    <testcase classname="components/EditPostModal should hide and toggle the emoji picker on correctly on (toggle/hide)EmojiPicker" name="components/EditPostModal should hide and toggle the emoji picker on correctly on (toggle/hide)EmojiPicker" time="0.005">
    </testcase>
    <testcase classname="components/EditPostModal should add emoji to editText when an emoji is clicked" name="components/EditPostModal should add emoji to editText when an emoji is clicked" time="0.005">
    </testcase>
    <testcase classname="components/EditPostModal should set the focus and recalculate the size of the edit box after entering" name="components/EditPostModal should set the focus and recalculate the size of the edit box after entering" time="0.002">
    </testcase>
    <testcase classname="components/EditPostModal should hide the preview when exiting" name="components/EditPostModal should hide the preview when exiting" time="0.002">
    </testcase>
    <testcase classname="components/EditPostModal should close without saving when post text is not changed" name="components/EditPostModal should close without saving when post text is not changed" time="0.001">
    </testcase>
    <testcase classname="components/EditPostModal should close and show delete confirmation modal when message is empty" name="components/EditPostModal should close and show delete confirmation modal when message is empty" time="0.003">
    </testcase>
    <testcase classname="components/EditPostModal should scroll page after successfully editing post" name="components/EditPostModal should scroll page after successfully editing post" time="0.001">
    </testcase>
    <testcase classname="components/EditPostModal should update state after changing value in textbox" name="components/EditPostModal should update state after changing value in textbox" time="0.002">
    </testcase>
    <testcase classname="components/EditPostModal should clear data on exit" name="components/EditPostModal should clear data on exit" time="0.002">
    </testcase>
    <testcase classname="components/EditPostModal should focus element on exit based on refocusId" name="components/EditPostModal should focus element on exit based on refocusId" time="0.002">
    </testcase>
    <testcase classname="components/EditPostModal should handle edition on key down enter depending on the conditions" name="components/EditPostModal should handle edition on key down enter depending on the conditions" time="0.003">
    </testcase>
    <testcase classname="components/EditPostModal should handle edition on key press enter depending on the conditions for Android, ctrlSend true" name="components/EditPostModal should handle edition on key press enter depending on the conditions for Android, ctrlSend true" time="0.001">
    </testcase>
    <testcase classname="components/EditPostModal should handle edition on key press enter depending on the conditions for Chrome, ctrlSend false" name="components/EditPostModal should handle edition on key press enter depending on the conditions for Chrome, ctrlSend false" time="0.001">
    </testcase>
    <testcase classname="components/EditPostModal should handle the escape key manually to hide the modal" name="components/EditPostModal should handle the escape key manually to hide the modal" time="0.006">
    </testcase>
    <testcase classname="components/EditPostModal should handle the escape key manually to hide the modal, unless the emoji picker is shown" name="components/EditPostModal should handle the escape key manually to hide the modal, unless the emoji picker is shown" time="0.001">
    </testcase>
    <testcase classname="components/EditPostModal should disable the button on not canEditPost and text in it" name="components/EditPostModal should disable the button on not canEditPost and text in it" time="0.003">
    </testcase>
    <testcase classname="components/EditPostModal should not disable the button on not canEditPost and no text in it with canDeletePost" name="components/EditPostModal should not disable the button on not canEditPost and no text in it with canDeletePost" time="0.002">
    </testcase>
    <testcase classname="components/EditPostModal should disable the button on not canDeletePost and empty text in it" name="components/EditPostModal should disable the button on not canDeletePost and empty text in it" time="0.002">
    </testcase>
    <testcase classname="components/EditPostModal should not disable the button on not canDeletePost and text in it with canEditPost" name="components/EditPostModal should not disable the button on not canDeletePost and text in it with canEditPost" time="0.003">
    </testcase>
    <testcase classname="components/EditPostModal should not disable the save button on not canDeletePost and no text when edited message has attachments" name="components/EditPostModal should not disable the save button on not canDeletePost and no text when edited message has attachments" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/SignupController" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:02" time="0.463" tests="4">
    <testcase classname="components/SignupController should match snapshot for all signup options enabled with isLicensed enabled" name="components/SignupController should match snapshot for all signup options enabled with isLicensed enabled" time="0.006">
    </testcase>
    <testcase classname="components/SignupController should match snapshot for all signup options enabled with isLicensed disabled" name="components/SignupController should match snapshot for all signup options enabled with isLicensed disabled" time="0.002">
    </testcase>
    <testcase classname="components/SignupController should call addUserToTeamFromInvite if id exists in url" name="components/SignupController should call addUserToTeamFromInvite if id exists in url" time="0.002">
    </testcase>
    <testcase classname="components/SignupController should match snapshot for addUserToTeamFromInvite error" name="components/SignupController should match snapshot for addUserToTeamFromInvite error" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/ChannelInfoModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:03" time="0.531" tests="3">
    <testcase classname="components/ChannelInfoModal should match snapshot" name="components/ChannelInfoModal should match snapshot" time="0.006">
    </testcase>
    <testcase classname="components/ChannelInfoModal should match snapshot with channel props" name="components/ChannelInfoModal should match snapshot with channel props" time="0.004">
    </testcase>
    <testcase classname="components/ChannelInfoModal should call onHide callback when modal is hidden" name="components/ChannelInfoModal should call onHide callback when modal is hidden" time="0.083">
    </testcase>
  </testsuite>
  <testsuite name="components/ChangeURLModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:03" time="0.308" tests="14">
    <testcase classname="components/ChangeURLModal should match snapshot, modal not showing" name="components/ChangeURLModal should match snapshot, modal not showing" time="0.007">
    </testcase>
    <testcase classname="components/ChangeURLModal should match snapshot, modal showing" name="components/ChangeURLModal should match snapshot, modal showing" time="0.004">
    </testcase>
    <testcase classname="components/ChangeURLModal should match snapshot, with a input" name="components/ChangeURLModal should match snapshot, with a input" time="0.003">
    </testcase>
    <testcase classname="components/ChangeURLModal should match snapshot, on urlError" name="components/ChangeURLModal should match snapshot, on urlError" time="0.004">
    </testcase>
    <testcase classname="components/ChangeURLModal should match snapshot, on currentURL" name="components/ChangeURLModal should match snapshot, on currentURL" time="0.003">
    </testcase>
    <testcase classname="components/ChangeURLModal should match state when onSubmit is called with a valid URL" name="components/ChangeURLModal should match state when onSubmit is called with a valid URL" time="0.022">
    </testcase>
    <testcase classname="components/ChangeURLModal should match state when onSubmit is called with a invalid URL" name="components/ChangeURLModal should match state when onSubmit is called with a invalid URL" time="0.017">
    </testcase>
    <testcase classname="components/ChangeURLModal should match state when onURLChanged is called" name="components/ChangeURLModal should match state when onURLChanged is called" time="0.011">
    </testcase>
    <testcase classname="components/ChangeURLModal should match state when onCancel is called" name="components/ChangeURLModal should match state when onCancel is called" time="0.008">
    </testcase>
    <testcase classname="components/ChangeURLModal should match when getURLError is called with a non specific error" name="components/ChangeURLModal should match when getURLError is called with a non specific error" time="0.009">
    </testcase>
    <testcase classname="components/ChangeURLModal should match when getURLError is called with a 1 character url" name="components/ChangeURLModal should match when getURLError is called with a 1 character url" time="0.009">
    </testcase>
    <testcase classname="components/ChangeURLModal should match when getURLError is called with a non alphanumeric start, end and two undescores" name="components/ChangeURLModal should match when getURLError is called with a non alphanumeric start, end and two undescores" time="0.009">
    </testcase>
    <testcase classname="components/ChangeURLModal should update current url when not editing" name="components/ChangeURLModal should update current url when not editing" time="0.011">
    </testcase>
    <testcase classname="components/ChangeURLModal should not update current url when editing" name="components/ChangeURLModal should not update current url when editing" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="plugins/ChannelHeaderPlug" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:04" time="0.369" tests="3">
    <testcase classname="plugins/ChannelHeaderPlug should match snapshot with no extended component" name="plugins/ChannelHeaderPlug should match snapshot with no extended component" time="0.008">
    </testcase>
    <testcase classname="plugins/ChannelHeaderPlug should match snapshot with one extended component" name="plugins/ChannelHeaderPlug should match snapshot with one extended component" time="0.003">
    </testcase>
    <testcase classname="plugins/ChannelHeaderPlug should match snapshot with two extended components" name="plugins/ChannelHeaderPlug should match snapshot with two extended components" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="plugins/Pluggable" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:04" time="0.147" tests="5">
    <testcase classname="plugins/Pluggable should match snapshot with no extended component" name="plugins/Pluggable should match snapshot with no extended component" time="0.008">
    </testcase>
    <testcase classname="plugins/Pluggable should match snapshot with extended component" name="plugins/Pluggable should match snapshot with extended component" time="0.003">
    </testcase>
    <testcase classname="plugins/Pluggable should match snapshot with extended component with pluggableName" name="plugins/Pluggable should match snapshot with extended component with pluggableName" time="0.002">
    </testcase>
    <testcase classname="plugins/Pluggable should return null if neither pluggableName nor children is is defined in props" name="plugins/Pluggable should return null if neither pluggableName nor children is is defined in props" time="0.001">
    </testcase>
    <testcase classname="plugins/Pluggable should return null if with pluggableName but no children" name="plugins/Pluggable should return null if with pluggableName but no children" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/user_settings/notifications/EmailNotificationSetting" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:04" time="0.464" tests="11">
    <testcase classname="components/user_settings/notifications/EmailNotificationSetting should match snapshot" name="components/user_settings/notifications/EmailNotificationSetting should match snapshot" time="0.023">
    </testcase>
    <testcase classname="components/user_settings/notifications/EmailNotificationSetting should match snapshot, enabled email batching" name="components/user_settings/notifications/EmailNotificationSetting should match snapshot, enabled email batching" time="0.019">
    </testcase>
    <testcase classname="components/user_settings/notifications/EmailNotificationSetting should match snapshot, not send email notifications" name="components/user_settings/notifications/EmailNotificationSetting should match snapshot, not send email notifications" time="0.001">
    </testcase>
    <testcase classname="components/user_settings/notifications/EmailNotificationSetting should match snapshot, active section != email and SendEmailNotifications !== true" name="components/user_settings/notifications/EmailNotificationSetting should match snapshot, active section != email and SendEmailNotifications !== true" time="0.001">
    </testcase>
    <testcase classname="components/user_settings/notifications/EmailNotificationSetting should match snapshot, active section != email and SendEmailNotifications = true" name="components/user_settings/notifications/EmailNotificationSetting should match snapshot, active section != email and SendEmailNotifications = true" time="0.001">
    </testcase>
    <testcase classname="components/user_settings/notifications/EmailNotificationSetting should match snapshot, active section != email, SendEmailNotifications = true and enableEmail = true" name="components/user_settings/notifications/EmailNotificationSetting should match snapshot, active section != email, SendEmailNotifications = true and enableEmail = true" time="0.001">
    </testcase>
    <testcase classname="components/user_settings/notifications/EmailNotificationSetting should match snapshot, on serverError" name="components/user_settings/notifications/EmailNotificationSetting should match snapshot, on serverError" time="0.001">
    </testcase>
    <testcase classname="components/user_settings/notifications/EmailNotificationSetting should pass handleChange" name="components/user_settings/notifications/EmailNotificationSetting should pass handleChange" time="0.009">
    </testcase>
    <testcase classname="components/user_settings/notifications/EmailNotificationSetting should pass handleSubmit" name="components/user_settings/notifications/EmailNotificationSetting should pass handleSubmit" time="0.009">
    </testcase>
    <testcase classname="components/user_settings/notifications/EmailNotificationSetting should pass handleUpdateSection" name="components/user_settings/notifications/EmailNotificationSetting should pass handleUpdateSection" time="0.007">
    </testcase>
    <testcase classname="components/user_settings/notifications/EmailNotificationSetting should derived state from props" name="components/user_settings/notifications/EmailNotificationSetting should derived state from props" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="components/ProfilePopover" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:05" time="0.387" tests="4">
    <testcase classname="components/ProfilePopover should match snapshot" name="components/ProfilePopover should match snapshot" time="0.005">
    </testcase>
    <testcase classname="components/ProfilePopover should have bot description" name="components/ProfilePopover should have bot description" time="0.002">
    </testcase>
    <testcase classname="components/ProfilePopover should hide add-to-channel option if not on team" name="components/ProfilePopover should hide add-to-channel option if not on team" time="0.001">
    </testcase>
    <testcase classname="components/ProfilePopover should match props passed into Pluggable component" name="components/ProfilePopover should match props passed into Pluggable component" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="components/user_settings/notifications/ManageAutoResponder" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:05" time="0.41" tests="3">
    <testcase classname="components/user_settings/notifications/ManageAutoResponder should match snapshot, default disabled" name="components/user_settings/notifications/ManageAutoResponder should match snapshot, default disabled" time="0.018">
    </testcase>
    <testcase classname="components/user_settings/notifications/ManageAutoResponder should match snapshot, enabled" name="components/user_settings/notifications/ManageAutoResponder should match snapshot, enabled" time="0.01">
    </testcase>
    <testcase classname="components/user_settings/notifications/ManageAutoResponder should pass handleChange" name="components/user_settings/notifications/ManageAutoResponder should pass handleChange" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="components/RhsComment" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:05" time="0.44" tests="4">
    <testcase classname="components/RhsComment should match snapshot" name="components/RhsComment should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/RhsComment should match snapshot hovered" name="components/RhsComment should match snapshot hovered" time="0.003">
    </testcase>
    <testcase classname="components/RhsComment should match snapshot mobile" name="components/RhsComment should match snapshot mobile" time="0.002">
    </testcase>
    <testcase classname="components/RhsComment should match snapshot hovered on deleted post" name="components/RhsComment should match snapshot hovered on deleted post" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/audit_table/AuditTable" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:06" time="0.437" tests="2">
    <testcase classname="components/audit_table/AuditTable should match snapshot with no audits" name="components/audit_table/AuditTable should match snapshot with no audits" time="0.004">
    </testcase>
    <testcase classname="components/audit_table/AuditTable should match snapshot with audits" name="components/audit_table/AuditTable should match snapshot with audits" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/CombinedSystemMessage" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:06" time="0.488" tests="6">
    <testcase classname="components/post_view/CombinedSystemMessage should match snapshot" name="components/post_view/CombinedSystemMessage should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/post_view/CombinedSystemMessage should match snapshot, combining users removed from channel by all actors" name="components/post_view/CombinedSystemMessage should match snapshot, combining users removed from channel by all actors" time="0.01">
    </testcase>
    <testcase classname="components/post_view/CombinedSystemMessage should match snapshot when join leave messages are turned off" name="components/post_view/CombinedSystemMessage should match snapshot when join leave messages are turned off" time="0.002">
    </testcase>
    <testcase classname="components/post_view/CombinedSystemMessage should match snapshot, &quot;removed from channel&quot; message when join leave messages are turned off" name="components/post_view/CombinedSystemMessage should match snapshot, &quot;removed from channel&quot; message when join leave messages are turned off" time="0.001">
    </testcase>
    <testcase classname="components/post_view/CombinedSystemMessage should match snapshot, when current user is removed from then rejoined the channel" name="components/post_view/CombinedSystemMessage should match snapshot, when current user is removed from then rejoined the channel" time="0.002">
    </testcase>
    <testcase classname="components/post_view/CombinedSystemMessage should call getMissingProfilesByIds and/or getMissingProfilesByUsernames on loadUserProfiles" name="components/post_view/CombinedSystemMessage should call getMissingProfilesByIds and/or getMissingProfilesByUsernames on loadUserProfiles" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/user_settings/display/CustomThemeChooser" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:07" time="0.174" tests="2">
    <testcase classname="components/user_settings/display/CustomThemeChooser should match, init" name="components/user_settings/display/CustomThemeChooser should match, init" time="0.011">
    </testcase>
    <testcase classname="components/user_settings/display/CustomThemeChooser should create a custom theme when the code theme changes" name="components/user_settings/display/CustomThemeChooser should create a custom theme when the code theme changes" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/combined_system_message/LastUsers" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:07" time="0.369" tests="3">
    <testcase classname="components/post_view/combined_system_message/LastUsers should match snapshot" name="components/post_view/combined_system_message/LastUsers should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/post_view/combined_system_message/LastUsers should match snapshot, expanded" name="components/post_view/combined_system_message/LastUsers should match snapshot, expanded" time="0.002">
    </testcase>
    <testcase classname="components/post_view/combined_system_message/LastUsers should match state on handleOnClick" name="components/post_view/combined_system_message/LastUsers should match state on handleOnClick" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/GetAndroidApp" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:07" time="0.179" tests="4">
    <testcase classname="components/GetAndroidApp should match snapshot" name="components/GetAndroidApp should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/GetAndroidApp should contain the download link" name="components/GetAndroidApp should contain the download link" time="0.002">
    </testcase>
    <testcase classname="components/GetAndroidApp should redirect if the user chooses to stay in the browser. Redirect url param is present" name="components/GetAndroidApp should redirect if the user chooses to stay in the browser. Redirect url param is present" time="0.012">
    </testcase>
    <testcase classname="components/GetAndroidApp should redirect if the user chooses to stay in the browser. Redirect url param is not present" name="components/GetAndroidApp should redirect if the user chooses to stay in the browser. Redirect url param is not present" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="PostList" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:07" time="0.534" tests="30">
    <testcase classname="PostList renderRow should get previous item ID correctly for oldest row" name="PostList renderRow should get previous item ID correctly for oldest row" time="0.009">
    </testcase>
    <testcase classname="PostList renderRow should get previous item ID correctly for other rows" name="PostList renderRow should get previous item ID correctly for other rows" time="0.002">
    </testcase>
    <testcase classname="PostList renderRow should highlight the focused post" name="PostList renderRow should highlight the focused post" time="0.01">
    </testcase>
    <testcase classname="PostList new messages below should mount outside of permalink view" name="PostList new messages below should mount outside of permalink view" time="0.002">
    </testcase>
    <testcase classname="PostList new messages below should not mount when in permalink view" name="PostList new messages below should not mount when in permalink view" time="0.001">
    </testcase>
    <testcase classname="PostList onScroll should call checkBottom" name="PostList onScroll should call checkBottom" time="0.001">
    </testcase>
    <testcase classname="PostList onScroll should call canLoadMorePosts with AFTER_ID if loader is visible" name="PostList onScroll should call canLoadMorePosts with AFTER_ID if loader is visible" time="0.001">
    </testcase>
    <testcase classname="PostList onScroll should not call canLoadMorePosts with AFTER_ID if loader is below the fold by couple of messages" name="PostList onScroll should not call canLoadMorePosts with AFTER_ID if loader is below the fold by couple of messages" time="0.001">
    </testcase>
    <testcase classname="PostList isAtBottom when viewing the top of the post list" name="PostList isAtBottom when viewing the top of the post list" time="0.001">
    </testcase>
    <testcase classname="PostList isAtBottom when 11 pixel from the bottom" name="PostList isAtBottom when 11 pixel from the bottom" time="0.001">
    </testcase>
    <testcase classname="PostList isAtBottom when 9 pixel from the bottom also considered to be bottom" name="PostList isAtBottom when 9 pixel from the bottom also considered to be bottom" time="0.001">
    </testcase>
    <testcase classname="PostList isAtBottom when clientHeight is less than scrollHeight" name="PostList isAtBottom when clientHeight is less than scrollHeight" time="0">
    </testcase>
    <testcase classname="PostList updateAtBottom should update atBottom and lastViewedBottom when atBottom changes" name="PostList updateAtBottom should update atBottom and lastViewedBottom when atBottom changes" time="0.002">
    </testcase>
    <testcase classname="PostList updateAtBottom should not update lastViewedBottom when atBottom does not change" name="PostList updateAtBottom should not update lastViewedBottom when atBottom does not change" time="0.001">
    </testcase>
    <testcase classname="PostList updateAtBottom should update lastViewedBottom with latestPostTimeStamp as that is greater than Date.now()" name="PostList updateAtBottom should update lastViewedBottom with latestPostTimeStamp as that is greater than Date.now()" time="0.001">
    </testcase>
    <testcase classname="PostList updateAtBottom should update lastViewedBottom with Date.now() as it is greater than latestPostTimeStamp" name="PostList updateAtBottom should update lastViewedBottom with Date.now() as it is greater than latestPostTimeStamp" time="0.001">
    </testcase>
    <testcase classname="PostList Scroll correction logic on mount of posts at the top should return previous scroll position from getSnapshotBeforeUpdate" name="PostList Scroll correction logic on mount of posts at the top should return previous scroll position from getSnapshotBeforeUpdate" time="0.002">
    </testcase>
    <testcase classname="PostList Scroll correction logic on mount of posts at the top should not return previous scroll position from getSnapshotBeforeUpdate as list is at bottom" name="PostList Scroll correction logic on mount of posts at the top should not return previous scroll position from getSnapshotBeforeUpdate as list is at bottom" time="0.001">
    </testcase>
    <testcase classname="PostList initRangeToRender should return 0 to 50 for channel with more than 100 messages" name="PostList initRangeToRender should return 0 to 50 for channel with more than 100 messages" time="0.001">
    </testcase>
    <testcase classname="PostList initRangeToRender should return range if new messages are present" name="PostList initRangeToRender should return range if new messages are present" time="0.001">
    </testcase>
    <testcase classname="PostList renderRow should have appropriate classNames for rows with START_OF_NEW_MESSAGES and DATE_LINE" name="PostList renderRow should have appropriate classNames for rows with START_OF_NEW_MESSAGES and DATE_LINE" time="0.001">
    </testcase>
    <testcase classname="PostList renderRow should have both top and bottom classNames as post is in between DATE_LINE and START_OF_NEW_MESSAGES" name="PostList renderRow should have both top and bottom classNames as post is in between DATE_LINE and START_OF_NEW_MESSAGES" time="0.001">
    </testcase>
    <testcase classname="PostList renderRow should have empty string as className when both previousItemId and nextItemId are posts" name="PostList renderRow should have empty string as className when both previousItemId and nextItemId are posts" time="0">
    </testcase>
    <testcase classname="PostList updateFloatingTimestamp should not update topPostId as is it not mobile view" name="PostList updateFloatingTimestamp should not update topPostId as is it not mobile view" time="0">
    </testcase>
    <testcase classname="PostList updateFloatingTimestamp should update topPostId with latest visible postId" name="PostList updateFloatingTimestamp should update topPostId with latest visible postId" time="0.001">
    </testcase>
    <testcase classname="PostList scrollToLatestMessages should call scrollToBottom" name="PostList scrollToLatestMessages should call scrollToBottom" time="0.002">
    </testcase>
    <testcase classname="PostList scrollToLatestMessages should call changeUnreadChunkTimeStamp" name="PostList scrollToLatestMessages should call changeUnreadChunkTimeStamp" time="0.001">
    </testcase>
    <testcase classname="PostList postIds state should have LOAD_NEWER_MESSAGES_TRIGGER and LOAD_OLDER_MESSAGES_TRIGGER" name="PostList postIds state should have LOAD_NEWER_MESSAGES_TRIGGER and LOAD_OLDER_MESSAGES_TRIGGER" time="0.001">
    </testcase>
    <testcase classname="PostList initScrollToIndex return date index if it is just above new message line" name="PostList initScrollToIndex return date index if it is just above new message line" time="0.001">
    </testcase>
    <testcase classname="PostList return new message line index if there is no date just above it" name="PostList return new message line index if there is no date just above it" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/ChannelHeader" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:08" time="0.433" tests="6">
    <testcase classname="components/ChannelHeader should render properly when empty" name="components/ChannelHeader should render properly when empty" time="0.003">
    </testcase>
    <testcase classname="components/ChannelHeader should render properly when populated" name="components/ChannelHeader should render properly when populated" time="0.004">
    </testcase>
    <testcase classname="components/ChannelHeader should render properly when populated with channel props" name="components/ChannelHeader should render properly when populated with channel props" time="0.003">
    </testcase>
    <testcase classname="components/ChannelHeader should render archived view" name="components/ChannelHeader should render archived view" time="0.002">
    </testcase>
    <testcase classname="components/ChannelHeader should render correct menu when muted" name="components/ChannelHeader should render correct menu when muted" time="0.003">
    </testcase>
    <testcase classname="components/ChannelHeader should render bot description" name="components/ChannelHeader should render bot description" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/Menu" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:08" time="0.477" tests="8">
    <testcase classname="components/Menu should match snapshot with id" name="components/Menu should match snapshot with id" time="0.006">
    </testcase>
    <testcase classname="components/Menu should match snapshot with most of the thing disabled" name="components/Menu should match snapshot with most of the thing disabled" time="0.004">
    </testcase>
    <testcase classname="components/Menu should match snapshot with most of the thing disabled in mobile" name="components/Menu should match snapshot with most of the thing disabled in mobile" time="0.004">
    </testcase>
    <testcase classname="components/Menu should match snapshot with most of the thing enabled" name="components/Menu should match snapshot with most of the thing enabled" time="0.003">
    </testcase>
    <testcase classname="components/Menu should match snapshot with most of the thing enabled in mobile" name="components/Menu should match snapshot with most of the thing enabled in mobile" time="0.004">
    </testcase>
    <testcase classname="components/Menu should match snapshot with plugins" name="components/Menu should match snapshot with plugins" time="0.004">
    </testcase>
    <testcase classname="components/Menu should match snapshot with plugins in mobile" name="components/Menu should match snapshot with plugins in mobile" time="0.005">
    </testcase>
    <testcase classname="components/Menu should show leave team option when primary team is set" name="components/Menu should show leave team option when primary team is set" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="components/user_settings/display/UserSettingsDisplay" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:09" time="0.967" tests="23">
    <testcase classname="components/user_settings/display/UserSettingsDisplay should match snapshot, no active section" name="components/user_settings/display/UserSettingsDisplay should match snapshot, no active section" time="0.005">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should match snapshot, collapse section" name="components/user_settings/display/UserSettingsDisplay should match snapshot, collapse section" time="0.003">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should match snapshot, link preview section with EnableLinkPreviews is false" name="components/user_settings/display/UserSettingsDisplay should match snapshot, link preview section with EnableLinkPreviews is false" time="0.004">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should match snapshot, link preview section with EnableLinkPreviews is true" name="components/user_settings/display/UserSettingsDisplay should match snapshot, link preview section with EnableLinkPreviews is true" time="0.003">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should match snapshot, clock section" name="components/user_settings/display/UserSettingsDisplay should match snapshot, clock section" time="0.003">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should match snapshot, teammate name display section" name="components/user_settings/display/UserSettingsDisplay should match snapshot, teammate name display section" time="0.002">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should match snapshot, timezone section" name="components/user_settings/display/UserSettingsDisplay should match snapshot, timezone section" time="0.002">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should match snapshot, message display section" name="components/user_settings/display/UserSettingsDisplay should match snapshot, message display section" time="0.003">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should match snapshot, channel display mode section" name="components/user_settings/display/UserSettingsDisplay should match snapshot, channel display mode section" time="0.003">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should match snapshot, languages section" name="components/user_settings/display/UserSettingsDisplay should match snapshot, languages section" time="0.002">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should match snapshot, theme section with EnableThemeSelection is false" name="components/user_settings/display/UserSettingsDisplay should match snapshot, theme section with EnableThemeSelection is false" time="0.003">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should match snapshot, theme section with EnableThemeSelection is true" name="components/user_settings/display/UserSettingsDisplay should match snapshot, theme section with EnableThemeSelection is true" time="0.002">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should have called handleSubmit" name="components/user_settings/display/UserSettingsDisplay should have called handleSubmit" time="0.029">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should have called updateSection" name="components/user_settings/display/UserSettingsDisplay should have called updateSection" time="0.022">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should have called closeModal" name="components/user_settings/display/UserSettingsDisplay should have called closeModal" time="0.014">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should have called collapseModal" name="components/user_settings/display/UserSettingsDisplay should have called collapseModal" time="0.015">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should update militaryTime state" name="components/user_settings/display/UserSettingsDisplay should update militaryTime state" time="0.023">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should update teammateNameDisplay state" name="components/user_settings/display/UserSettingsDisplay should update teammateNameDisplay state" time="0.02">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should update channelDisplayMode state" name="components/user_settings/display/UserSettingsDisplay should update channelDisplayMode state" time="0.016">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should update messageDisplay state" name="components/user_settings/display/UserSettingsDisplay should update messageDisplay state" time="0.014">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should update collapseDisplay state" name="components/user_settings/display/UserSettingsDisplay should update collapseDisplay state" time="0.02">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should update linkPreviewDisplay state" name="components/user_settings/display/UserSettingsDisplay should update linkPreviewDisplay state" time="0.014">
    </testcase>
    <testcase classname="components/user_settings/display/UserSettingsDisplay should update display state" name="components/user_settings/display/UserSettingsDisplay should update display state" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="components/SystemNotice" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:10" time="0.175" tests="11">
    <testcase classname="components/SystemNotice should match snapshot for regular user, regular notice" name="components/SystemNotice should match snapshot for regular user, regular notice" time="0.003">
    </testcase>
    <testcase classname="components/SystemNotice should match snapshot for regular user, no notice" name="components/SystemNotice should match snapshot for regular user, no notice" time="0.001">
    </testcase>
    <testcase classname="components/SystemNotice should match snapshot for regular user, admin notice" name="components/SystemNotice should match snapshot for regular user, admin notice" time="0.001">
    </testcase>
    <testcase classname="components/SystemNotice should match snapshot for regular user, admin and regular notice" name="components/SystemNotice should match snapshot for regular user, admin and regular notice" time="0.001">
    </testcase>
    <testcase classname="components/SystemNotice should match snapshot for admin, regular notice" name="components/SystemNotice should match snapshot for admin, regular notice" time="0.002">
    </testcase>
    <testcase classname="components/SystemNotice should match snapshot for admin, admin notice" name="components/SystemNotice should match snapshot for admin, admin notice" time="0.002">
    </testcase>
    <testcase classname="components/SystemNotice should match snapshot for regular user, dismissed notice" name="components/SystemNotice should match snapshot for regular user, dismissed notice" time="0">
    </testcase>
    <testcase classname="components/SystemNotice should match snapshot for regular user, dont show again notice" name="components/SystemNotice should match snapshot for regular user, dont show again notice" time="0">
    </testcase>
    <testcase classname="components/SystemNotice should match snapshot for show function returning false" name="components/SystemNotice should match snapshot for show function returning false" time="0.001">
    </testcase>
    <testcase classname="components/SystemNotice should match snapshot for show function returning true" name="components/SystemNotice should match snapshot for show function returning true" time="0.001">
    </testcase>
    <testcase classname="components/SystemNotice should match snapshot for with allowForget equal false" name="components/SystemNotice should match snapshot for with allowForget equal false" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/user_settings/general/UserSettingsGeneral" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:10" time="0.652" tests="5">
    <testcase classname="components/user_settings/general/UserSettingsGeneral submitUser() should have called updateMe" name="components/user_settings/general/UserSettingsGeneral submitUser() should have called updateMe" time="0.006">
    </testcase>
    <testcase classname="components/user_settings/general/UserSettingsGeneral submitUser() should have called getMe" name="components/user_settings/general/UserSettingsGeneral submitUser() should have called getMe" time="0.003">
    </testcase>
    <testcase classname="components/user_settings/general/UserSettingsGeneral submitPicture() should not have called uploadProfileImage" name="components/user_settings/general/UserSettingsGeneral submitPicture() should not have called uploadProfileImage" time="0.001">
    </testcase>
    <testcase classname="components/user_settings/general/UserSettingsGeneral submitPicture() should have called uploadProfileImage" name="components/user_settings/general/UserSettingsGeneral submitPicture() should have called uploadProfileImage" time="0.013">
    </testcase>
    <testcase classname="components/user_settings/general/UserSettingsGeneral should not show position input field when LDAP or SAML position attribute is set" name="components/user_settings/general/UserSettingsGeneral should not show position input field when LDAP or SAML position attribute is set" time="0.047">
    </testcase>
  </testsuite>
  <testsuite name="components/PermalinkView" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:11" time="0.467" tests="8">
    <testcase classname="components/PermalinkView should match snapshot" name="components/PermalinkView should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/PermalinkView should call baseProps.actions.focusPost on doPermalinkEvent" name="components/PermalinkView should call baseProps.actions.focusPost on doPermalinkEvent" time="0.002">
    </testcase>
    <testcase classname="components/PermalinkView should call baseProps.actions.focusPost when postid changes" name="components/PermalinkView should call baseProps.actions.focusPost when postid changes" time="0.001">
    </testcase>
    <testcase classname="components/PermalinkView should match snapshot with archived channel" name="components/PermalinkView should match snapshot with archived channel" time="0.002">
    </testcase>
    <testcase classname="components/PermalinkView actions focusPost should focus post in already loaded channel" name="components/PermalinkView actions focusPost should focus post in already loaded channel" time="0.001">
    </testcase>
    <testcase classname="components/PermalinkView actions focusPost should focus post in not loaded channel" name="components/PermalinkView actions focusPost should focus post in not loaded channel" time="0.001">
    </testcase>
    <testcase classname="components/PermalinkView actions focusPost should redirect to error page for DM channel not a member of" name="components/PermalinkView actions focusPost should redirect to error page for DM channel not a member of" time="0.001">
    </testcase>
    <testcase classname="components/PermalinkView actions focusPost should redirect to error page for GM channel not a member of" name="components/PermalinkView actions focusPost should redirect to error page for GM channel not a member of" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/user_settings/sidebar/UserSettingsSidebar" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:11" time="0.568" tests="4">
    <testcase classname="components/user_settings/sidebar/UserSettingsSidebar should match snapshot" name="components/user_settings/sidebar/UserSettingsSidebar should match snapshot" time="0.007">
    </testcase>
    <testcase classname="components/user_settings/sidebar/UserSettingsSidebar should match state when updateSection is called" name="components/user_settings/sidebar/UserSettingsSidebar should match state when updateSection is called" time="0.003">
    </testcase>
    <testcase classname="components/user_settings/sidebar/UserSettingsSidebar should pass handleChange for channel grouping" name="components/user_settings/sidebar/UserSettingsSidebar should pass handleChange for channel grouping" time="0.061">
    </testcase>
    <testcase classname="components/user_settings/sidebar/UserSettingsSidebar should pass handleChange for channel grouping" name="components/user_settings/sidebar/UserSettingsSidebar should pass handleChange for channel grouping" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="components/RemoveFromChannelModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:12" time="0.17" tests="4">
    <testcase classname="components/RemoveFromChannelModal should match snapshot" name="components/RemoveFromChannelModal should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/RemoveFromChannelModal should have state &quot;show&quot; equals true on mount" name="components/RemoveFromChannelModal should have state &quot;show&quot; equals true on mount" time="0.001">
    </testcase>
    <testcase classname="components/RemoveFromChannelModal should display correct props on Modal.Title and Modal.Body" name="components/RemoveFromChannelModal should display correct props on Modal.Title and Modal.Body" time="0.022">
    </testcase>
    <testcase classname="components/RemoveFromChannelModal should fallback to default text on Modal.Body" name="components/RemoveFromChannelModal should fallback to default text on Modal.Body" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="MfaSection" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:12" time="0.436" tests="11">
    <testcase classname="MfaSection rendering should render nothing when MFA is not available" name="MfaSection rendering should render nothing when MFA is not available" time="0.002">
    </testcase>
    <testcase classname="MfaSection rendering when section is collapsed and MFA is not active" name="MfaSection rendering when section is collapsed and MFA is not active" time="0.002">
    </testcase>
    <testcase classname="MfaSection rendering when section is collapsed and MFA is active" name="MfaSection rendering when section is collapsed and MFA is active" time="0.001">
    </testcase>
    <testcase classname="MfaSection rendering when section is expanded and MFA is not active" name="MfaSection rendering when section is expanded and MFA is not active" time="0.001">
    </testcase>
    <testcase classname="MfaSection rendering when section is expanded and MFA is active but not enforced" name="MfaSection rendering when section is expanded and MFA is active but not enforced" time="0.001">
    </testcase>
    <testcase classname="MfaSection rendering when section is expanded and MFA is active and enforced" name="MfaSection rendering when section is expanded and MFA is active and enforced" time="0.001">
    </testcase>
    <testcase classname="MfaSection rendering when section is expanded with a server error" name="MfaSection rendering when section is expanded with a server error" time="0.002">
    </testcase>
    <testcase classname="MfaSection setupMfa should send to setup page" name="MfaSection setupMfa should send to setup page" time="0.018">
    </testcase>
    <testcase classname="MfaSection removeMfa on success, should close section and clear state" name="MfaSection removeMfa on success, should close section and clear state" time="0.006">
    </testcase>
    <testcase classname="MfaSection removeMfa on success, should send to setup page if MFA enforcement is enabled" name="MfaSection removeMfa on success, should send to setup page if MFA enforcement is enabled" time="0.004">
    </testcase>
    <testcase classname="MfaSection removeMfa on error, should show error" name="MfaSection removeMfa on error, should show error" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/inputs/UsersEmailsInput" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:12" time="0.4" tests="1">
    <testcase classname="components/widgets/inputs/UsersEmailsInput should match snapshot" name="components/widgets/inputs/UsersEmailsInput should match snapshot" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="components/CreateComment" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:13" time="0.912" tests="46">
    <testcase classname="components/CreateComment should match snapshot, empty comment" name="components/CreateComment should match snapshot, empty comment" time="0.007">
    </testcase>
    <testcase classname="components/CreateComment should match snapshot, comment with message" name="components/CreateComment should match snapshot, comment with message" time="0.003">
    </testcase>
    <testcase classname="components/CreateComment should match snapshot, non-empty message and uploadsInProgress + fileInfos" name="components/CreateComment should match snapshot, non-empty message and uploadsInProgress + fileInfos" time="0.004">
    </testcase>
    <testcase classname="components/CreateComment should correctly change state when toggleEmojiPicker is called" name="components/CreateComment should correctly change state when toggleEmojiPicker is called" time="0.003">
    </testcase>
    <testcase classname="components/CreateComment should correctly change state when hideEmojiPicker is called" name="components/CreateComment should correctly change state when hideEmojiPicker is called" time="0.002">
    </testcase>
    <testcase classname="components/CreateComment should correctly update draft when handleEmojiClick is called" name="components/CreateComment should correctly update draft when handleEmojiClick is called" time="0.008">
    </testcase>
    <testcase classname="components/CreateComment handlePostError should update state with the correct error" name="components/CreateComment handlePostError should update state with the correct error" time="0.003">
    </testcase>
    <testcase classname="components/CreateComment handleUploadError should update state with the correct error" name="components/CreateComment handleUploadError should update state with the correct error" time="0.006">
    </testcase>
    <testcase classname="components/CreateComment getFileCount should return the correct count" name="components/CreateComment getFileCount should return the correct count" time="0.003">
    </testcase>
    <testcase classname="components/CreateComment should correctly change state when showPostDeletedModal is called" name="components/CreateComment should correctly change state when showPostDeletedModal is called" time="0.002">
    </testcase>
    <testcase classname="components/CreateComment should correctly change state when hidePostDeletedModal is called" name="components/CreateComment should correctly change state when hidePostDeletedModal is called" time="0.009">
    </testcase>
    <testcase classname="components/CreateComment handleUploadStart should update comment draft correctly" name="components/CreateComment handleUploadStart should update comment draft correctly" time="0.003">
    </testcase>
    <testcase classname="components/CreateComment handleFileUploadComplete should update comment draft correctly" name="components/CreateComment handleFileUploadComplete should update comment draft correctly" time="0.003">
    </testcase>
    <testcase classname="components/CreateComment check for uploadsProgressPercent state on handleUploadProgress callback" name="components/CreateComment check for uploadsProgressPercent state on handleUploadProgress callback" time="0.006">
    </testcase>
    <testcase classname="components/CreateComment set showPostDeletedModal true when createPostErrorId === api.post.create_post.root_id.app_error" name="components/CreateComment set showPostDeletedModal true when createPostErrorId === api.post.create_post.root_id.app_error" time="0.002">
    </testcase>
    <testcase classname="components/CreateComment focusTextbox is called when rootId changes" name="components/CreateComment focusTextbox is called when rootId changes" time="0.002">
    </testcase>
    <testcase classname="components/CreateComment focusTextbox is called when selectPostFocussedAt changes" name="components/CreateComment focusTextbox is called when selectPostFocussedAt changes" time="0.002">
    </testcase>
    <testcase classname="components/CreateComment focusTextbox is not called when rootId and selectPostFocussedAt have not changed" name="components/CreateComment focusTextbox is not called when rootId and selectPostFocussedAt have not changed" time="0.002">
    </testcase>
    <testcase classname="components/CreateComment handleChange should update comment draft correctly" name="components/CreateComment handleChange should update comment draft correctly" time="0.002">
    </testcase>
    <testcase classname="components/CreateComment handleChange should throw away invalid command error if user resumes typing" name="components/CreateComment handleChange should throw away invalid command error if user resumes typing" time="0.008">
    </testcase>
    <testcase classname="components/CreateComment should scroll to bottom when uploadsInProgress increase" name="components/CreateComment should scroll to bottom when uploadsInProgress increase" time="0.001">
    </testcase>
    <testcase classname="components/CreateComment handleSubmit should call onSubmit prop" name="components/CreateComment handleSubmit should call onSubmit prop" time="0.003">
    </testcase>
    <testcase classname="components/CreateComment handleSubmit should not show Confirm Modal for @channel mentions when channel member count too low" name="components/CreateComment handleSubmit should not show Confirm Modal for @channel mentions when channel member count too low" time="0.003">
    </testcase>
    <testcase classname="components/CreateComment handleSubmit should not show Confirm Modal for @channel mentions when feature disabled" name="components/CreateComment handleSubmit should not show Confirm Modal for @channel mentions when feature disabled" time="0.003">
    </testcase>
    <testcase classname="components/CreateComment handleSubmit should not show Confirm Modal for @channel mentions when no mention" name="components/CreateComment handleSubmit should not show Confirm Modal for @channel mentions when no mention" time="0.005">
    </testcase>
    <testcase classname="components/CreateComment handleSubmit should show Confirm Modal for @channel mentions when needed" name="components/CreateComment handleSubmit should show Confirm Modal for @channel mentions when needed" time="0.002">
    </testcase>
    <testcase classname="components/CreateComment handleSubmit should show Confirm Modal for @channel mentions when needed and timezone notification" name="components/CreateComment handleSubmit should show Confirm Modal for @channel mentions when needed and timezone notification" time="0.007">
    </testcase>
    <testcase classname="components/CreateComment handleSubmit should show Confirm Modal for @channel mentions when needed and no timezone notification" name="components/CreateComment handleSubmit should show Confirm Modal for @channel mentions when needed and no timezone notification" time="0.002">
    </testcase>
    <testcase classname="components/CreateComment handleSubmit should not show Confirm Modal for @all mentions when channel member count too low" name="components/CreateComment handleSubmit should not show Confirm Modal for @all mentions when channel member count too low" time="0.003">
    </testcase>
    <testcase classname="components/CreateComment handleSubmit should not show Confirm Modal for @all mentions when feature disabled" name="components/CreateComment handleSubmit should not show Confirm Modal for @all mentions when feature disabled" time="0.002">
    </testcase>
    <testcase classname="components/CreateComment handleSubmit should not show Confirm Modal for @all mentions when no mention" name="components/CreateComment handleSubmit should not show Confirm Modal for @all mentions when no mention" time="0.003">
    </testcase>
    <testcase classname="components/CreateComment handleSubmit should show Confirm Modal for @all mentions when needed" name="components/CreateComment handleSubmit should show Confirm Modal for @all mentions when needed" time="0.003">
    </testcase>
    <testcase classname="components/CreateComment handleSubmit should show Confirm Modal for @all mentions when needed and timezone notification" name="components/CreateComment handleSubmit should show Confirm Modal for @all mentions when needed and timezone notification" time="0.003">
    </testcase>
    <testcase classname="components/CreateComment handleSubmit should show Confirm Modal for @all mentions when needed and no timezone notification" name="components/CreateComment handleSubmit should show Confirm Modal for @all mentions when needed and no timezone notification" time="0.003">
    </testcase>
    <testcase classname="components/CreateComment handleSubmit should allow to force send invalid slash command as a message" name="components/CreateComment handleSubmit should allow to force send invalid slash command as a message" time="0.006">
    </testcase>
    <testcase classname="components/CreateComment handleSubmit should update global draft state if invalid slash command error occurs" name="components/CreateComment handleSubmit should update global draft state if invalid slash command error occurs" time="0.002">
    </testcase>
    <testcase classname="components/CreateComment removePreview should remove file info and upload in progress with corresponding id" name="components/CreateComment removePreview should remove file info and upload in progress with corresponding id" time="0.004">
    </testcase>
    <testcase classname="components/CreateComment should match draft state on componentWillReceiveProps with change in messageInHistory" name="components/CreateComment should match draft state on componentWillReceiveProps with change in messageInHistory" time="0.001">
    </testcase>
    <testcase classname="components/CreateComment should match draft state on componentWillReceiveProps with new rootId" name="components/CreateComment should match draft state on componentWillReceiveProps with new rootId" time="0.002">
    </testcase>
    <testcase classname="components/CreateComment should match snapshot read only channel" name="components/CreateComment should match snapshot read only channel" time="0.002">
    </testcase>
    <testcase classname="components/CreateComment should match snapshot, emoji picker disabled" name="components/CreateComment should match snapshot, emoji picker disabled" time="0.002">
    </testcase>
    <testcase classname="components/CreateComment check for handleFileUploadChange callback for focus" name="components/CreateComment check for handleFileUploadChange callback for focus" time="0.001">
    </testcase>
    <testcase classname="components/CreateComment should call functions on handleKeyDown" name="components/CreateComment should call functions on handleKeyDown" time="0.005">
    </testcase>
    <testcase classname="components/CreateComment should the RHS thread scroll to bottom one time after mount when props.draft.message is not empty" name="components/CreateComment should the RHS thread scroll to bottom one time after mount when props.draft.message is not empty" time="0.002">
    </testcase>
    <testcase classname="components/CreateComment should the RHS thread scroll to bottom when state.draft.uploadsInProgress increases but not when it decreases" name="components/CreateComment should the RHS thread scroll to bottom when state.draft.uploadsInProgress increases but not when it decreases" time="0.002">
    </testcase>
    <testcase classname="components/CreateComment should be able to format a pasted markdown table" name="components/CreateComment should be able to format a pasted markdown table" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="components/multiselect/multiselect" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:14" time="0.411" tests="3">
    <testcase classname="components/multiselect/multiselect should match snapshot" name="components/multiselect/multiselect should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/multiselect/multiselect should match snapshot for page 2" name="components/multiselect/multiselect should match snapshot for page 2" time="0.004">
    </testcase>
    <testcase classname="components/multiselect/multiselect MultiSelectList should match state on next page" name="components/multiselect/multiselect MultiSelectList should match state on next page" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="components/GetIosApp" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:14" time="0.181" tests="4">
    <testcase classname="components/GetIosApp should match snapshot" name="components/GetIosApp should match snapshot" time="0.002">
    </testcase>
    <testcase classname="components/GetIosApp should contain the download link" name="components/GetIosApp should contain the download link" time="0.003">
    </testcase>
    <testcase classname="components/GetIosApp should redirect if the user chooses to stay in the browser. Redirect url param is present" name="components/GetIosApp should redirect if the user chooses to stay in the browser. Redirect url param is present" time="0.011">
    </testcase>
    <testcase classname="components/GetIosApp should redirect if the user chooses to stay in the browser. Redirect url param is not present" name="components/GetIosApp should redirect if the user chooses to stay in the browser. Redirect url param is not present" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="component/sidebar/sidebar_channel/SidebarChannel" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:14" time="0.474" tests="23">
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on channel show" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on channel show" time="0.003">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on channel hide" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on channel hide" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on fake channel show" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on fake channel show" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on active channel show" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on active channel show" time="0.002">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on myself channel show" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on myself channel show" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on channel with draft" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on channel with draft" time="0.01">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on channel show with tutorial tip" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on channel show with tutorial tip" time="0.002">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on channel show with unread mentions (must have mentions badge)" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on channel show with unread mentions (must have mentions badge)" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on channel show without unread mentions (must have no badge)" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on channel show without unread mentions (must have no badge)" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on public channel show" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on public channel show" time="0.002">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on private channel show" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on private channel show" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on group channel show" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on group channel show" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on default channel show" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on default channel show" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on public channel show with enable X to close" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on public channel show with enable X to close" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on private channel show with enable X to close" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on private channel show with enable X to close" time="0.002">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on group channel show with enable X to close" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on group channel show with enable X to close" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on default channel show with enable X to close" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on default channel show with enable X to close" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should leave the direct channel" name="component/sidebar/sidebar_channel/SidebarChannel should leave the direct channel" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should leave the group channel" name="component/sidebar/sidebar_channel/SidebarChannel should leave the group channel" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should leave the active channel" name="component/sidebar/sidebar_channel/SidebarChannel should leave the active channel" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel do not leave the channel if it is already leaving" name="component/sidebar/sidebar_channel/SidebarChannel do not leave the channel if it is already leaving" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should leave the public channel" name="component/sidebar/sidebar_channel/SidebarChannel should leave the public channel" time="0.001">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should leave the private channel" name="component/sidebar/sidebar_channel/SidebarChannel should leave the private channel" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/SearchResultsItem" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:15" time="0.428" tests="8">
    <testcase classname="components/SearchResultsItem should match snapshot for channel" name="components/SearchResultsItem should match snapshot for channel" time="0.004">
    </testcase>
    <testcase classname="components/SearchResultsItem should match snapshot for deleted message with attachments by bot" name="components/SearchResultsItem should match snapshot for deleted message with attachments by bot" time="0.003">
    </testcase>
    <testcase classname="components/SearchResultsItem should match snapshot for deleted message" name="components/SearchResultsItem should match snapshot for deleted message" time="0.002">
    </testcase>
    <testcase classname="components/SearchResultsItem should match snapshot for DM" name="components/SearchResultsItem should match snapshot for DM" time="0.004">
    </testcase>
    <testcase classname="components/SearchResultsItem Check for dotmenu dropdownOpened state" name="components/SearchResultsItem Check for dotmenu dropdownOpened state" time="0.002">
    </testcase>
    <testcase classname="components/SearchResultsItem Check for comment icon click" name="components/SearchResultsItem Check for comment icon click" time="0.003">
    </testcase>
    <testcase classname="components/SearchResultsItem Check for jump to message" name="components/SearchResultsItem Check for jump to message" time="0.002">
    </testcase>
    <testcase classname="components/SearchResultsItem should match snapshot for archived channel" name="components/SearchResultsItem should match snapshot for archived channel" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/AdminSidebar" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:15" time="0.84" tests="10">
    <testcase classname="components/AdminSidebar should match snapshot" name="components/AdminSidebar should match snapshot" time="0.008">
    </testcase>
    <testcase classname="components/AdminSidebar should match snapshot, not render the plugin in the sidebar because does not have settings" name="components/AdminSidebar should match snapshot, not render the plugin in the sidebar because does not have settings" time="0.006">
    </testcase>
    <testcase classname="components/AdminSidebar should match snapshot, not prevent the console from loading when empty settings_schema provided" name="components/AdminSidebar should match snapshot, not prevent the console from loading when empty settings_schema provided" time="0.005">
    </testcase>
    <testcase classname="components/AdminSidebar should match snapshot, with license (without any explicit feature)" name="components/AdminSidebar should match snapshot, with license (without any explicit feature)" time="0.006">
    </testcase>
    <testcase classname="components/AdminSidebar should match snapshot, with license (with all feature)" name="components/AdminSidebar should match snapshot, with license (with all feature)" time="0.006">
    </testcase>
    <testcase classname="components/AdminSidebar generateIndex should refresh the index in case idx is already present and there is a change in plugins or adminDefinition prop" name="components/AdminSidebar generateIndex should refresh the index in case idx is already present and there is a change in plugins or adminDefinition prop" time="0.004">
    </testcase>
    <testcase classname="components/AdminSidebar generateIndex should not call the generate index in case of idx is not already present" name="components/AdminSidebar generateIndex should not call the generate index in case of idx is not already present" time="0.006">
    </testcase>
    <testcase classname="components/AdminSidebar generateIndex should not generate index in case of same props" name="components/AdminSidebar generateIndex should not generate index in case of same props" time="0.006">
    </testcase>
    <testcase classname="components/AdminSidebar Plugins should match snapshot" name="components/AdminSidebar Plugins should match snapshot" time="0.009">
    </testcase>
    <testcase classname="components/AdminSidebar Plugins should filter plugins" name="components/AdminSidebar Plugins should filter plugins" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="components/create_post" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:16" time="0.746" tests="42">
    <testcase classname="components/create_post should match snapshot, init" name="components/create_post should match snapshot, init" time="0.008">
    </testcase>
    <testcase classname="components/create_post should match snapshot for center textbox" name="components/create_post should match snapshot for center textbox" time="0.004">
    </testcase>
    <testcase classname="components/create_post should call clearDraftUploads on mount" name="components/create_post should call clearDraftUploads on mount" time="0.002">
    </testcase>
    <testcase classname="components/create_post Check for state change on channelId change" name="components/create_post Check for state change on channelId change" time="0.004">
    </testcase>
    <testcase classname="components/create_post click toggleEmojiPicker" name="components/create_post click toggleEmojiPicker" time="0.016">
    </testcase>
    <testcase classname="components/create_post Check for emoji click message states" name="components/create_post Check for emoji click message states" time="0.01">
    </testcase>
    <testcase classname="components/create_post onChange textbox should call setDraft and change message state" name="components/create_post onChange textbox should call setDraft and change message state" time="0.004">
    </testcase>
    <testcase classname="components/create_post onKeyPress textbox should call emitLocalUserTypingEvent" name="components/create_post onKeyPress textbox should call emitLocalUserTypingEvent" time="0.003">
    </testcase>
    <testcase classname="components/create_post onSubmit test for @all" name="components/create_post onSubmit test for @all" time="0.008">
    </testcase>
    <testcase classname="components/create_post onSubmit test for @all with timezones" name="components/create_post onSubmit test for @all with timezones" time="0.008">
    </testcase>
    <testcase classname="components/create_post onSubmit test for @all with timezones disabled" name="components/create_post onSubmit test for @all with timezones disabled" time="0.007">
    </testcase>
    <testcase classname="components/create_post onSubmit test for &quot;/header&quot; message" name="components/create_post onSubmit test for &quot;/header&quot; message" time="0.003">
    </testcase>
    <testcase classname="components/create_post onSubmit test for &quot;/purpose&quot; message" name="components/create_post onSubmit test for &quot;/purpose&quot; message" time="0.003">
    </testcase>
    <testcase classname="components/create_post onSubmit test for &quot;/rename&quot; message" name="components/create_post onSubmit test for &quot;/rename&quot; message" time="0.002">
    </testcase>
    <testcase classname="components/create_post onSubmit test for &quot;/unknown&quot; message " name="components/create_post onSubmit test for &quot;/unknown&quot; message " time="0.004">
    </testcase>
    <testcase classname="components/create_post onSubmit test for addReaction message" name="components/create_post onSubmit test for addReaction message" time="0.003">
    </testcase>
    <testcase classname="components/create_post onSubmit test for removeReaction message" name="components/create_post onSubmit test for removeReaction message" time="0.008">
    </testcase>
    <testcase classname="components/create_post check for handleFileUploadChange callback for focus" name="components/create_post check for handleFileUploadChange callback for focus" time="0.001">
    </testcase>
    <testcase classname="components/create_post check for handleFileUploadStart callback" name="components/create_post check for handleFileUploadStart callback" time="0.001">
    </testcase>
    <testcase classname="components/create_post check for handleFileUploadComplete callback" name="components/create_post check for handleFileUploadComplete callback" time="0.002">
    </testcase>
    <testcase classname="components/create_post check for handleUploadError callback" name="components/create_post check for handleUploadError callback" time="0.003">
    </testcase>
    <testcase classname="components/create_post check for uploadsProgressPercent state on handleUploadProgress callback" name="components/create_post check for uploadsProgressPercent state on handleUploadProgress callback" time="0.004">
    </testcase>
    <testcase classname="components/create_post Remove preview from fileInfos" name="components/create_post Remove preview from fileInfos" time="0.002">
    </testcase>
    <testcase classname="components/create_post Should call Shortcut modal on FORWARD_SLASH+cntrl/meta" name="components/create_post Should call Shortcut modal on FORWARD_SLASH+cntrl/meta" time="0.002">
    </testcase>
    <testcase classname="components/create_post Should just return as ctrlSend is enabled and its ctrl+enter" name="components/create_post Should just return as ctrlSend is enabled and its ctrl+enter" time="0.001">
    </testcase>
    <testcase classname="components/create_post Should call edit action as comment for arrow up" name="components/create_post Should call edit action as comment for arrow up" time="0.002">
    </testcase>
    <testcase classname="components/create_post Should call edit action as post for arrow up" name="components/create_post Should call edit action as post for arrow up" time="0.001">
    </testcase>
    <testcase classname="components/create_post Should call moveHistoryIndexForward as ctrlKey and down arrow" name="components/create_post Should call moveHistoryIndexForward as ctrlKey and down arrow" time="0.002">
    </testcase>
    <testcase classname="components/create_post Should call moveHistoryIndexBack as ctrlKey and up arrow" name="components/create_post Should call moveHistoryIndexBack as ctrlKey and up arrow" time="0.001">
    </testcase>
    <testcase classname="components/create_post Show tutorial" name="components/create_post Show tutorial" time="0.003">
    </testcase>
    <testcase classname="components/create_post Toggle showPostDeletedModal state" name="components/create_post Toggle showPostDeletedModal state" time="0.003">
    </testcase>
    <testcase classname="components/create_post Should have called actions.onSubmitPost on sendMessage" name="components/create_post Should have called actions.onSubmitPost on sendMessage" time="0.002">
    </testcase>
    <testcase classname="components/create_post Should have called actions.selectPostFromRightHandSideSearchByPostId on replyToLastPost" name="components/create_post Should have called actions.selectPostFromRightHandSideSearchByPostId on replyToLastPost" time="0.003">
    </testcase>
    <testcase classname="components/create_post should match snapshot for read only channel" name="components/create_post should match snapshot for read only channel" time="0.002">
    </testcase>
    <testcase classname="components/create_post should match snapshot when file upload disabled" name="components/create_post should match snapshot when file upload disabled" time="0.002">
    </testcase>
    <testcase classname="components/create_post should allow to force send invalid slash command as a message" name="components/create_post should allow to force send invalid slash command as a message" time="0.009">
    </testcase>
    <testcase classname="components/create_post should throw away invalid command error if user resumes typing" name="components/create_post should throw away invalid command error if user resumes typing" time="0.012">
    </testcase>
    <testcase classname="components/create_post should be able to format a pasted markdown table" name="components/create_post should be able to format a pasted markdown table" time="0.003">
    </testcase>
    <testcase classname="components/create_post should be preserve message when pasting a markdown table" name="components/create_post should be preserve message when pasting a markdown table" time="0.003">
    </testcase>
    <testcase classname="components/create_post should not enable the save button when message empty" name="components/create_post should not enable the save button when message empty" time="0.002">
    </testcase>
    <testcase classname="components/create_post should enable the save button when message not empty" name="components/create_post should enable the save button when message not empty" time="0.002">
    </testcase>
    <testcase classname="components/create_post should enable the save button when a file is available for upload" name="components/create_post should enable the save button when a file is available for upload" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="component/sidebar/sidebar_channel/SidebarChannel" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:17" time="0.656" tests="15">
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on sidebar show" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on sidebar show" time="0.007">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on sidebar show with favorites" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on sidebar show with favorites" time="0.005">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on sidebar show with unreads" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on sidebar show with unreads" time="0.004">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on sidebar not show the channel switcher" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, on sidebar not show the channel switcher" time="0.004">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, when render as an empty div because no have a team or a user" name="component/sidebar/sidebar_channel/SidebarChannel should match snapshot, when render as an empty div because no have a team or a user" time="0.002">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel navigate to the next/prev channels" name="component/sidebar/sidebar_channel/SidebarChannel navigate to the next/prev channels" time="0.017">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel navigate to the next/prev unread channels" name="component/sidebar/sidebar_channel/SidebarChannel navigate to the next/prev unread channels" time="0.008">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel open direct channel selector on CTRL/CMD+SHIFT+K" name="component/sidebar/sidebar_channel/SidebarChannel open direct channel selector on CTRL/CMD+SHIFT+K" time="0.002">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel set correctly the title when needed" name="component/sidebar/sidebar_channel/SidebarChannel set correctly the title when needed" time="0.003">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should show/hide correctly more channels modal" name="component/sidebar/sidebar_channel/SidebarChannel should show/hide correctly more channels modal" time="0.014">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should show/hide correctly new channel modal" name="component/sidebar/sidebar_channel/SidebarChannel should show/hide correctly new channel modal" time="0.007">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should show/hide correctly more direct channels modal" name="component/sidebar/sidebar_channel/SidebarChannel should show/hide correctly more direct channels modal" time="0.009">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should verify if the channel is displayed for props" name="component/sidebar/sidebar_channel/SidebarChannel should verify if the channel is displayed for props" time="0.002">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should handle correctly open more direct channels toggle" name="component/sidebar/sidebar_channel/SidebarChannel should handle correctly open more direct channels toggle" time="0.003">
    </testcase>
    <testcase classname="component/sidebar/sidebar_channel/SidebarChannel should listen/unlisten keydown events" name="component/sidebar/sidebar_channel/SidebarChannel should listen/unlisten keydown events" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/EditChannelHeaderModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:18" time="0.647" tests="11">
    <testcase classname="components/EditChannelHeaderModal should match snapshot, init" name="components/EditChannelHeaderModal should match snapshot, init" time="0.004">
    </testcase>
    <testcase classname="components/EditChannelHeaderModal edit direct message channel" name="components/EditChannelHeaderModal edit direct message channel" time="0.003">
    </testcase>
    <testcase classname="components/EditChannelHeaderModal submitted" name="components/EditChannelHeaderModal submitted" time="0.002">
    </testcase>
    <testcase classname="components/EditChannelHeaderModal error with intl message" name="components/EditChannelHeaderModal error with intl message" time="0.003">
    </testcase>
    <testcase classname="components/EditChannelHeaderModal error without intl message" name="components/EditChannelHeaderModal error without intl message" time="0.003">
    </testcase>
    <testcase classname="components/EditChannelHeaderModal should match state and called actions on handleSave" name="components/EditChannelHeaderModal should match state and called actions on handleSave" time="0.004">
    </testcase>
    <testcase classname="components/EditChannelHeaderModal change header" name="components/EditChannelHeaderModal change header" time="0.005">
    </testcase>
    <testcase classname="components/EditChannelHeaderModal patch on save button click" name="components/EditChannelHeaderModal patch on save button click" time="0.004">
    </testcase>
    <testcase classname="components/EditChannelHeaderModal patch on enter keypress event with ctrl" name="components/EditChannelHeaderModal patch on enter keypress event with ctrl" time="0.003">
    </testcase>
    <testcase classname="components/EditChannelHeaderModal patch on enter keypress" name="components/EditChannelHeaderModal patch on enter keypress" time="0.003">
    </testcase>
    <testcase classname="components/EditChannelHeaderModal patch on enter keydown" name="components/EditChannelHeaderModal patch on enter keydown" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/inputs/ChannelsInput" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:18" time="0.146" tests="1">
    <testcase classname="components/widgets/inputs/ChannelsInput should match snapshot" name="components/widgets/inputs/ChannelsInput should match snapshot" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/login/LoginController" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:18" time="0.527" tests="6">
    <testcase classname="components/login/LoginController should match snapshot" name="components/login/LoginController should match snapshot" time="0.004">
    </testcase>
    <testcase classname="components/login/LoginController should match snapshot when expired" name="components/login/LoginController should match snapshot when expired" time="0.003">
    </testcase>
    <testcase classname="components/login/LoginController should match snapshot when initializing" name="components/login/LoginController should match snapshot when initializing" time="0.001">
    </testcase>
    <testcase classname="components/login/LoginController should show session expiry notification" name="components/login/LoginController should show session expiry notification" time="0.003">
    </testcase>
    <testcase classname="components/login/LoginController should suppress session expiry notification on sign in change" name="components/login/LoginController should suppress session expiry notification on sign in change" time="0.005">
    </testcase>
    <testcase classname="components/login/LoginController should discard session expiry notification on failed sign in" name="components/login/LoginController should discard session expiry notification on failed sign in" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/ShortcutsModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:19" time="0.161" tests="2">
    <testcase classname="components/ShortcutsModal should match snapshot modal for Mac" name="components/ShortcutsModal should match snapshot modal for Mac" time="0.014">
    </testcase>
    <testcase classname="components/ShortcutsModal should match snapshot modal for non-Mac like Windows/Linux" name="components/ShortcutsModal should match snapshot modal for non-Mac like Windows/Linux" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="components/PasswordResetForm" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:19" time="0.192" tests="2">
    <testcase classname="components/PasswordResetForm should match snapshot" name="components/PasswordResetForm should match snapshot" time="0.002">
    </testcase>
    <testcase classname="components/PasswordResetForm should call the resetUserPassword() action on submit" name="components/PasswordResetForm should call the resetUserPassword() action on submit" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="components/AboutBuildModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:19" time="0.265" tests="6">
    <testcase classname="components/AboutBuildModal should match snapshot for enterprise edition" name="components/AboutBuildModal should match snapshot for enterprise edition" time="0.009">
    </testcase>
    <testcase classname="components/AboutBuildModal should match snapshot for team edition" name="components/AboutBuildModal should match snapshot for team edition" time="0.006">
    </testcase>
    <testcase classname="components/AboutBuildModal should show dev if this is a dev build" name="components/AboutBuildModal should show dev if this is a dev build" time="0.007">
    </testcase>
    <testcase classname="components/AboutBuildModal should show ci if a ci build" name="components/AboutBuildModal should show ci if a ci build" time="0.011">
    </testcase>
    <testcase classname="components/AboutBuildModal should call onHide callback when the modal is hidden" name="components/AboutBuildModal should call onHide callback when the modal is hidden" time="0.032">
    </testcase>
    <testcase classname="components/AboutBuildModal should show default tos and privacy policy links and not the config links" name="components/AboutBuildModal should show default tos and privacy policy links and not the config links" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="components/ChannelHeaderMobile/ChannelInfoButton" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:20" time="0.39" tests="2">
    <testcase classname="components/ChannelHeaderMobile/ChannelInfoButton should match snapshot, with channel header" name="components/ChannelHeaderMobile/ChannelInfoButton should match snapshot, with channel header" time="0.011">
    </testcase>
    <testcase classname="components/ChannelHeaderMobile/ChannelInfoButton should match snapshot, without channel header" name="components/ChannelHeaderMobile/ChannelInfoButton should match snapshot, without channel header" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="components/localized_input/localized_input" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:20" time="0.133" tests="2">
    <testcase classname="components/localized_input/localized_input should match snapshot" name="components/localized_input/localized_input should match snapshot" time="0.011">
    </testcase>
    <testcase classname="components/localized_input/localized_input ref should properly be forwarded" name="components/localized_input/localized_input ref should properly be forwarded" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="components/emoji/components/DeleteEmoji" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:20" time="0.406" tests="4">
    <testcase classname="components/emoji/components/DeleteEmoji title should match the of delete emoji title" name="components/emoji/components/DeleteEmoji title should match the of delete emoji title" time="0.008">
    </testcase>
    <testcase classname="components/emoji/components/DeleteEmoji modal title should match the of delete emoji modal title" name="components/emoji/components/DeleteEmoji modal title should match the of delete emoji modal title" time="0.002">
    </testcase>
    <testcase classname="components/emoji/components/DeleteEmoji modal message should match the of delete emoji modal message" name="components/emoji/components/DeleteEmoji modal message should match the of delete emoji modal message" time="0.003">
    </testcase>
    <testcase classname="components/emoji/components/DeleteEmoji modal confirmation button should match the of delete emoji modal confirmation button" name="components/emoji/components/DeleteEmoji modal confirmation button should match the of delete emoji modal confirmation button" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/request_button/request_button.jsx" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:20" time="0.435" tests="5">
    <testcase classname="components/admin_console/request_button/request_button.jsx should match snapshot" name="components/admin_console/request_button/request_button.jsx should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/admin_console/request_button/request_button.jsx should call saveConfig and request actions when saveNeeded is true" name="components/admin_console/request_button/request_button.jsx should call saveConfig and request actions when saveNeeded is true" time="0.011">
    </testcase>
    <testcase classname="components/admin_console/request_button/request_button.jsx should call only request action when saveNeeded is false" name="components/admin_console/request_button/request_button.jsx should call only request action when saveNeeded is false" time="0.004">
    </testcase>
    <testcase classname="components/admin_console/request_button/request_button.jsx should match snapshot with successMessage" name="components/admin_console/request_button/request_button.jsx should match snapshot with successMessage" time="0.008">
    </testcase>
    <testcase classname="components/admin_console/request_button/request_button.jsx should match snapshot with request error" name="components/admin_console/request_button/request_button.jsx should match snapshot with request error" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="components/NewChannelModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:21" time="0.559" tests="11">
    <testcase classname="components/NewChannelModal should match snapshot, modal not showing" name="components/NewChannelModal should match snapshot, modal not showing" time="0.008">
    </testcase>
    <testcase classname="components/NewChannelModal should match snapshot, modal showing" name="components/NewChannelModal should match snapshot, modal showing" time="0.007">
    </testcase>
    <testcase classname="components/NewChannelModal should match snapshot, display only public channel option" name="components/NewChannelModal should match snapshot, display only public channel option" time="0.005">
    </testcase>
    <testcase classname="components/NewChannelModal should match snapshot, display only private channel option" name="components/NewChannelModal should match snapshot, display only private channel option" time="0.005">
    </testcase>
    <testcase classname="components/NewChannelModal should match snapshot, private channel filled in header and purpose" name="components/NewChannelModal should match snapshot, private channel filled in header and purpose" time="0.015">
    </testcase>
    <testcase classname="components/NewChannelModal should match snapshot, on displayNameError" name="components/NewChannelModal should match snapshot, on displayNameError" time="0.005">
    </testcase>
    <testcase classname="components/NewChannelModal should match snapshot, on serverError" name="components/NewChannelModal should match snapshot, on serverError" time="0.004">
    </testcase>
    <testcase classname="components/NewChannelModal should match when handleChange is called" name="components/NewChannelModal should match when handleChange is called" time="0.036">
    </testcase>
    <testcase classname="components/NewChannelModal should match when handleSubmit is called" name="components/NewChannelModal should match when handleSubmit is called" time="0.02">
    </testcase>
    <testcase classname="components/NewChannelModal should have called handleSubmit on onEnterKeyDown" name="components/NewChannelModal should have called handleSubmit on onEnterKeyDown" time="0.003">
    </testcase>
    <testcase classname="components/NewChannelModal should clear the display name error when showing" name="components/NewChannelModal should clear the display name error when showing" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="components/ChannelInfoModal" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:21" time="0.173" tests="4">
    <testcase classname="components/ChannelInfoModal should match snapshot when modal is showing" name="components/ChannelInfoModal should match snapshot when modal is showing" time="0.004">
    </testcase>
    <testcase classname="components/ChannelInfoModal should match snapshot when modal is not showing" name="components/ChannelInfoModal should match snapshot when modal is not showing" time="0.002">
    </testcase>
    <testcase classname="components/ChannelInfoModal should call onHide callback when modal is hidden" name="components/ChannelInfoModal should call onHide callback when modal is hidden" time="0.019">
    </testcase>
    <testcase classname="components/ChannelInfoModal shouldComponentUpdate returns the correct results" name="components/ChannelInfoModal shouldComponentUpdate returns the correct results" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/mfa/components/Confirm" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:22" time="0.482" tests="3">
    <testcase classname="components/mfa/components/Confirm should match snapshot" name="components/mfa/components/Confirm should match snapshot" time="0.005">
    </testcase>
    <testcase classname="components/mfa/components/Confirm should submit on form submit" name="components/mfa/components/Confirm should submit on form submit" time="0.011">
    </testcase>
    <testcase classname="components/mfa/components/Confirm should submit on enter" name="components/mfa/components/Confirm should submit on enter" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="/components/create_team/components/display_name" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:22" time="0.59" tests="7">
    <testcase classname="/components/create_team/components/display_name should match snapshot" name="/components/create_team/components/display_name should match snapshot" time="0.007">
    </testcase>
    <testcase classname="/components/create_team/components/display_name should return to display_name.jsx page" name="/components/create_team/components/display_name should return to display_name.jsx page" time="0.028">
    </testcase>
    <testcase classname="/components/create_team/components/display_name should successfully submit" name="/components/create_team/components/display_name should successfully submit" time="0.012">
    </testcase>
    <testcase classname="/components/create_team/components/display_name should display isRequired error" name="/components/create_team/components/display_name should display isRequired error" time="0.008">
    </testcase>
    <testcase classname="/components/create_team/components/display_name should display charLength error" name="/components/create_team/components/display_name should display charLength error" time="0.013">
    </testcase>
    <testcase classname="/components/create_team/components/display_name should display teamUrl regex error" name="/components/create_team/components/display_name should display teamUrl regex error" time="0.008">
    </testcase>
    <testcase classname="/components/create_team/components/display_name should display teamUrl taken error" name="/components/create_team/components/display_name should display teamUrl taken error" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="components/select_team/components/SelectTeamItem" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:23" time="0.509" tests="8">
    <testcase classname="components/select_team/components/SelectTeamItem should match snapshot, on public joinable" name="components/select_team/components/SelectTeamItem should match snapshot, on public joinable" time="0.003">
    </testcase>
    <testcase classname="components/select_team/components/SelectTeamItem should match snapshot, on public not joinable" name="components/select_team/components/SelectTeamItem should match snapshot, on public not joinable" time="0.001">
    </testcase>
    <testcase classname="components/select_team/components/SelectTeamItem should match snapshot, on private joinable" name="components/select_team/components/SelectTeamItem should match snapshot, on private joinable" time="0.002">
    </testcase>
    <testcase classname="components/select_team/components/SelectTeamItem should match snapshot, on private not joinable" name="components/select_team/components/SelectTeamItem should match snapshot, on private not joinable" time="0.001">
    </testcase>
    <testcase classname="components/select_team/components/SelectTeamItem should match snapshot, on loading" name="components/select_team/components/SelectTeamItem should match snapshot, on loading" time="0.001">
    </testcase>
    <testcase classname="components/select_team/components/SelectTeamItem should match snapshot, with description" name="components/select_team/components/SelectTeamItem should match snapshot, with description" time="0.002">
    </testcase>
    <testcase classname="components/select_team/components/SelectTeamItem should call props.onTeamClick on handleTeamClick" name="components/select_team/components/SelectTeamItem should call props.onTeamClick on handleTeamClick" time="0.001">
    </testcase>
    <testcase classname="components/select_team/components/SelectTeamItem should not call props.onTeamClick on handleTeamClick when you cant join the team" name="components/select_team/components/SelectTeamItem should not call props.onTeamClick on handleTeamClick when you cant join the team" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="/components/create_team/components/display_name" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:23" time="0.379" tests="4">
    <testcase classname="/components/create_team/components/display_name should match snapshot" name="/components/create_team/components/display_name should match snapshot" time="0.003">
    </testcase>
    <testcase classname="/components/create_team/components/display_name should run updateParent function" name="/components/create_team/components/display_name should run updateParent function" time="0.015">
    </testcase>
    <testcase classname="/components/create_team/components/display_name should display isRequired error" name="/components/create_team/components/display_name should display isRequired error" time="0.006">
    </testcase>
    <testcase classname="/components/create_team/components/display_name should display charLength error" name="/components/create_team/components/display_name should display charLength error" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="components/widgets/loadingLoadingSpinner" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:24" time="0.116" tests="2">
    <testcase classname="components/widgets/loadingLoadingSpinner showing spinner with text" name="components/widgets/loadingLoadingSpinner showing spinner with text" time="0.003">
    </testcase>
    <testcase classname="components/widgets/loadingLoadingSpinner showing spinner without text" name="components/widgets/loadingLoadingSpinner showing spinner without text" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="components/admin_console/jobs/table" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:24" time="0.383" tests="3">
    <testcase classname="components/admin_console/jobs/table should match snapshot, init" name="components/admin_console/jobs/table should match snapshot, init" time="0.013">
    </testcase>
    <testcase classname="components/admin_console/jobs/table should call create job func" name="components/admin_console/jobs/table should call create job func" time="0.016">
    </testcase>
    <testcase classname="components/admin_console/jobs/table should call cancel job func" name="components/admin_console/jobs/table should call cancel job func" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="components/FileUpload" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:24" time="0.485" tests="16">
    <testcase classname="components/FileUpload should match snapshot" name="components/FileUpload should match snapshot" time="0.005">
    </testcase>
    <testcase classname="components/FileUpload should call onClick when fileInput is clicked" name="components/FileUpload should call onClick when fileInput is clicked" time="0.002">
    </testcase>
    <testcase classname="components/FileUpload should call onClick on fileInput when button is touched" name="components/FileUpload should call onClick on fileInput when button is touched" time="0.003">
    </testcase>
    <testcase classname="components/FileUpload should match state and call handleMaxUploadReached or props.onClick on handleLocalFileUploaded" name="components/FileUpload should match state and call handleMaxUploadReached or props.onClick on handleLocalFileUploaded" time="0.003">
    </testcase>
    <testcase classname="components/FileUpload should props.onFileUpload when fileUploadSuccess is called" name="components/FileUpload should props.onFileUpload when fileUploadSuccess is called" time="0.002">
    </testcase>
    <testcase classname="components/FileUpload should props.onUploadError when fileUploadFail is called" name="components/FileUpload should props.onUploadError when fileUploadFail is called" time="0.002">
    </testcase>
    <testcase classname="components/FileUpload should upload file on paste when File constructor is supported" name="components/FileUpload should upload file on paste when File constructor is supported" time="0.003">
    </testcase>
    <testcase classname="components/FileUpload should upload file on paste when File constructor is not supported" name="components/FileUpload should upload file on paste when File constructor is not supported" time="0.003">
    </testcase>
    <testcase classname="components/FileUpload should have props.functions when uploadFiles is called" name="components/FileUpload should have props.functions when uploadFiles is called" time="0.002">
    </testcase>
    <testcase classname="components/FileUpload should error max upload files" name="components/FileUpload should error max upload files" time="0.002">
    </testcase>
    <testcase classname="components/FileUpload should error max upload files" name="components/FileUpload should error max upload files" time="0.001">
    </testcase>
    <testcase classname="components/FileUpload should error max too large files" name="components/FileUpload should error max too large files" time="0.011">
    </testcase>
    <testcase classname="components/FileUpload should functions when handleChange is called" name="components/FileUpload should functions when handleChange is called" time="0.001">
    </testcase>
    <testcase classname="components/FileUpload should functions when handleDrop is called" name="components/FileUpload should functions when handleDrop is called" time="0.002">
    </testcase>
    <testcase classname="components/FileUpload FilesWillUploadHook - should reject all files" name="components/FileUpload FilesWillUploadHook - should reject all files" time="0.001">
    </testcase>
    <testcase classname="components/FileUpload FilesWillUploadHook - should reject one file and allow one file" name="components/FileUpload FilesWillUploadHook - should reject one file and allow one file" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="components/PasswordResetSendLink" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:25" time="0.186" tests="2">
    <testcase classname="components/PasswordResetSendLink should match snapshot" name="components/PasswordResetSendLink should match snapshot" time="0.003">
    </testcase>
    <testcase classname="components/PasswordResetSendLink should calls sendPasswordResetEmail() action on submit" name="components/PasswordResetSendLink should calls sendPasswordResetEmail() action on submit" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="plugins/MainMenuActions" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:25" time="0.428" tests="1">
    <testcase classname="plugins/MainMenuActions should match snapshot and click plugin item for main menu" name="plugins/MainMenuActions should match snapshot and click plugin item for main menu" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="components/post_view/DateSeparator" errors="0" failures="0" skipped="0" timestamp="2019-11-15T11:50:25" time="0.147" tests="3">
    <testcase classname="components/post_view/DateSeparator should render date without timezone" name="components/post_view/DateSeparator should render date without timezone" time="0.011">
    </testcase>
    <testcase classname="components/post_view/DateSeparator should render date without timezone enabled" name="components/post_view/DateSeparator should render date without timezone enabled" time="0.003">
    </testcase>
    <testcase classname="components/post_view/DateSeparator should render date with timezone enabled" name="components/post_view/DateSeparator should render date with timezone enabled" time="0.003">
    </testcase>
  </testsuite>
</testsuites>